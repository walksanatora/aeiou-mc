/* Automatically generated by wasm2kotlin */
package net.walksanator.aeiou.wasm

import wasm_rt_impl.btoInt
import wasm_rt_impl.btoLong
import wasm_rt_impl.isz
import wasm_rt_impl.inz
import wasm_rt_impl.select
@Suppress("NAME_SHADOWING", "UNUSED_VALUE", "UNUSED_VARIABLE", "UNUSED_PARAMETER", "UNREACHABLE_CODE", "UNUSED_EXPRESSION", "VARIABLE_WITH_REDUNDANT_INITIALIZER", "ASSIGNED_BUT_NEVER_ACCESSED_VARIABLE")
class SamWasm (moduleRegistry: wasm_rt_impl.ModuleRegistry, name: String){
  private class Delegate(
    var level: Int,
    val ex: Exception,
): Throwable(null, null, false, false);

  private val func_types: IntArray = IntArray(19)
  
  init /* func_types */{
    func_types[0] = wasm_rt_impl.register_func_type(3, 1, Int::class, Int::class, Int::class, Int::class);
    func_types[1] = wasm_rt_impl.register_func_type(6, 1, Int::class, Double::class, Int::class, Int::class, Int::class, Int::class, Int::class);
    func_types[2] = wasm_rt_impl.register_func_type(2, 0, Int::class, Int::class);
    func_types[3] = wasm_rt_impl.register_func_type(1, 0, Int::class);
    func_types[4] = wasm_rt_impl.register_func_type(1, 1, Int::class, Int::class);
    func_types[5] = wasm_rt_impl.register_func_type(4, 1, Int::class, Int::class, Int::class, Int::class, Int::class);
    func_types[6] = wasm_rt_impl.register_func_type(4, 1, Int::class, Long::class, Int::class, Int::class, Int::class);
    func_types[7] = wasm_rt_impl.register_func_type(0, 0);
    func_types[8] = wasm_rt_impl.register_func_type(2, 1, Int::class, Int::class, Int::class);
    func_types[9] = wasm_rt_impl.register_func_type(0, 1, Int::class);
    func_types[10] = wasm_rt_impl.register_func_type(4, 0, Int::class, Int::class, Int::class, Int::class);
    func_types[11] = wasm_rt_impl.register_func_type(3, 0, Int::class, Int::class, Int::class);
    func_types[12] = wasm_rt_impl.register_func_type(8, 0, Int::class, Int::class, Int::class, Int::class, Int::class, Int::class, Int::class, Int::class);
    func_types[13] = wasm_rt_impl.register_func_type(3, 1, Int::class, Long::class, Int::class, Long::class);
    func_types[14] = wasm_rt_impl.register_func_type(5, 1, Int::class, Int::class, Int::class, Int::class, Int::class, Int::class);
    func_types[15] = wasm_rt_impl.register_func_type(7, 1, Int::class, Int::class, Int::class, Int::class, Int::class, Int::class, Int::class, Int::class);
    func_types[16] = wasm_rt_impl.register_func_type(3, 1, Long::class, Int::class, Int::class, Int::class);
    func_types[17] = wasm_rt_impl.register_func_type(2, 1, Long::class, Int::class, Int::class);
    func_types[18] = wasm_rt_impl.register_func_type(5, 0, Int::class, Int::class, Int::class, Int::class, Int::class);
  }
  
  /* import: 'env' 'memory' */
  private val w2k_Z_memory: wasm_rt_impl.Memory = moduleRegistry.importMemory("Z_env", "Z_memory");
  /* import: 'env' 'emscripten_notify_memory_growth' */
  private val w2k_Z_emscripten_notify_memory_growth: (Int) -> Unit = moduleRegistry.importFunc("Z_env", "Z_emscripten_notify_memory_growth");
  /* import: 'wasi_snapshot_preview1' 'fd_close' */
  private val w2k_Z_fd_close: (Int) -> Int = moduleRegistry.importFunc("Z_wasi_snapshot_preview1", "Z_fd_close");
  /* import: 'wasi_snapshot_preview1' 'fd_write' */
  private val w2k_Z_fd_write: (Int, Int, Int, Int) -> Int = moduleRegistry.importFunc("Z_wasi_snapshot_preview1", "Z_fd_write");
  /* import: 'wasi_snapshot_preview1' 'fd_seek' */
  private val w2k_Z_fd_seek: (Int, Long, Int, Int) -> Int = moduleRegistry.importFunc("Z_wasi_snapshot_preview1", "Z_fd_seek");
  
  private var w2k___stack_pointer: Int;
  
  init /* globals */ {
    w2k___stack_pointer = 48736;
  }
  
  private var w2k___indirect_function_table: wasm_rt_impl.Table = wasm_rt_impl.Table(5, 5);
  
  init /* exports */ {
    /* export: 'malloc' */
    moduleRegistry.exportFunc(name, "Z_malloc", this@SamWasm::w2k_dlmalloc);
    /* export: 'setupSpeak' */
    moduleRegistry.exportFunc(name, "Z_setupSpeak", this@SamWasm::w2k_setupSpeak);
    /* export: 'speakText' */
    moduleRegistry.exportFunc(name, "Z_speakText", this@SamWasm::w2k_speakText);
    /* export: '_initialize' */
    moduleRegistry.exportFunc(name, "Z__initialize", this@SamWasm::w2k__initialize);
    /* export: '__indirect_function_table' */
    moduleRegistry.exportTable(name, "Z___indirect_function_table", w2k___indirect_function_table);
    /* export: '__errno_location' */
    moduleRegistry.exportFunc(name, "Z___errno_location", this@SamWasm::w2k___errno_location);
    /* export: 'free' */
    moduleRegistry.exportFunc(name, "Z_free", this@SamWasm::w2k_dlfree);
    /* export: 'stackSave' */
    moduleRegistry.exportFunc(name, "Z_stackSave", this@SamWasm::w2k_stackSave);
    /* export: 'stackRestore' */
    moduleRegistry.exportFunc(name, "Z_stackRestore", this@SamWasm::w2k_stackRestore);
    /* export: 'stackAlloc' */
    moduleRegistry.exportFunc(name, "Z_stackAlloc", this@SamWasm::w2k_stackAlloc);
  }
  
  fun w2k___wasm_call_ctors(): Unit{
    try {
      w2k_Bfunc@ do {
        w2k_init_pthread_self();
      } while (false);
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_Code37055(w2k_p0: Int): Unit{
    var w2k_p0 = w2k_p0;
    try {
      w2k_Bfunc@ do {
        w2k_Z_memory.i32_store8(0, 59136, (w2k_p0 + (-1)).also {w2k_p0=it});
        w2k_Z_memory.i32_store8(0, 59409, (w2k_Z_memory.i32_load8_u((w2k_p0 and 255) + 59152)).also {w2k_p0=it});
        w2k_Z_memory.i32_store8(0, 59408, w2k_Z_memory.i32_load8_u(w2k_p0 + 48736));
      } while (false);
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_Code37066(w2k_p0: Int): Unit{
    var w2k_p0 = w2k_p0;
    try {
      w2k_Bfunc@ do {
        w2k_Z_memory.i32_store8(0, 59136, (w2k_p0 + 1).also {w2k_p0=it});
        w2k_Z_memory.i32_store8(0, 59409, (w2k_Z_memory.i32_load8_u((w2k_p0 and 255) + 59152)).also {w2k_p0=it});
        w2k_Z_memory.i32_store8(0, 59408, w2k_Z_memory.i32_load8_u(w2k_p0 + 48736));
      } while (false);
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_GetRuleByte(w2k_p0: Int, w2k_p1: Int): Int{
    var w2k_p0 = w2k_p0;
    var w2k_p1 = w2k_p1;
    try {
          var w2k_i0: Int = 0
      w2k_Bfunc@ do {
        w2k_B0@ do {
          w2k_B1@ do {
            if (((java.lang.Integer.compareUnsigned(w2k_p0, 37541)<0).btoInt()).inz()){
              break@w2k_B1;}
            w2k_p0 = w2k_p0 + w2k_p1 + 52928 + (-37541);
            break@w2k_B0;
          } while (false);
          w2k_p0 = w2k_p0 + w2k_p1 + 48848 + (-32000);
        } while (false);
        w2k_i0 = w2k_Z_memory.i32_load8_u(w2k_p0);
      } while (false);
      return w2k_i0;
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_TextToPhonemes(w2k_p0: Int): Int{
    var w2k_p0 = w2k_p0;
    var w2k_l1: Int = 0
    var w2k_l2: Int = 0
    var w2k_l3: Int = 0
    var w2k_l4: Int = 0
    var w2k_l5: Int = 0
    var w2k_l6: Int = 0
    var w2k_l7: Int = 0
    var w2k_l8: Int = 0
    var w2k_l9: Int = 0
    var w2k_l10: Int = 0
    var w2k_l11: Int = 0
    var w2k_l12: Int = 0
    var w2k_l13: Int = 0
    var w2k_l14: Int = 0
    try {
          var w2k_i0: Int = 0
      w2k_Bfunc@ do {
        w2k_Z_memory.i32_store8(0, 59136, 1);
        w2k_Z_memory.i32_store8(0, 59152, 32);
        w2k_Z_memory.i32_store8(0, 59409, 0);
        w2k_l1 = 0;
        w2k_l2 = 1;
        w2k_L0@ while (true) {
          w2k_Z_memory.i32_store8(0, 59408, ((w2k_Z_memory.i32_load8_u(w2k_p0 + w2k_l1)).also {w2k_l3=it} and 127).also {w2k_l4=it});
          w2k_l5 = 95;
          w2k_B1@ do {
            w2k_B2@ do {
              if (((java.lang.Integer.compareUnsigned(w2k_l4, 111)>0).btoInt()).inz()){
                break@w2k_B2;}
              w2k_l5 = 79;
              if (((java.lang.Integer.compareUnsigned(w2k_l4, 96)<0).btoInt()).inz()){
                break@w2k_B1;}
            } while (false);
            w2k_Z_memory.i32_store8(0, 59408, (w2k_l3 and w2k_l5).also {w2k_l4=it});
          } while (false);
          w2k_Z_memory.i32_store8(w2k_l2 + 59152, w2k_l4);
          w2k_Z_memory.i32_store8(0, 59409, (w2k_l1 + 1).also {w2k_l1=it});
          w2k_Z_memory.i32_store8(0, 59136, (w2k_l2 + 1).also {w2k_l2=it});
          if (((w2k_l1 != 255).btoInt()).inz()){
            continue@w2k_L0;}
          break;
        }
        w2k_Z_memory.i32_store8(0, 59407, 27);
        w2k_l6 = 255;
        w2k_l3 = 255;
        w2k_B3@ do {
          w2k_L4@ while (true) {
            w2k_Z_memory.i32_store8(0, 59136, (w2k_l3 + 1).also {w2k_l7=it});
            w2k_Z_memory.i32_store8(0, 59408, (w2k_Z_memory.i32_load8_u((w2k_l7 and 255) + 59152)).also {w2k_l4=it});
            w2k_B5@ do {
              w2k_B6@ do {
                if (((w2k_l4 == 46).btoInt()).inz()){
                  break@w2k_B6;}
                w2k_l2 = w2k_l7;
                if (((w2k_l4 != 91).btoInt()).inz()){
                  break@w2k_B5;}
                w2k_Z_memory.i32_store8(0, 59408, 155);
                w2k_Z_memory.i32_store8(0, 59136, (w2k_l6 + 1).also {w2k_l4=it});
                w2k_Z_memory.i32_store8(w2k_p0 + (w2k_l4 and 255), 155);
                w2k_i0 = 1; break@w2k_Bfunc;
              } while (false);
              w2k_Z_memory.i32_store8(0, 59136, (w2k_l3 + 2).also {w2k_l2=it});
              w2k_Z_memory.i32_store8(0, 59409, (w2k_Z_memory.i32_load8_u((w2k_l2 and 255) + 59152)).also {w2k_l1=it});
              w2k_Z_memory.i32_store8(0, 59408, (w2k_Z_memory.i32_load8_u(w2k_l1 + 48736) and 1).also {w2k_l1=it});
              if ((w2k_l1).inz()){
                break@w2k_B5;}
              w2k_Z_memory.i32_store8(0, 59408, 46);
              w2k_Z_memory.i32_store8(0, 59136, (w2k_l6 + 1).also {w2k_l6=it});
              w2k_Z_memory.i32_store8(w2k_p0 + (w2k_l6 and 255), 46);
              w2k_l3 = w2k_l7;
              continue@w2k_L4;
            } while (false);
            w2k_Z_memory.i32_store8(0, 59409, w2k_l4);
            w2k_Z_memory.i32_store8(0, 59408, (w2k_Z_memory.i32_load8_u(48736 + w2k_l4)).also {w2k_l1=it});
            w2k_l8 = 37541;
            w2k_B7@ do {
              w2k_B8@ do {
                if ((w2k_l1 and 2).inz()){
                  break@w2k_B8;}
                w2k_B9@ do {
                  if ((w2k_l1).inz()){
                    break@w2k_B9;}
                  w2k_Z_memory.i32_store8(0, 59408, 32);
                  w2k_Z_memory.i32_store8((w2k_l2 and 255) + 59152, 32);
                  w2k_Z_memory.i32_store8(0, 59136, (w2k_l6 + 1).also {w2k_l6=it});
                  w2k_l1 = w2k_p0 + (w2k_l6 and 255).also {w2k_l4=it};
                  if (((java.lang.Integer.compareUnsigned(w2k_l4, 120)>0).btoInt()).inz()){
                    break@w2k_B7;}
                  w2k_Z_memory.i32_store8(w2k_l1, 32);
                  w2k_l3 = w2k_l7;
                  continue@w2k_L4;
                } while (false);
                w2k_l9 = 0;
                w2k_Z_memory.i32_store8(0, 59408, (w2k_l1 and 128).also {w2k_l1=it});
                if (((w2k_l1).isz()).inz()){
                  break@w2k_B3;}
                w2k_l8 = w2k_Z_memory.i32_load8_u(53408 + (w2k_l4 + (-65) and 255).also {w2k_l4=it}) shl 8 or w2k_Z_memory.i32_load8_u(53376 + w2k_l4);
              } while (false);
              w2k_L10@ while (true) {
                w2k_l1 = 0;
                if ((((w2k_GetRuleByte((((w2k_l8 and 65535) + 1).also {w2k_l8=it} and 65535).also {w2k_l4=it}, 0, )).toByte().toInt() > (-1)).btoInt()).inz()){
                  continue@w2k_L10;}
                w2k_L11@ while (true) {
                  if (((w2k_GetRuleByte(w2k_l4, ((w2k_l1).also {w2k_l3=it} + 1).also {w2k_l1=it} and 255, ) != 40).btoInt()).inz()){
                    continue@w2k_L11;}
                  break;
                }
                w2k_l2 = w2k_l1;
                w2k_L12@ while (true) {
                  if (((w2k_GetRuleByte(w2k_l4, ((w2k_l2).also {w2k_l10=it} + 1).also {w2k_l2=it} and 255, ) != 41).btoInt()).inz()){
                    continue@w2k_L12;}
                  break;
                }
                w2k_l5 = w2k_l2;
                w2k_L13@ while (true) {
                  if (((w2k_GetRuleByte(w2k_l4, ((w2k_l5).also {w2k_l11=it} + 1).also {w2k_l5=it} and 255, ) and 127 != 61).btoInt()).inz()){
                    continue@w2k_L13;}
                  break;
                }
                w2k_Z_memory.i32_store8(0, 59136, w2k_l7);
                w2k_Z_memory.i32_store8(0, 59409, (w2k_l3 + 2).also {w2k_l12=it});
                w2k_l3 = w2k_l7;
                w2k_B14@ do {
                  w2k_L15@ while (true) {
                    if ((((w2k_GetRuleByte(w2k_l4, (w2k_l12 and 255).also {w2k_l13=it}, )).also {w2k_l9=it} != w2k_Z_memory.i32_load8_u((w2k_l3 and 255) + 59152)).btoInt()).inz()){
                      break@w2k_B14;}
                    w2k_Z_memory.i32_store8(0, 59409, (w2k_l12 + 1).also {w2k_l12=it});
                    w2k_B16@ do {
                      if (((w2k_l13 == w2k_l10 and 255).btoInt()).inz()){
                        break@w2k_B16;}
                      w2k_Z_memory.i32_store8(0, 59136, (w2k_l3 + 1).also {w2k_l3=it});
                      continue@w2k_L15;
                    } while (false);
                    break;
                  }
                  w2k_Z_memory.i32_store8(0, 59408, w2k_l7);
                  w2k_l12 = w2k_l7;
                  w2k_L17@ while (true) {
                    w2k_B18@ do {
                      w2k_B19@ do {
                        if (((((w2k_GetRuleByte(w2k_l4, (w2k_l1 + (-1)).also {w2k_l1=it} and 255, )).toByte().toInt()).also {w2k_l10=it} < 0).btoInt()).inz()){
                          break@w2k_B19;}
                        w2k_Z_memory.i32_store8(0, 59136, w2k_l10);
                        w2k_B20@ do {
                          if (((w2k_Z_memory.i32_load8_s(48736 + (w2k_l10 and 255).also {w2k_l13=it}) > (-1)).btoInt()).inz()){
                            break@w2k_B20;}
                          w2k_Z_memory.i32_store8(0, 59136, (w2k_l12 + (-1)).also {w2k_l12=it});
                          if ((((w2k_Z_memory.i32_load8_u((w2k_l12 and 255) + 59152)).also {w2k_l9=it} == w2k_l13).btoInt()).inz()){
                            continue@w2k_L17;}
                          w2k_Z_memory.i32_store8(0, 59409, w2k_l1);
                          break@w2k_B14;
                        } while (false);
                        w2k_l9 = 0;
                        w2k_Z_memory.i32_store8(0, 59408, w2k_l10);
                        w2k_Z_memory.i32_store8(0, 59409, w2k_l1);
                        w2k_B21@ do {
                          w2k_B22@ do {
                            w2k_B23@ do {
                              w2k_B24@ do {
                                w2k_B25@ do {
                                  w2k_B26@ do {
                                    w2k_B27@ do {
                                      w2k_B28@ do {
                                        when (w2k_l13 + (-32)) {
                                          0 -> {
                                            break@w2k_B27;}
                                          5, 4, 2, 1 -> {
                                            break@w2k_B3;}
                                          3 -> {
                                            break@w2k_B26;}
                                          6 -> {
                                            break@w2k_B24;}
                                          else -> {
                                            break@w2k_B28;}
                                        }
                                      } while (false);
                                      w2k_B29@ do {
                                        when (w2k_l13 + (-43)) {
                                          0 -> {
                                            break@w2k_B22;}
                                          2, 1 -> {
                                            break@w2k_B3;}
                                          3 -> {
                                            break@w2k_B25;}
                                          else -> {
                                            break@w2k_B29;}
                                        }
                                      } while (false);
                                      if (((w2k_l13 == 58).btoInt()).inz()){
                                        break@w2k_B21;}
                                      if (((w2k_l13 == 64).btoInt()).inz()){
                                        break@w2k_B23;}
                                      if (((w2k_l13 != 94).btoInt()).inz()){
                                        break@w2k_B3;}
                                      w2k_Code37055(w2k_l12 and 255, );
                                      w2k_Z_memory.i32_store8(0, 59408, (w2k_Z_memory.i32_load8_u(0, 59408) and 32).also {w2k_l12=it});
                                      if (((w2k_l12).isz()).inz()){
                                        continue@w2k_L10;}
                                      break@w2k_B18;
                                    } while (false);
                                    w2k_Code37055(w2k_l12 and 255, );
                                    w2k_Z_memory.i32_store8(0, 59408, (w2k_Z_memory.i32_load8_u(0, 59408) and 128).also {w2k_l12=it});
                                    if ((w2k_l12).inz()){
                                      continue@w2k_L10;}
                                    break@w2k_B18;
                                  } while (false);
                                  w2k_Code37055(w2k_l12 and 255, );
                                  w2k_Z_memory.i32_store8(0, 59408, (w2k_Z_memory.i32_load8_u(0, 59408) and 64).also {w2k_l12=it});
                                  if (((w2k_l12).isz()).inz()){
                                    continue@w2k_L10;}
                                  break@w2k_B18;
                                } while (false);
                                w2k_Code37055(w2k_l12 and 255, );
                                w2k_Z_memory.i32_store8(0, 59408, (w2k_Z_memory.i32_load8_u(0, 59408) and 8).also {w2k_l12=it});
                                if (((w2k_l12).isz()).inz()){
                                  continue@w2k_L10;}
                                break@w2k_B18;
                              } while (false);
                              w2k_Code37055(w2k_l12 and 255, );
                              w2k_Z_memory.i32_store8(0, 59408, (w2k_Z_memory.i32_load8_u(0, 59408) and 16).also {w2k_l10=it});
                              w2k_l12 = w2k_Z_memory.i32_load8_u(0, 59136);
                              if ((w2k_l10).inz()){
                                continue@w2k_L17;}
                              w2k_Z_memory.i32_store8(0, 59408, (w2k_Z_memory.i32_load8_u(w2k_l12 + 59152)).also {w2k_l10=it});
                              if (((w2k_l10 != 72).btoInt()).inz()){
                                continue@w2k_L10;}
                              w2k_Z_memory.i32_store8(0, 59136, (w2k_l12 + (-1)).also {w2k_l12=it});
                              w2k_Z_memory.i32_store8(0, 59408, (w2k_Z_memory.i32_load8_u((w2k_l12 and 255) + 59152)).also {w2k_l10=it});
                              if (((w2k_l10 and 239 != 67).btoInt()).inz()){
                                continue@w2k_L10;}
                              continue@w2k_L17;
                            } while (false);
                            w2k_Code37055(w2k_l12 and 255, );
                            w2k_Z_memory.i32_store8(0, 59408, (w2k_Z_memory.i32_load8_u(0, 59408) and 4).also {w2k_l10=it});
                            w2k_l12 = w2k_Z_memory.i32_load8_u(0, 59136);
                            if ((w2k_l10).inz()){
                              continue@w2k_L17;}
                            w2k_l9 = w2k_Z_memory.i32_load8_u(w2k_l12 + 59152);
                            break@w2k_B14;
                          } while (false);
                          w2k_Z_memory.i32_store8(0, 59136, (w2k_l12 + (-1)).also {w2k_l12=it});
                          w2k_Z_memory.i32_store8(0, 59408, (w2k_Z_memory.i32_load8_u((w2k_l12 and 255) + 59152)).also {w2k_l10=it});
                          w2k_B30@ do {
                            when (w2k_l10 + (-69)) {
                              4, 0 -> {
                                continue@w2k_L17;}
                              3, 2, 1 -> {
                                continue@w2k_L10;}
                              else -> {
                                break@w2k_B30;}
                            }
                          } while (false);
                          if (((w2k_l10 != 89).btoInt()).inz()){
                            continue@w2k_L10;}
                          continue@w2k_L17;
                        } while (false);
                        w2k_L31@ while (true) {
                          w2k_Code37055(w2k_l12 and 255, );
                          w2k_Z_memory.i32_store8(0, 59408, (w2k_Z_memory.i32_load8_u(0, 59408) and 32).also {w2k_l10=it});
                          if (((w2k_l10).isz()).inz()){
                            continue@w2k_L17;}
                          w2k_l12 = w2k_Z_memory.i32_load8_u(0, 59136);
                          continue@w2k_L31;
                          break;
                        }
                      } while (false);
                      w2k_Z_memory.i32_store8(0, 59408, w2k_l3);
                      w2k_l1 = w2k_l3;
                      w2k_L32@ while (true) {
                        w2k_l13 = w2k_l1;
                        w2k_Z_memory.i32_store8(0, 59409, (w2k_l2 + 1).also {w2k_l10=it});
                        w2k_B33@ do {
                          w2k_B34@ do {
                            w2k_B35@ do {
                              w2k_B36@ do {
                                w2k_B37@ do {
                                  w2k_B38@ do {
                                    w2k_B39@ do {
                                      w2k_B40@ do {
                                        w2k_B41@ do {
                                          w2k_B42@ do {
                                            w2k_B43@ do {
                                              if (((w2k_l2 and 255 == w2k_l11 and 255).btoInt()).inz()){
                                                break@w2k_B43;}
                                              w2k_i0 = 0;
                                              w2k_Z_memory.i32_store8(w2k_i0, 59136, (w2k_GetRuleByte(w2k_l4, w2k_l10 and 255, )).also {w2k_l12=it});
                                              w2k_Z_memory.i32_store8(0, 59408, (w2k_Z_memory.i32_load8_u(48736 + w2k_l12) and 128).also {w2k_l1=it});
                                              w2k_B44@ do {
                                                if (((w2k_l1).isz()).inz()){
                                                  break@w2k_B44;}
                                                w2k_Z_memory.i32_store8(0, 59136, (w2k_l13 + 1).also {w2k_l1=it});
                                                w2k_Z_memory.i32_store8(0, 59408, (w2k_Z_memory.i32_load8_u((w2k_l1 and 255) + 59152)).also {w2k_l13=it});
                                                w2k_l2 = w2k_l10;
                                                if (((w2k_l13 != w2k_l12).btoInt()).inz()){
                                                  continue@w2k_L10;}
                                                continue@w2k_L32;
                                              } while (false);
                                              w2k_l9 = 0;
                                              w2k_Z_memory.i32_store8(0, 59408, w2k_l12);
                                              w2k_B45@ do {
                                                when (w2k_l12 + (-32)) {
                                                  0 -> {
                                                    break@w2k_B38;}
                                                  13, 12, 10, 9, 8, 7, 4, 2, 1 -> {
                                                    break@w2k_B3;}
                                                  3 -> {
                                                    break@w2k_B39;}
                                                  5 -> {
                                                    break@w2k_B37;}
                                                  6 -> {
                                                    break@w2k_B41;}
                                                  11 -> {
                                                    break@w2k_B42;}
                                                  14 -> {
                                                    break@w2k_B40;}
                                                  else -> {
                                                    break@w2k_B45;}
                                                }
                                              } while (false);
                                              if (((w2k_l12 != 58).btoInt()).inz()){
                                                break@w2k_B36;}
                                              w2k_l1 = w2k_l13;
                                              w2k_L46@ while (true) {
                                                w2k_Code37066(w2k_l1 and 255, );
                                                w2k_Z_memory.i32_store8(0, 59408, (w2k_Z_memory.i32_load8_u(0, 59408) and 32).also {w2k_l2=it});
                                                if (((w2k_l2).isz()).inz()){
                                                  break@w2k_B33;}
                                                w2k_l1 = w2k_Z_memory.i32_load8_u(0, 59136);
                                                continue@w2k_L46;
                                                break;
                                              }
                                            } while (false);
                                            w2k_Z_memory.i32_store8(0, 59409, w2k_l5);
                                            w2k_B47@ do {
                                              if (((w2k_Z_memory.i32_load(0, 58980)).isz()).inz()){
                                                break@w2k_B47;}
                                              w2k_PrintRule(w2k_l4, );
                                              w2k_l5 = w2k_Z_memory.i32_load8_u(0, 59409);
                                            } while (false);
                                            w2k_L48@ while (true) {
                                              w2k_i0 = 0;
                                              w2k_Z_memory.i32_store8(w2k_i0, 59408, ((w2k_GetRuleByte(w2k_l4, w2k_l5 and 255, )).also {w2k_l2=it} and 127).also {w2k_l1=it});
                                              w2k_l2 = (w2k_l2).toByte().toInt();
                                              w2k_B49@ do {
                                                if (((w2k_l1 == 61).btoInt()).inz()){
                                                  break@w2k_B49;}
                                                w2k_Z_memory.i32_store8(0, 59136, (w2k_l6 + 1).also {w2k_l6=it});
                                                w2k_Z_memory.i32_store8(w2k_p0 + (w2k_l6 and 255), w2k_l1);
                                              } while (false);
                                              if (((w2k_l2 < 0).btoInt()).inz()){
                                                continue@w2k_L4;}
                                              w2k_Z_memory.i32_store8(0, 59409, (w2k_Z_memory.i32_load8_u(0, 59409) + 1).also {w2k_l5=it});
                                              continue@w2k_L48;
                                              break;
                                            }
                                          } while (false);
                                          w2k_Z_memory.i32_store8(0, 59136, (w2k_l13 + 1).also {w2k_l1=it});
                                          w2k_Z_memory.i32_store8(0, 59408, (w2k_Z_memory.i32_load8_u((w2k_l1 and 255) + 59152)).also {w2k_l12=it});
                                          w2k_l2 = w2k_l10;
                                          w2k_B50@ do {
                                            when (w2k_l12 + (-69)) {
                                              4, 0 -> {
                                                continue@w2k_L32;}
                                              3, 2, 1 -> {
                                                continue@w2k_L10;}
                                              else -> {
                                                break@w2k_B50;}
                                            }
                                          } while (false);
                                          w2k_l2 = w2k_l10;
                                          if (((w2k_l12 != 89).btoInt()).inz()){
                                            continue@w2k_L10;}
                                          continue@w2k_L32;
                                        } while (false);
                                        w2k_Code37066(w2k_l13 and 255, );
                                        w2k_Z_memory.i32_store8(0, 59408, (w2k_Z_memory.i32_load8_u(0, 59408) and 16).also {w2k_l12=it});
                                        w2k_l1 = w2k_Z_memory.i32_load8_u(0, 59136);
                                        w2k_l2 = w2k_l10;
                                        if ((w2k_l12).inz()){
                                          continue@w2k_L32;}
                                        w2k_Z_memory.i32_store8(0, 59408, (w2k_Z_memory.i32_load8_u(w2k_l1 + 59152)).also {w2k_l2=it});
                                        if (((w2k_l2 != 72).btoInt()).inz()){
                                          continue@w2k_L10;}
                                        w2k_Z_memory.i32_store8(0, 59136, (w2k_l1 + 1).also {w2k_l1=it});
                                        w2k_Z_memory.i32_store8(0, 59408, (w2k_Z_memory.i32_load8_u((w2k_l1 and 255) + 59152)).also {w2k_l12=it});
                                        w2k_l2 = w2k_l10;
                                        if (((w2k_l12 and 239 != 67).btoInt()).inz()){
                                          continue@w2k_L10;}
                                        continue@w2k_L32;
                                      } while (false);
                                      w2k_Code37066(w2k_l13 and 255, );
                                      w2k_Z_memory.i32_store8(0, 59408, (w2k_Z_memory.i32_load8_u(0, 59408) and 8).also {w2k_l1=it});
                                      if (((w2k_l1).isz()).inz()){
                                        continue@w2k_L10;}
                                      break@w2k_B35;
                                    } while (false);
                                    w2k_Code37066(w2k_l13 and 255, );
                                    w2k_Z_memory.i32_store8(0, 59408, (w2k_Z_memory.i32_load8_u(0, 59408) and 64).also {w2k_l1=it});
                                    if (((w2k_l1).isz()).inz()){
                                      continue@w2k_L10;}
                                    break@w2k_B35;
                                  } while (false);
                                  w2k_Code37066(w2k_l13 and 255, );
                                  w2k_Z_memory.i32_store8(0, 59408, (w2k_Z_memory.i32_load8_u(0, 59408) and 128).also {w2k_l1=it});
                                  if ((w2k_l1).inz()){
                                    continue@w2k_L10;}
                                  break@w2k_B35;
                                } while (false);
                                w2k_Z_memory.i32_store8(0, 59136, (w2k_l13 + 1).also {w2k_l1=it});
                                w2k_Z_memory.i32_store8(0, 59408, (w2k_Z_memory.i32_load8_u((w2k_l1 and 255) + 59152)).also {w2k_l2=it});
                                w2k_B51@ do {
                                  w2k_B52@ do {
                                    when (w2k_l2 + (-69)) {
                                      0 -> {
                                        break@w2k_B52;}
                                      3, 2, 1 -> {
                                        continue@w2k_L10;}
                                      4 -> {
                                        break@w2k_B51;}
                                      else -> {
                                        continue@w2k_L10;}
                                    }
                                  } while (false);
                                  w2k_l12 = w2k_Z_memory.i32_load8_u(((w2k_l13 + 2).also {w2k_l9=it} and 255) + 59152);
                                  w2k_Z_memory.i32_store8(0, 59136, w2k_l1);
                                  w2k_Z_memory.i32_store8(0, 59409, w2k_l12);
                                  w2k_Z_memory.i32_store8(0, 59408, (w2k_Z_memory.i32_load8_u(w2k_l12 + 48736) and 128).also {w2k_l14=it});
                                  w2k_l2 = w2k_l10;
                                  if (((w2k_l14).isz()).inz()){
                                    continue@w2k_L32;}
                                  w2k_Z_memory.i32_store8(0, 59408, w2k_l12);
                                  w2k_Z_memory.i32_store8(0, 59136, w2k_l9);
                                  w2k_l1 = w2k_l9;
                                  w2k_l2 = w2k_l10;
                                  w2k_B53@ do {
                                    w2k_B54@ do {
                                      when (w2k_l12 + (-68)) {
                                        0 -> {
                                          continue@w2k_L32;}
                                        1 -> {
                                          continue@w2k_L10;}
                                        2 -> {
                                          break@w2k_B53;}
                                        else -> {
                                          break@w2k_B54;}
                                      }
                                    } while (false);
                                    w2k_l1 = w2k_l9;
                                    w2k_l2 = w2k_l10;
                                    if (((java.lang.Integer.compareUnsigned(w2k_l12 + (-82), 2)<0).btoInt()).inz()){
                                      continue@w2k_L32;}
                                    if (((w2k_l12 != 76).btoInt()).inz()){
                                      continue@w2k_L10;}
                                    w2k_Z_memory.i32_store8(0, 59136, (w2k_l13 + 3).also {w2k_l1=it});
                                    w2k_Z_memory.i32_store8(0, 59408, (w2k_Z_memory.i32_load8_u((w2k_l1 and 255) + 59152)).also {w2k_l12=it});
                                    w2k_l2 = w2k_l10;
                                    if (((w2k_l12 != 89).btoInt()).inz()){
                                      continue@w2k_L10;}
                                    continue@w2k_L32;
                                  } while (false);
                                  w2k_Z_memory.i32_store8(0, 59136, (w2k_l13 + 3).also {w2k_l1=it});
                                  w2k_Z_memory.i32_store8(0, 59408, (w2k_Z_memory.i32_load8_u((w2k_l1 and 255) + 59152)).also {w2k_l1=it});
                                  if (((w2k_l1 != 85).btoInt()).inz()){
                                    continue@w2k_L10;}
                                  w2k_Z_memory.i32_store8(0, 59136, (w2k_l13 + 4).also {w2k_l1=it});
                                  w2k_Z_memory.i32_store8(0, 59408, (w2k_Z_memory.i32_load8_u((w2k_l1 and 255) + 59152)).also {w2k_l12=it});
                                  w2k_l2 = w2k_l10;
                                  if (((w2k_l12 != 76).btoInt()).inz()){
                                    continue@w2k_L10;}
                                  continue@w2k_L32;
                                } while (false);
                                w2k_Z_memory.i32_store8(0, 59136, (w2k_l13 + 2).also {w2k_l1=it});
                                w2k_Z_memory.i32_store8(0, 59408, (w2k_Z_memory.i32_load8_u((w2k_l1 and 255) + 59152)).also {w2k_l1=it});
                                if (((w2k_l1 != 78).btoInt()).inz()){
                                  continue@w2k_L10;}
                                w2k_Z_memory.i32_store8(0, 59136, (w2k_l13 + 3).also {w2k_l1=it});
                                w2k_Z_memory.i32_store8(0, 59408, (w2k_Z_memory.i32_load8_u((w2k_l1 and 255) + 59152)).also {w2k_l12=it});
                                w2k_l2 = w2k_l10;
                                if (((w2k_l12 != 71).btoInt()).inz()){
                                  continue@w2k_L10;}
                                continue@w2k_L32;
                              } while (false);
                              if (((w2k_l12 == 64).btoInt()).inz()){
                                break@w2k_B34;}
                              if (((w2k_l12 != 94).btoInt()).inz()){
                                break@w2k_B3;}
                              w2k_Code37066(w2k_l13 and 255, );
                              w2k_Z_memory.i32_store8(0, 59408, (w2k_Z_memory.i32_load8_u(0, 59408) and 32).also {w2k_l1=it});
                              if (((w2k_l1).isz()).inz()){
                                continue@w2k_L10;}
                            } while (false);
                            w2k_l1 = w2k_Z_memory.i32_load8_u(0, 59136);
                            break@w2k_B33;
                          } while (false);
                          w2k_Code37066(w2k_l13 and 255, );
                          w2k_Z_memory.i32_store8(0, 59408, (w2k_Z_memory.i32_load8_u(0, 59408) and 4).also {w2k_l12=it});
                          w2k_l1 = w2k_Z_memory.i32_load8_u(0, 59136);
                          w2k_l2 = w2k_l10;
                          if ((w2k_l12).inz()){
                            continue@w2k_L32;}
                          w2k_l9 = w2k_Z_memory.i32_load8_u(w2k_l1 + 59152);
                          break@w2k_B14;
                        } while (false);
                        w2k_l2 = w2k_l10;
                        continue@w2k_L32;
                        break;
                      }
                    } while (false);
                    w2k_l12 = w2k_Z_memory.i32_load8_u(0, 59136);
                    continue@w2k_L17;
                    break;
                  }
                } while (false);
                w2k_Z_memory.i32_store8(0, 59408, w2k_l9);
                continue@w2k_L10;
                break;
              }
            } while (false);
            break;
          }
          w2k_Z_memory.i32_store8(w2k_l1, 155);
          w2k_Z_memory.i32_store8(0, 59408, w2k_l7);
          w2k_l9 = 1;
        } while (false);
        w2k_i0 = w2k_l9;
      } while (false);
      return w2k_i0;
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_SetInput(w2k_p0: Int): Unit{
    var w2k_p0 = w2k_p0;
    var w2k_l1: Int = 0
    var w2k_l2: Int = 0
    var w2k_l3: Int = 0
    try {
      w2k_Bfunc@ do {
        w2k_l1 = 0;
        w2k_l2 = select((select((w2k_strlen(w2k_p0, )).also {w2k_l2=it}, 254, (w2k_l2 < 254).btoInt())).also {w2k_l3=it}, 0, (w2k_l3 > 0).btoInt());
        w2k_B0@ do {
          w2k_L1@ while (true) {
            if (((w2k_l1 == w2k_l2).btoInt()).inz()){
              break@w2k_B0;}
            w2k_Z_memory.i32_store8(59440 + w2k_l1, w2k_Z_memory.i32_load8_u(w2k_p0 + w2k_l1));
            w2k_l1 = w2k_l1 + 1;
            continue@w2k_L1;
            break;
          }
        } while (false);
        w2k_Z_memory.i32_store8(59440 + w2k_l3, 0);
      } while (false);
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_SetSpeed(w2k_p0: Int): Unit{
    var w2k_p0 = w2k_p0;
    try {
      w2k_Bfunc@ do {
        w2k_Z_memory.i32_store8(0, 58624, w2k_p0);
      } while (false);
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_SetPitch(w2k_p0: Int): Unit{
    var w2k_p0 = w2k_p0;
    try {
      w2k_Bfunc@ do {
        w2k_Z_memory.i32_store8(0, 58625, w2k_p0);
      } while (false);
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_SetMouth(w2k_p0: Int): Unit{
    var w2k_p0 = w2k_p0;
    try {
      w2k_Bfunc@ do {
        w2k_Z_memory.i32_store8(0, 58626, w2k_p0);
      } while (false);
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_SetThroat(w2k_p0: Int): Unit{
    var w2k_p0 = w2k_p0;
    try {
      w2k_Bfunc@ do {
        w2k_Z_memory.i32_store8(0, 58627, w2k_p0);
      } while (false);
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_GetBuffer(): Int{
    try {
          var w2k_i0: Int = 0
      w2k_Bfunc@ do {
        w2k_i0 = w2k_Z_memory.i32_load(0, 59424);
      } while (false);
      return w2k_i0;
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_GetBufferLength(): Int{
    try {
          var w2k_i0: Int = 0
      w2k_Bfunc@ do {
        w2k_i0 = w2k_Z_memory.i32_load(0, 59420);
      } while (false);
      return w2k_i0;
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_Init(): Unit{
    var w2k_l0: Int = 0
    var w2k_l1: Int = 0
    try {
          var w2k_i0: Int = 0
      w2k_Bfunc@ do {
        w2k_l0 = 0;
        w2k_SetMouthThroat(w2k_Z_memory.i32_load8_u(0, 58626), w2k_Z_memory.i32_load8_u(0, 58627), );
        w2k_Z_memory.i32_store(0, 59420, 0);
        w2k_i0 = 0;
        w2k_Z_memory.i32_store(w2k_i0, 59424, w2k_dlmalloc(220500, ));
        w2k_l1 = 0;
        w2k_L0@ while (true) {
          w2k_B1@ do {
            if (((w2k_l1 != 256).btoInt()).inz()){
              break@w2k_B1;}
            w2k_B2@ do {
              w2k_L3@ while (true) {
                if (((w2k_l0 == 60).btoInt()).inz()){
                  break@w2k_B2;}
                w2k_Z_memory.i32_store8(60272 + w2k_l0, 0);
                w2k_Z_memory.i32_store8(60208 + w2k_l0, 0);
                w2k_Z_memory.i32_store8(60336 + w2k_l0, 0);
                w2k_l0 = w2k_l0 + 1;
                continue@w2k_L3;
                break;
              }
            } while (false);
            w2k_Z_memory.i32_store8(60400, 255, 255);
            break@w2k_Bfunc;
          } while (false);
          w2k_Z_memory.i32_store8(59952 + w2k_l1, 0);
          w2k_Z_memory.i32_store8(59696 + w2k_l1, 0);
          w2k_l1 = w2k_l1 + 1;
          continue@w2k_L0;
          break;
        }
      } while (false);
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_SAMMain(): Int{
    var w2k_l0: Int = 0
    var w2k_l1: Int = 0
    try {
          var w2k_i0: Int = 0
      w2k_Bfunc@ do {
        w2k_Init();
        w2k_Z_memory.i32_store8(60400, 255, 32);
        w2k_B0@ do {
          if ((w2k_Parser1()).inz()){
            break@w2k_B0;}
          w2k_i0 = 0; break@w2k_Bfunc;
        } while (false);
        w2k_B1@ do {
          if (((w2k_Z_memory.i32_load(0, 58980)).isz()).inz()){
            break@w2k_B1;}
          w2k_PrintPhonemes(60400, 59952, 59696, );
        } while (false);
        w2k_Parser2();
        w2k_CopyStress();
        w2k_SetPhonemeLength();
        w2k_AdjustLengths();
        w2k_Code41240();
        w2k_l0 = w2k_Z_memory.i32_load8_u(0, 60656);
        w2k_B2@ do {
          w2k_L3@ while (true) {
            w2k_B4@ do {
              if (((java.lang.Integer.compareUnsigned((w2k_Z_memory.i32_load8_u(60400 + (w2k_l0 and 255).also {w2k_l0=it})).also {w2k_l1=it}, 81)<0).btoInt()).inz()){
                break@w2k_B4;}
              w2k_Z_memory.i32_store8(0, 60657, w2k_l1);
              w2k_Z_memory.i32_store8(60400 + w2k_l0, 255);
              break@w2k_B2;
            } while (false);
            w2k_Z_memory.i32_store8(0, 60656, (w2k_l0 + 1).also {w2k_l0=it});
            if (((w2k_l0 and 255 == w2k_l0).btoInt()).inz()){
              continue@w2k_L3;}
            break;
          }
          w2k_Z_memory.i32_store8(0, 60657, w2k_l1);
        } while (false);
        w2k_InsertBreath();
        w2k_B5@ do {
          if (((w2k_Z_memory.i32_load(0, 58980)).isz()).inz()){
            break@w2k_B5;}
          w2k_PrintPhonemes(60400, 59952, 59696, );
        } while (false);
        w2k_PrepareOutput();
        w2k_i0 = 1;
      } while (false);
      return w2k_i0;
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_Parser1(): Int{
    var w2k_l0: Int = 0
    var w2k_l1: Int = 0
    var w2k_l2: Int = 0
    var w2k_l3: Int = 0
    var w2k_l4: Int = 0
    var w2k_l5: Int = 0
    var w2k_l6: Int = 0
    var w2k_l7: Int = 0
    var w2k_l8: Int = 0
    try {
          var w2k_i0: Int = 0
      w2k_Bfunc@ do {
        w2k_l0 = 0;
        w2k_Z_memory.i32_store8(0, 60657, 0);
        w2k_Z_memory.i32_store8(0, 60656, 0);
        w2k_Z_memory.i32_store8(0, 60658, 0);
        w2k_l1 = 0;
        w2k_B0@ do {
          w2k_L1@ while (true) {
            w2k_B2@ do {
              if (((w2k_l1 != 256).btoInt()).inz()){
                break@w2k_B2;}
              w2k_l2 = 0;
              break@w2k_B0;
            } while (false);
            w2k_Z_memory.i32_store8(59696 + w2k_l1, 0);
            w2k_l1 = w2k_l1 + 1;
            continue@w2k_L1;
            break;
          }
        } while (false);
        w2k_L3@ while (true) {
          w2k_l4 = (w2k_l2 and 255).also {w2k_l3=it} + (-1);
          w2k_l5 = w2k_Z_memory.i32_load8_u(59440 + (w2k_l0 and 255));
          w2k_B4@ do {
            w2k_L5@ while (true) {
              w2k_B6@ do {
                if ((((w2k_l5 and 255).also {w2k_l6=it} != 155).btoInt()).inz()){
                  break@w2k_B6;}
                w2k_Z_memory.i32_store8(60400 + w2k_l3, 255);
                w2k_l1 = 1;
                break@w2k_B4;
              } while (false);
              w2k_l1 = 0;
              w2k_Z_memory.i32_store8(0, 60656, (w2k_l0 + 1).also {w2k_l7=it});
              w2k_Z_memory.i32_store8(0, 60658, 0);
              w2k_l5 = w2k_Z_memory.i32_load8_u(59440 + (w2k_l7 and 255));
              w2k_B7@ do {
                w2k_L8@ while (true) {
                  w2k_B9@ do {
                    if ((((w2k_Z_memory.i32_load8_u(53456 + w2k_l1)).also {w2k_l8=it} != w2k_l6).btoInt()).inz()){
                      break@w2k_B9;}
                    if ((((w2k_Z_memory.i32_load8_u(53552 + w2k_l1)).also {w2k_l8=it} == 42).btoInt()).inz()){
                      break@w2k_B9;}
                    if (((w2k_l8 != w2k_l5 and 255).btoInt()).inz()){
                      break@w2k_B9;}
                    w2k_Z_memory.i32_store8(0, 60657, w2k_l5);
                    w2k_Z_memory.i32_store8(60400 + w2k_l3, w2k_l1);
                    w2k_Z_memory.i32_store8(0, 60656, (w2k_l0 + 2).also {w2k_l0=it});
                    break@w2k_B7;
                  } while (false);
                  w2k_Z_memory.i32_store8(0, 60658, (w2k_l1 + 1).also {w2k_l1=it});
                  if (((w2k_l1 != 81).btoInt()).inz()){
                    continue@w2k_L8;}
                  break;
                }
                w2k_l1 = 0;
                w2k_Z_memory.i32_store8(0, 60657, w2k_l8);
                w2k_Z_memory.i32_store8(0, 60658, 0);
                w2k_L10@ while (true) {
                  w2k_B11@ do {
                    if (((w2k_Z_memory.i32_load8_u(53552 + w2k_l1) != 42).btoInt()).inz()){
                      break@w2k_B11;}
                    if (((w2k_Z_memory.i32_load8_u(53456 + w2k_l1) != w2k_l6).btoInt()).inz()){
                      break@w2k_B11;}
                    w2k_Z_memory.i32_store8(60400 + w2k_l3, w2k_l1);
                    w2k_l0 = w2k_l7;
                    break@w2k_B7;
                  } while (false);
                  w2k_Z_memory.i32_store8(0, 60658, (w2k_l1 + 1).also {w2k_l1=it});
                  if (((w2k_l1 != 81).btoInt()).inz()){
                    continue@w2k_L10;}
                  break;
                }
                w2k_l1 = 8;
                w2k_B12@ do {
                  w2k_L13@ while (true) {
                    if ((((((w2k_l1).also {w2k_l0=it} and 255).also {w2k_l8=it} + 255).also {w2k_l1=it} and 255 == w2k_l1).btoInt()).inz()){
                      break@w2k_B12;}
                    if (((w2k_l6 != w2k_Z_memory.i32_load8_u(53434 + w2k_l8) and 255).btoInt()).inz()){
                      continue@w2k_L13;}
                    break;
                  }
                } while (false);
                w2k_l1 = 0;
                w2k_Z_memory.i32_store8(0, 60658, w2k_l0);
                if (((w2k_l8).isz()).inz()){
                  break@w2k_B4;}
                w2k_Z_memory.i32_store8(59696 + w2k_l4, w2k_l0);
                w2k_l0 = w2k_l7;
                continue@w2k_L5;
              } while (false);
              break;
            }
            w2k_l2 = w2k_l2 + 1;
            continue@w2k_L3;
          } while (false);
          break;
        }
        w2k_i0 = w2k_l1;
      } while (false);
      return w2k_i0;
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_Parser2(): Unit{
    var w2k_l0: Int = 0
    var w2k_l1: Int = 0
    var w2k_l2: Int = 0
    var w2k_l3: Int = 0
    var w2k_l4: Int = 0
    var w2k_l5: Int = 0
    var w2k_l6: Int = 0
    var w2k_l7: Int = 0
    var w2k_l8: Int = 0
    try {
      w2k_Bfunc@ do {
        w2k___stack_pointer = (w2k___stack_pointer - 32).also {w2k_l0=it};
        w2k_l1 = w2k_Z_memory.i32_load(0, 58140);
        w2k_B0@ do {
          if (((w2k_Z_memory.i32_load(0, 58980)).isz()).inz()){
            break@w2k_B0;}
          w2k_fwrite(55235, 8, 1, w2k_l1, );
        } while (false);
        w2k_l2 = 0;
        w2k_L1@ while (true) {
          w2k_Z_memory.i32_store8(0, 60656, w2k_l2);
          w2k_Z_memory.i32_store8(0, 60657, (w2k_Z_memory.i32_load8_u((60400 + (w2k_l2 and 255).also {w2k_l3=it}).also {w2k_l4=it})).also {w2k_l5=it});
          w2k_B2@ do {
            if (((w2k_Z_memory.i32_load(0, 58980)).isz()).inz()){
              break@w2k_B2;}
            if (((w2k_l5 == 255).btoInt()).inz()){
              break@w2k_B2;}
            w2k_Z_memory.i32_store(w2k_l0, 16, w2k_l3);
            w2k_Z_memory.i32_store(w2k_l0, 24, w2k_Z_memory.i32_load8_u(53552 + w2k_l5));
            w2k_Z_memory.i32_store(w2k_l0, 20, w2k_Z_memory.i32_load8_u(53456 + w2k_l5));
            w2k_fiprintf(w2k_l1, 54549, w2k_l0 + 16, );
            w2k_l5 = w2k_Z_memory.i32_load8_u(0, 60657);
          } while (false);
          w2k_B3@ do {
            if ((((w2k_l5 and 255).also {w2k_l6=it}).isz()).inz()){
              break@w2k_B3;}
            w2k_B4@ do {
              w2k_B5@ do {
                w2k_B6@ do {
                  w2k_B7@ do {
                    w2k_B8@ do {
                      w2k_B9@ do {
                        w2k_B10@ do {
                          w2k_B11@ do {
                            w2k_B12@ do {
                              w2k_B13@ do {
                                if (((w2k_l6 == 255).btoInt()).inz()){
                                  break@w2k_B13;}
                                w2k_Z_memory.i32_store8(0, 60658, w2k_l5);
                                w2k_B14@ do {
                                  if (((java.lang.Integer.compareUnsigned(w2k_l6 + (-54), (-6))<0).btoInt()).inz()){
                                    break@w2k_B14;}
                                  w2k_Z_memory.i32_store8(0, 60657, (select(21, 20, (w2k_Z_memory.i32_load8_u(53648 + w2k_l6) and 32).also {w2k_l7=it})).also {w2k_l5=it});
                                  w2k_l8 = w2k_Z_memory.i32_load8_u(59696 + w2k_l3);
                                  w2k_l6 = w2k_Z_memory.i32_load(0, 58980);
                                  w2k_B15@ do {
                                    if ((w2k_l7).inz()){
                                      break@w2k_B15;}
                                    if (((w2k_l6).isz()).inz()){
                                      break@w2k_B15;}
                                    w2k_fwrite(54461, 58, 1, w2k_l1, );
                                    w2k_l5 = w2k_Z_memory.i32_load8_u(0, 60657);
                                    w2k_l6 = w2k_Z_memory.i32_load(0, 58980);
                                  } while (false);
                                  w2k_B16@ do {
                                    if (((w2k_l6).isz()).inz()){
                                      break@w2k_B16;}
                                    if (((w2k_l5 and 255 != 21).btoInt()).inz()){
                                      break@w2k_B16;}
                                    w2k_fwrite(54406, 54, 1, w2k_l1, );
                                    w2k_l5 = w2k_Z_memory.i32_load8_u(0, 60657);
                                  } while (false);
                                  w2k_Insert(w2k_l2 + 1 and 255, w2k_l5 and 255, w2k_Z_memory.i32_load8_u(0, 59416), w2k_l8 and 255, );
                                  w2k_Z_memory.i32_store8(0, 60656, w2k_l2);
                                  w2k_l7 = w2k_l2;
                                  break@w2k_B8;
                                } while (false);
                                w2k_Z_memory.i32_store8(0, 60657, (w2k_Z_memory.i32_load8_u(60400 + (w2k_Z_memory.i32_load8_u(0, 60656)).also {w2k_l6=it})).also {w2k_l5=it});
                                w2k_B17@ do {
                                  w2k_B18@ do {
                                    w2k_B19@ do {
                                      w2k_B20@ do {
                                        when (w2k_l5 + (-78)) {
                                          0 -> {
                                            break@w2k_B20;}
                                          1 -> {
                                            break@w2k_B19;}
                                          2 -> {
                                            break@w2k_B18;}
                                          else -> {
                                            break@w2k_B17;}
                                        }
                                      } while (false);
                                      w2k_Z_memory.i32_store8(0, 60657, 24);
                                      if (((w2k_Z_memory.i32_load(0, 58980)).isz()).inz()){
                                        break@w2k_B9;}
                                      w2k_l5 = 54837;
                                      break@w2k_B10;
                                    } while (false);
                                    w2k_Z_memory.i32_store8(0, 60657, 27);
                                    if (((w2k_Z_memory.i32_load(0, 58980)).isz()).inz()){
                                      break@w2k_B9;}
                                    w2k_l5 = 54819;
                                    break@w2k_B10;
                                  } while (false);
                                  w2k_Z_memory.i32_store8(0, 60657, 28);
                                  if (((w2k_Z_memory.i32_load(0, 58980)).isz()).inz()){
                                    break@w2k_B9;}
                                  w2k_l5 = 54801;
                                  break@w2k_B10;
                                } while (false);
                                w2k_Z_memory.i32_store8(0, 60658, w2k_l5);
                                w2k_Z_memory.i32_store8(0, 60657, (w2k_Z_memory.i32_load8_u(53648 + w2k_l5) and 128).also {w2k_l5=it});
                                w2k_B21@ do {
                                  if (((w2k_l5).isz()).inz()){
                                    break@w2k_B21;}
                                  w2k_Z_memory.i32_store8(0, 60657, (w2k_Z_memory.i32_load8_u(59696 + w2k_l6)).also {w2k_l5=it});
                                  if (((w2k_l5).isz()).inz()){
                                    break@w2k_B21;}
                                  w2k_Z_memory.i32_store8(0, 60656, (w2k_l6 + 1).also {w2k_l5=it});
                                  w2k_Z_memory.i32_store8(0, 60657, (w2k_Z_memory.i32_load8_u(60400 + (w2k_l5 and 255))).also {w2k_l5=it});
                                  if ((w2k_l5).inz()){
                                    break@w2k_B21;}
                                  w2k_Z_memory.i32_store8(0, 60656, (w2k_l6 + 2).also {w2k_l6=it});
                                  w2k_Z_memory.i32_store8(0, 60658, (w2k_Z_memory.i32_load8_u(60400 + (w2k_l6 and 255).also {w2k_l7=it})).also {w2k_l5=it});
                                  if (((w2k_l5 == 255).btoInt()).inz()){
                                    break@w2k_B21;}
                                  w2k_Z_memory.i32_store8(0, 60657, (w2k_Z_memory.i32_load8_u(53648 + w2k_l5) and 128).also {w2k_l5=it});
                                  if (((w2k_l5).isz()).inz()){
                                    break@w2k_B21;}
                                  w2k_Z_memory.i32_store8(0, 60657, (w2k_Z_memory.i32_load8_u(59696 + w2k_l7)).also {w2k_l5=it});
                                  if (((w2k_l5).isz()).inz()){
                                    break@w2k_B21;}
                                  w2k_B22@ do {
                                    if (((w2k_Z_memory.i32_load(0, 58980)).isz()).inz()){
                                      break@w2k_B22;}
                                    w2k_fwrite(54118, 78, 1, w2k_l1, );
                                    w2k_l6 = w2k_Z_memory.i32_load8_u(0, 60656);
                                  } while (false);
                                  w2k_Insert(w2k_l6 and 255, 31, w2k_Z_memory.i32_load8_u(0, 59416), 0, );
                                  break@w2k_B3;
                                } while (false);
                                w2k_Z_memory.i32_store8(0, 60656, w2k_l2);
                                w2k_Z_memory.i32_store8(0, 60657, (w2k_Z_memory.i32_load8_u(w2k_l4)).also {w2k_l5=it});
                                w2k_B23@ do {
                                  w2k_B24@ do {
                                    w2k_B25@ do {
                                      w2k_B26@ do {
                                        w2k_B27@ do {
                                          w2k_B28@ do {
                                            when (w2k_l5 + (-23)) {
                                              0 -> {
                                                break@w2k_B27;}
                                              1 -> {
                                                break@w2k_B26;}
                                              else -> {
                                                break@w2k_B28;}
                                            }
                                          } while (false);
                                          if (((w2k_l5 == 32).btoInt()).inz()){
                                            break@w2k_B25;}
                                          if (((w2k_l5 == 60).btoInt()).inz()){
                                            break@w2k_B23;}
                                          if (((w2k_l5 != 72).btoInt()).inz()){
                                            break@w2k_B11;}
                                          w2k_Z_memory.i32_store8(0, 60658, (w2k_Z_memory.i32_load8_u(w2k_l4 + 1)).also {w2k_l5=it});
                                          if (((w2k_l5 != 255).btoInt()).inz()){
                                            break@w2k_B24;}
                                          break@w2k_B12;
                                        } while (false);
                                        w2k_Z_memory.i32_store8(0, 60656, w2k_l2 + (-1));
                                        w2k_Z_memory.i32_store8(0, 60657, (w2k_Z_memory.i32_load8_u((60400 + (w2k_l3 + (-1))).also {w2k_l6=it})).also {w2k_l5=it});
                                        w2k_B29@ do {
                                          w2k_B30@ do {
                                            if (((w2k_l5 == 57).btoInt()).inz()){
                                              break@w2k_B30;}
                                            if (((w2k_l5 != 69).btoInt()).inz()){
                                              break@w2k_B29;}
                                            w2k_l5 = 69;
                                            w2k_B31@ do {
                                              if (((w2k_Z_memory.i32_load(0, 58980)).isz()).inz()){
                                                break@w2k_B31;}
                                              w2k_fwrite(54782, 18, 1, w2k_l1, );
                                              w2k_l5 = w2k_Z_memory.i32_load8_u(0, 60657);
                                            } while (false);
                                            w2k_Z_memory.i32_store8(w2k_l6, 42);
                                            break@w2k_B7;
                                          } while (false);
                                          w2k_Z_memory.i32_store8(w2k_l6, 44);
                                          if (((w2k_Z_memory.i32_load(0, 58980)).isz()).inz()){
                                            break@w2k_B4;}
                                          w2k_fwrite(54764, 17, 1, w2k_l1, );
                                          w2k_l5 = w2k_Z_memory.i32_load8_u(0, 60657);
                                          break@w2k_B6;
                                        } while (false);
                                        w2k_Z_memory.i32_store8(0, 60657, (w2k_Z_memory.i32_load8_u(53648 + w2k_l5) and (-128)).also {w2k_l5=it});
                                        w2k_B32@ do {
                                          if (((w2k_Z_memory.i32_load(0, 58980)).isz()).inz()){
                                            break@w2k_B32;}
                                          w2k_fwrite(54641, 14, 1, w2k_l1, );
                                          w2k_l5 = w2k_Z_memory.i32_load8_u(0, 60657);
                                        } while (false);
                                        if (((w2k_l5 and 255).isz()).inz()){
                                          break@w2k_B3;}
                                        w2k_Z_memory.i32_store8(w2k_l4, 18);
                                        break@w2k_B3;
                                      } while (false);
                                      if (((w2k_Z_memory.i32_load8_s(53648 + w2k_Z_memory.i32_load8_u(w2k_l4 + (-1))) > (-1)).btoInt()).inz()){
                                        break@w2k_B3;}
                                      w2k_B33@ do {
                                        if (((w2k_Z_memory.i32_load(0, 58980)).isz()).inz()){
                                          break@w2k_B33;}
                                        w2k_fwrite(54656, 30, 1, w2k_l1, );
                                        w2k_l3 = w2k_Z_memory.i32_load8_u(0, 60656);
                                      } while (false);
                                      w2k_Z_memory.i32_store8(60400 + w2k_l3, 19);
                                      break@w2k_B3;
                                    } while (false);
                                    if (((w2k_Z_memory.i32_load8_u(w2k_l4 + (-1)) != 60).btoInt()).inz()){
                                      break@w2k_B3;}
                                    w2k_B34@ do {
                                      if (((w2k_Z_memory.i32_load(0, 58980)).isz()).inz()){
                                        break@w2k_B34;}
                                      w2k_fwrite(54585, 17, 1, w2k_l1, );
                                    } while (false);
                                    w2k_Z_memory.i32_store8(w2k_l4, 38);
                                    break@w2k_B3;
                                  } while (false);
                                  w2k_Z_memory.i32_store8(0, 60657, (w2k_Z_memory.i32_load8_u(53648 + w2k_l5) and 32).also {w2k_l5=it});
                                  w2k_B35@ do {
                                    if (((w2k_Z_memory.i32_load(0, 58980)).isz()).inz()){
                                      break@w2k_B35;}
                                    if ((w2k_l5).inz()){
                                      break@w2k_B35;}
                                    w2k_fwrite(54860, 92, 1, w2k_l1, );
                                    w2k_l5 = w2k_Z_memory.i32_load8_u(0, 60657);
                                  } while (false);
                                  if (((w2k_l5 and 255).isz()).inz()){
                                    break@w2k_B12;}
                                  w2k_l5 = w2k_Z_memory.i32_load8_u(w2k_l4);
                                  break@w2k_B11;
                                } while (false);
                                if ((((w2k_Z_memory.i32_load8_u(w2k_l4 + 1)).also {w2k_l5=it} == 255).btoInt()).inz()){
                                  break@w2k_B3;}
                                if ((w2k_Z_memory.i32_load8_u(53648 + w2k_l5) and 32).inz()){
                                  break@w2k_B3;}
                                w2k_B36@ do {
                                  if (((w2k_Z_memory.i32_load(0, 58980)).isz()).inz()){
                                    break@w2k_B36;}
                                  w2k_fwrite(54953, 92, 1, w2k_l1, );
                                } while (false);
                                w2k_Z_memory.i32_store8(w2k_l4, 63);
                                break@w2k_B3;
                              } while (false);
                              w2k___stack_pointer = w2k_l0 + 32;
                              break@w2k_Bfunc;
                            } while (false);
                            w2k_l5 = 75;
                            w2k_Z_memory.i32_store8(w2k_l4, 75);
                          } while (false);
                          w2k_Z_memory.i32_store8(0, 60658, w2k_l5);
                          w2k_Z_memory.i32_store8(0, 60657, (w2k_Z_memory.i32_load8_u(53648 + (w2k_l5 and 255).also {w2k_l3=it}) and 1).also {w2k_l6=it});
                          w2k_B37@ do {
                            if ((w2k_l6).inz()){
                              break@w2k_B37;}
                            w2k_l7 = (w2k_Z_memory.i32_load8_u(0, 60656)).also {w2k_l3=it};
                            break@w2k_B8;
                          } while (false);
                          w2k_Z_memory.i32_store8(0, 60657, (w2k_Z_memory.i32_load8_u(w2k_l4 + (-1))).also {w2k_l6=it});
                          w2k_B38@ do {
                            if (((w2k_l6 == 32).btoInt()).inz()){
                              break@w2k_B38;}
                            w2k_Z_memory.i32_store8(0, 60657, w2k_l5);
                            break@w2k_B5;
                          } while (false);
                          w2k_B39@ do {
                            if (((w2k_Z_memory.i32_load(0, 58980)).isz()).inz()){
                              break@w2k_B39;}
                            w2k_Z_memory.i32_store(w2k_l0, 4, w2k_Z_memory.i32_load8_u(53552 + w2k_l3));
                            w2k_Z_memory.i32_store(w2k_l0, w2k_Z_memory.i32_load8_u(53456 + w2k_l3));
                            w2k_Z_memory.i32_store(w2k_l0, 12, w2k_Z_memory.i32_load8_u(53552 + (w2k_l3 + (-12)).also {w2k_l5=it}));
                            w2k_Z_memory.i32_store(w2k_l0, 8, w2k_Z_memory.i32_load8_u(53456 + w2k_l5));
                            w2k_fiprintf(w2k_l1, 54559, w2k_l0, );
                            w2k_l5 = w2k_Z_memory.i32_load8_u(0, 60658);
                          } while (false);
                          w2k_Z_memory.i32_store8(w2k_l4, w2k_l5 + (-12));
                          break@w2k_B3;
                        } while (false);
                        w2k_fwrite(w2k_l5, 17, 1, w2k_l1, );
                      } while (false);
                      w2k_Z_memory.i32_store8(60400 + (w2k_Z_memory.i32_load8_u(0, 60656)).also {w2k_l5=it}, 13);
                      w2k_Insert(w2k_l5 + 1 and 255, w2k_Z_memory.i32_load8_u(0, 60657), w2k_Z_memory.i32_load8_u(0, 59416), w2k_Z_memory.i32_load8_u(w2k_l5 + 59696), );
                      break@w2k_B3;
                    } while (false);
                    w2k_Z_memory.i32_store8(0, 60657, (w2k_Z_memory.i32_load8_u((60400 + w2k_l3).also {w2k_l6=it})).also {w2k_l5=it});
                    if (((w2k_l5 != 53).btoInt()).inz()){
                      break@w2k_B7;}
                    w2k_Z_memory.i32_store8(0, 60658, (w2k_Z_memory.i32_load8_u(w2k_l6 + (-1))).also {w2k_l5=it});
                    w2k_Z_memory.i32_store8(0, 60657, (w2k_Z_memory.i32_load8_u(w2k_l5 + 53744) and 4).also {w2k_l5=it});
                    if (((w2k_l5).isz()).inz()){
                      break@w2k_B3;}
                    w2k_B40@ do {
                      if (((w2k_Z_memory.i32_load(0, 58980)).isz()).inz()){
                        break@w2k_B40;}
                      w2k_fwrite(54603, 37, 1, w2k_l1, );
                      w2k_l7 = w2k_Z_memory.i32_load8_u(0, 60656);
                    } while (false);
                    w2k_Z_memory.i32_store8(60400 + (w2k_l7 and 255), 16);
                    break@w2k_B3;
                  } while (false);
                  if (((w2k_l5 and 255 != 42).btoInt()).inz()){
                    break@w2k_B6;}
                  w2k_l5 = 42;
                  w2k_B41@ do {
                    if (((w2k_Z_memory.i32_load(0, 58980)).isz()).inz()){
                      break@w2k_B41;}
                    w2k_fwrite(55309, 14, 1, w2k_l1, );
                    w2k_l5 = w2k_Z_memory.i32_load8_u(0, 60657);
                  } while (false);
                  w2k_Insert((w2k_Z_memory.i32_load8_u(0, 60656)).also {w2k_l6=it} + 1 and 255, w2k_l5 + 1 and 255, w2k_Z_memory.i32_load8_u(0, 59416), w2k_Z_memory.i32_load8_u(59696 + w2k_l6), );
                  break@w2k_B3;
                } while (false);
                if (((w2k_l5 and 255 != 44).btoInt()).inz()){
                  break@w2k_B5;}
                w2k_l5 = 44;
                w2k_B42@ do {
                  if (((w2k_Z_memory.i32_load(0, 58980)).isz()).inz()){
                    break@w2k_B42;}
                  w2k_fwrite(55297, 11, 1, w2k_l1, );
                  w2k_l5 = w2k_Z_memory.i32_load8_u(0, 60657);
                } while (false);
                w2k_Insert((w2k_Z_memory.i32_load8_u(0, 60656)).also {w2k_l6=it} + 1 and 255, w2k_l5 + 1 and 255, w2k_Z_memory.i32_load8_u(0, 59416), w2k_Z_memory.i32_load8_u(59696 + w2k_l6), );
                break@w2k_B3;
              } while (false);
              if ((((w2k_l5 and 255).also {w2k_l5=it} == 69).btoInt()).inz()){
                break@w2k_B4;}
              if (((w2k_l5 != 57).btoInt()).inz()){
                break@w2k_B3;}
            } while (false);
            if (((w2k_Z_memory.i32_load8_s(53648 + w2k_Z_memory.i32_load8_u((w2k_Z_memory.i32_load8_u(0, 60656)).also {w2k_l5=it} + 60400 + (-1))) > (-1)).btoInt()).inz()){
              break@w2k_B3;}
            w2k_Z_memory.i32_store8(0, 60656, (w2k_l5 + 1).also {w2k_l5=it});
            w2k_Z_memory.i32_store8(0, 60657, (w2k_Z_memory.i32_load8_u((60400 + (w2k_l5 and 255).also {w2k_l3=it}).also {w2k_l6=it})).also {w2k_l5=it});
            w2k_B43@ do {
              w2k_B44@ do {
                if (((w2k_l5).isz()).inz()){
                  break@w2k_B44;}
                if (((w2k_Z_memory.i32_load8_s(53648 + w2k_l5) > (-1)).btoInt()).inz()){
                  break@w2k_B3;}
                if ((w2k_Z_memory.i32_load8_u(59696 + w2k_l3)).inz()){
                  break@w2k_B3;}
                if (((w2k_Z_memory.i32_load(0, 58980)).isz()).inz()){
                  break@w2k_B43;}
                w2k_fwrite(54687, 70, 1, w2k_l1, );
                break@w2k_B43;
              } while (false);
              w2k_B45@ do {
                w2k_B46@ do {
                  if ((((w2k_Z_memory.i32_load8_u(w2k_l6 + 1)).also {w2k_l5=it} != 255).btoInt()).inz()){
                    break@w2k_B46;}
                  w2k_l5 = 0;
                  break@w2k_B45;
                } while (false);
                w2k_l5 = w2k_Z_memory.i32_load8_u(53648 + w2k_l5) and (-128);
              } while (false);
              w2k_Z_memory.i32_store8(0, 60657, w2k_l5);
              w2k_B47@ do {
                if (((w2k_Z_memory.i32_load(0, 58980)).isz()).inz()){
                  break@w2k_B47;}
                if (((w2k_l5 and 255).isz()).inz()){
                  break@w2k_B47;}
                w2k_fwrite(54687, 70, 1, w2k_l1, );
                w2k_l5 = w2k_Z_memory.i32_load8_u(0, 60657);
              } while (false);
              if (((w2k_l5 and 255).isz()).inz()){
                break@w2k_B3;}
            } while (false);
            w2k_Z_memory.i32_store8(w2k_l4, 30);
          } while (false);
          w2k_l2 = w2k_l2 + 1;
          continue@w2k_L1;
          break;
        }
      } while (false);
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_CopyStress(): Unit{
    var w2k_l0: Int = 0
    var w2k_l1: Int = 0
    var w2k_l2: Int = 0
    var w2k_l3: Int = 0
    try {
      w2k_Bfunc@ do {
        w2k_l0 = 0;
        w2k_L0@ while (true) {
          w2k_B1@ do {
            w2k_B2@ do {
              if ((((w2k_Z_memory.i32_load8_u((60400 + (w2k_l0 and 255).also {w2k_l1=it}).also {w2k_l2=it})).also {w2k_l3=it} == 255).btoInt()).inz()){
                break@w2k_B2;}
              if (((w2k_Z_memory.i32_load8_u(53648 + w2k_l3) and 64).isz()).inz()){
                break@w2k_B1;}
              if ((((w2k_Z_memory.i32_load8_u(w2k_l2 + 1)).also {w2k_l3=it} == 255).btoInt()).inz()){
                break@w2k_B1;}
              if (((w2k_Z_memory.i32_load8_s(53648 + w2k_l3) > (-1)).btoInt()).inz()){
                break@w2k_B1;}
              if ((((w2k_Z_memory.i32_load8_s((59696 + w2k_l1).also {w2k_l3=it} + 1)).also {w2k_l2=it} < 1).btoInt()).inz()){
                break@w2k_B1;}
              w2k_Z_memory.i32_store8(w2k_l3, w2k_l2 + 1);
              break@w2k_B1;
            } while (false);
            w2k_Z_memory.i32_store8(0, 60658, 255);
            break@w2k_Bfunc;
          } while (false);
          w2k_l0 = w2k_l0 + 1;
          continue@w2k_L0;
          break;
        }
      } while (false);
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_SetPhonemeLength(): Unit{
    var w2k_l0: Int = 0
    var w2k_l1: Int = 0
    try {
      w2k_Bfunc@ do {
        w2k_l0 = 0;
        w2k_B0@ do {
          w2k_L1@ while (true) {
            if ((((w2k_Z_memory.i32_load8_u(60400 + w2k_l0)).also {w2k_l1=it} == 255).btoInt()).inz()){
              break@w2k_B0;}
            w2k_Z_memory.i32_store8(59952 + w2k_l0, w2k_Z_memory.i32_load8_u(select(53824, 53904, (w2k_Z_memory.i32_load8_s(59696 + w2k_l0) > 0).btoInt()) + w2k_l1));
            w2k_l0 = w2k_l0 + 1;
            continue@w2k_L1;
            break;
          }
        } while (false);
      } while (false);
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_AdjustLengths(): Unit{
    var w2k_l0: Int = 0
    var w2k_l1: Int = 0
    var w2k_l2: Int = 0
    var w2k_l3: Int = 0
    var w2k_l4: Int = 0
    var w2k_l5: Int = 0
    var w2k_l6: Int = 0
    var w2k_l7: Int = 0
    var w2k_l8: Int = 0
    try {
      w2k_Bfunc@ do {
        w2k___stack_pointer = (w2k___stack_pointer - 288).also {w2k_l0=it};
        w2k_l1 = w2k_Z_memory.i32_load(0, 58140);
        w2k_l2 = 0;
        w2k_L0@ while (true) {
          w2k_B1@ do {
            w2k_B2@ do {
              if ((((w2k_Z_memory.i32_load8_u(60400 + (w2k_l2 and 255).also {w2k_l3=it})).also {w2k_l4=it} == 255).btoInt()).inz()){
                break@w2k_B2;}
              w2k_B3@ do {
                if (((java.lang.Integer.compareUnsigned(w2k_l4 + (-5), (-5))>0).btoInt()).inz()){
                  break@w2k_B3;}
                w2k_l2 = w2k_l2 + 1;
                break@w2k_B1;
              } while (false);
              w2k_L4@ while (true) {
                if (((((w2k_l2 + (-1)).also {w2k_l2=it} and 255).also {w2k_l4=it}).isz()).inz()){
                  break@w2k_B2;}
                w2k_B5@ do {
                  if ((((w2k_Z_memory.i32_load8_u(60400 + w2k_l4)).also {w2k_l4=it} == 255).btoInt()).inz()){
                    break@w2k_B5;}
                  if (((w2k_Z_memory.i32_load8_s(53648 + w2k_l4) > (-1)).btoInt()).inz()){
                    continue@w2k_L4;}
                } while (false);
                break;
              }
              w2k_Z_memory.i32_store8(0, 60656, w2k_l2);
              w2k_L6@ while (true) {
                w2k_B7@ do {
                  w2k_B8@ do {
                    if ((((w2k_Z_memory.i32_load8_u(60400 + (w2k_l2 and 255).also {w2k_l5=it})).also {w2k_l6=it} != 255).btoInt()).inz()){
                      break@w2k_B8;}
                    w2k_l4 = w2k_l2;
                    break@w2k_B7;
                  } while (false);
                  w2k_B9@ do {
                    if (((w2k_Z_memory.i32_load8_u(53744 + w2k_l6) and 32).isz()).inz()){
                      break@w2k_B9;}
                    w2k_l4 = w2k_l2;
                    if (((w2k_Z_memory.i32_load8_u(53648 + w2k_l6) and 4).isz()).inz()){
                      break@w2k_B7;}
                  } while (false);
                  w2k_l2 = 0;
                  w2k_Z_memory.i32_store8(0, 60657, (w2k_Z_memory.i32_load8_u(59952 + w2k_l5)).also {w2k_l4=it} + (w2k_l4 ushr 1) + 1);
                  w2k_B10@ do {
                    w2k_B11@ do {
                      if (((w2k_Z_memory.i32_load(0, 58980)).isz()).inz()){
                        break@w2k_B11;}
                      w2k_fwrite(55154, 80, 1, w2k_l1, );
                      w2k_l2 = 0;
                      if (((w2k_Z_memory.i32_load(0, 58980)).isz()).inz()){
                        break@w2k_B11;}
                      w2k_fwrite(54855, 4, 1, w2k_l1, );
                      w2k_l2 = 0;
                      w2k_l4 = w2k_Z_memory.i32_load8_u(0, 60656);
                      if (((w2k_Z_memory.i32_load(0, 58980)).isz()).inz()){
                        break@w2k_B10;}
                      w2k_Z_memory.i32_store(w2k_l0, 272, w2k_l4);
                      w2k_Z_memory.i32_store(w2k_l0, 284, w2k_Z_memory.i32_load8_u(59952 + w2k_l4));
                      w2k_Z_memory.i32_store(w2k_l0, 276, w2k_Z_memory.i32_load8_u(53456 + (w2k_Z_memory.i32_load8_u(60400 + w2k_l4)).also {w2k_l2=it}));
                      w2k_Z_memory.i32_store(w2k_l0, 280, w2k_Z_memory.i32_load8_u(w2k_l2 + 53552));
                      w2k_fiprintf(w2k_l1, 54520, w2k_l0 + 272, );
                      w2k_l2 = w2k_Z_memory.i32_load(0, 58980);
                    } while (false);
                    w2k_l4 = w2k_Z_memory.i32_load8_u(0, 60656);
                  } while (false);
                  w2k_Z_memory.i32_store8(59952 + (w2k_l4 and 255), w2k_Z_memory.i32_load8_u(0, 60657));
                  if (((w2k_l2).isz()).inz()){
                    break@w2k_B7;}
                  w2k_fwrite(54758, 5, 1, w2k_l1, );
                  w2k_l4 = w2k_Z_memory.i32_load8_u(0, 60656);
                  if (((w2k_Z_memory.i32_load(0, 58980)).isz()).inz()){
                    break@w2k_B7;}
                  w2k_Z_memory.i32_store(w2k_l0, 256, w2k_l4);
                  w2k_Z_memory.i32_store(w2k_l0, 268, w2k_Z_memory.i32_load8_u(59952 + w2k_l4));
                  w2k_Z_memory.i32_store(w2k_l0, 260, w2k_Z_memory.i32_load8_u(53456 + (w2k_Z_memory.i32_load8_u(60400 + w2k_l4)).also {w2k_l2=it}));
                  w2k_Z_memory.i32_store(w2k_l0, 264, w2k_Z_memory.i32_load8_u(w2k_l2 + 53552));
                  w2k_fiprintf(w2k_l1, 54520, w2k_l0 + 256, );
                  w2k_l4 = w2k_Z_memory.i32_load8_u(0, 60656);
                } while (false);
                w2k_Z_memory.i32_store8(0, 60656, (w2k_l4 + 1).also {w2k_l2=it});
                if (((w2k_l2 and 255 != w2k_l3).btoInt()).inz()){
                  continue@w2k_L6;}
                break;
              }
              w2k_l2 = w2k_l4 + 2;
              break@w2k_B1;
            } while (false);
            w2k_l2 = 0;
            w2k_L12@ while (true) {
              w2k_Z_memory.i32_store8(0, 60656, (w2k_l2).also {w2k_l4=it});
              w2k_B13@ do {
                w2k_B14@ do {
                  if ((((w2k_Z_memory.i32_load8_u((60400 + (w2k_l4 and 255).also {w2k_l5=it}).also {w2k_l3=it})).also {w2k_l6=it} == 255).btoInt()).inz()){
                    break@w2k_B14;}
                  w2k_Z_memory.i32_store8(0, 60657, (w2k_Z_memory.i32_load8_u(53648 + w2k_l6) and 128).also {w2k_l2=it});
                  w2k_B15@ do {
                    if (((w2k_l2).isz()).inz()){
                      break@w2k_B15;}
                    w2k_Z_memory.i32_store8(0, 60656, (w2k_l4 + 1).also {w2k_l2=it});
                    w2k_Z_memory.i32_store8(0, 60659, (select(65, (w2k_Z_memory.i32_load8_u(53648 + (w2k_Z_memory.i32_load8_u(60400 + (w2k_l2 and 255))).also {w2k_l6=it})).also {w2k_l7=it}, (w2k_l6 == 255).btoInt())).also {w2k_l8=it});
                    w2k_B16@ do {
                      if ((w2k_l7 and 64).inz()){
                        break@w2k_B16;}
                      if (((w2k_l6 and 254 != 18).btoInt()).inz()){
                        continue@w2k_L12;}
                      w2k_Z_memory.i32_store8(0, 60656, (w2k_l4 + 2).also {w2k_l4=it});
                      if (((w2k_Z_memory.i32_load8_u(53648 + w2k_Z_memory.i32_load8_u(60400 + (w2k_l4 and 255))) and 64).isz()).inz()){
                        continue@w2k_L12;}
                      w2k_l4 = 0;
                      w2k_B17@ do {
                        if (((w2k_Z_memory.i32_load(0, 58980)).isz()).inz()){
                          break@w2k_B17;}
                        w2k_fwrite(55324, 59, 1, w2k_l1, );
                        w2k_l4 = 0;
                        if (((w2k_Z_memory.i32_load(0, 58980)).isz()).inz()){
                          break@w2k_B17;}
                        w2k_fwrite(54855, 4, 1, w2k_l1, );
                        w2k_l4 = 0;
                        if (((w2k_Z_memory.i32_load(0, 58980)).isz()).inz()){
                          break@w2k_B17;}
                        w2k_Z_memory.i32_store(w2k_l0, 176, w2k_l5);
                        w2k_Z_memory.i32_store(w2k_l0, 188, w2k_Z_memory.i32_load8_u(59952 + w2k_l5));
                        w2k_Z_memory.i32_store(w2k_l0, 180, w2k_Z_memory.i32_load8_u(53456 + (w2k_Z_memory.i32_load8_u(w2k_l3)).also {w2k_l4=it}));
                        w2k_Z_memory.i32_store(w2k_l0, 184, w2k_Z_memory.i32_load8_u(w2k_l4 + 53552));
                        w2k_fiprintf(w2k_l1, 54520, w2k_l0 + 176, );
                        w2k_l4 = w2k_Z_memory.i32_load(0, 58980);
                      } while (false);
                      w2k_Z_memory.i32_store8((59952 + w2k_l5).also {w2k_l6=it}, w2k_Z_memory.i32_load8_u(w2k_l6) + (-1));
                      if (((w2k_l4).isz()).inz()){
                        continue@w2k_L12;}
                      w2k_fwrite(54758, 5, 1, w2k_l1, );
                      if (((w2k_Z_memory.i32_load(0, 58980)).isz()).inz()){
                        continue@w2k_L12;}
                      w2k_Z_memory.i32_store(w2k_l0, 160, w2k_l5);
                      w2k_Z_memory.i32_store(w2k_l0, 172, w2k_Z_memory.i32_load8_u(w2k_l6));
                      w2k_Z_memory.i32_store(w2k_l0, 164, w2k_Z_memory.i32_load8_u(53456 + (w2k_Z_memory.i32_load8_u(w2k_l3)).also {w2k_l4=it}));
                      w2k_Z_memory.i32_store(w2k_l0, 168, w2k_Z_memory.i32_load8_u(w2k_l4 + 53552));
                      w2k_fiprintf(w2k_l1, 54520, w2k_l0 + 160, );
                      continue@w2k_L12;
                    } while (false);
                    w2k_B18@ do {
                      if ((w2k_l8 and 4).inz()){
                        break@w2k_B18;}
                      if (((w2k_l8 and 1).isz()).inz()){
                        continue@w2k_L12;}
                      w2k_l6 = 0;
                      w2k_Z_memory.i32_store8(0, 60656, w2k_l4);
                      w2k_B19@ do {
                        if (((w2k_Z_memory.i32_load(0, 58980)).isz()).inz()){
                          break@w2k_B19;}
                        w2k_fwrite(54296, 59, 1, w2k_l1, );
                        w2k_l6 = 0;
                        if (((w2k_Z_memory.i32_load(0, 58980)).isz()).inz()){
                          break@w2k_B19;}
                        w2k_fwrite(54855, 4, 1, w2k_l1, );
                        w2k_l6 = 0;
                        if (((w2k_Z_memory.i32_load(0, 58980)).isz()).inz()){
                          break@w2k_B19;}
                        w2k_Z_memory.i32_store(w2k_l0, 208, (w2k_Z_memory.i32_load8_u(0, 60656)).also {w2k_l4=it});
                        w2k_Z_memory.i32_store(w2k_l0, 220, w2k_Z_memory.i32_load8_u(w2k_l4 + 59952));
                        w2k_Z_memory.i32_store(w2k_l0, 212, w2k_Z_memory.i32_load8_u(53456 + (w2k_Z_memory.i32_load8_u(w2k_l4 + 60400)).also {w2k_l4=it}));
                        w2k_Z_memory.i32_store(w2k_l0, 216, w2k_Z_memory.i32_load8_u(w2k_l4 + 53552));
                        w2k_fiprintf(w2k_l1, 54520, w2k_l0 + 208, );
                        w2k_l6 = w2k_Z_memory.i32_load(0, 58980);
                      } while (false);
                      w2k_Z_memory.i32_store8(0, 60659, ((w2k_Z_memory.i32_load8_u((59952 + w2k_Z_memory.i32_load8_u(0, 60656)).also {w2k_l4=it})).also {w2k_l5=it} ushr 3).also {w2k_l3=it});
                      w2k_Z_memory.i32_store8(w2k_l4, w2k_l5 - w2k_l3);
                      if (((w2k_l6).isz()).inz()){
                        continue@w2k_L12;}
                      w2k_fwrite(54758, 5, 1, w2k_l1, );
                      if (((w2k_Z_memory.i32_load(0, 58980)).isz()).inz()){
                        continue@w2k_L12;}
                      w2k_Z_memory.i32_store(w2k_l0, 192, (w2k_Z_memory.i32_load8_u(0, 60656)).also {w2k_l4=it});
                      w2k_Z_memory.i32_store(w2k_l0, 204, w2k_Z_memory.i32_load8_u(w2k_l4 + 59952));
                      w2k_Z_memory.i32_store(w2k_l0, 196, w2k_Z_memory.i32_load8_u(53456 + (w2k_Z_memory.i32_load8_u(w2k_l4 + 60400)).also {w2k_l4=it}));
                      w2k_Z_memory.i32_store(w2k_l0, 200, w2k_Z_memory.i32_load8_u(w2k_l4 + 53552));
                      w2k_fiprintf(w2k_l1, 54520, w2k_l0 + 192, );
                      continue@w2k_L12;
                    } while (false);
                    w2k_l6 = 0;
                    w2k_B20@ do {
                      if (((w2k_Z_memory.i32_load(0, 58980)).isz()).inz()){
                        break@w2k_B20;}
                      w2k_fwrite(55384, 61, 1, w2k_l1, );
                      w2k_l6 = 0;
                      if (((w2k_Z_memory.i32_load(0, 58980)).isz()).inz()){
                        break@w2k_B20;}
                      w2k_fwrite(54855, 4, 1, w2k_l1, );
                      w2k_l6 = 0;
                      if (((w2k_Z_memory.i32_load(0, 58980)).isz()).inz()){
                        break@w2k_B20;}
                      w2k_Z_memory.i32_store(w2k_l0, 240, (w2k_Z_memory.i32_load8_u(0, 60656) + (-1)).also {w2k_l4=it});
                      w2k_Z_memory.i32_store(w2k_l0, 252, w2k_Z_memory.i32_load8_u(59952 + w2k_l4));
                      w2k_Z_memory.i32_store(w2k_l0, 244, w2k_Z_memory.i32_load8_u(53456 + (w2k_Z_memory.i32_load8_u(60400 + w2k_l4)).also {w2k_l4=it}));
                      w2k_Z_memory.i32_store(w2k_l0, 248, w2k_Z_memory.i32_load8_u(w2k_l4 + 53552));
                      w2k_fiprintf(w2k_l1, 54520, w2k_l0 + 240, );
                      w2k_l6 = w2k_Z_memory.i32_load(0, 58980);
                    } while (false);
                    w2k_Z_memory.i32_store8(0, 60657, (w2k_Z_memory.i32_load8_u((w2k_Z_memory.i32_load8_u(0, 60656) + 59952 + (-1)).also {w2k_l5=it})).also {w2k_l4=it});
                    w2k_Z_memory.i32_store8(w2k_l5, w2k_l4 + (w2k_l4 ushr 2) + 1);
                    if (((w2k_l6).isz()).inz()){
                      continue@w2k_L12;}
                    w2k_fwrite(54758, 5, 1, w2k_l1, );
                    if (((w2k_Z_memory.i32_load(0, 58980)).isz()).inz()){
                      continue@w2k_L12;}
                    w2k_Z_memory.i32_store(w2k_l0, 224, (w2k_Z_memory.i32_load8_u(0, 60656) + (-1)).also {w2k_l4=it});
                    w2k_Z_memory.i32_store(w2k_l0, 236, w2k_Z_memory.i32_load8_u(59952 + w2k_l4));
                    w2k_Z_memory.i32_store(w2k_l0, 228, w2k_Z_memory.i32_load8_u(53456 + (w2k_Z_memory.i32_load8_u(60400 + w2k_l4)).also {w2k_l4=it}));
                    w2k_Z_memory.i32_store(w2k_l0, 232, w2k_Z_memory.i32_load8_u(w2k_l4 + 53552));
                    w2k_fiprintf(w2k_l1, 54520, w2k_l0 + 224, );
                    continue@w2k_L12;
                  } while (false);
                  w2k_B21@ do {
                    if ((((w2k_Z_memory.i32_load8_u(53744 + w2k_l6)).also {w2k_l7=it} and 8).isz()).inz()){
                      break@w2k_B21;}
                    w2k_Z_memory.i32_store8(0, 60656, (w2k_l4 + 1).also {w2k_l2=it});
                    w2k_B22@ do {
                      if ((((w2k_Z_memory.i32_load8_u(60400 + (w2k_l2 and 255))).also {w2k_l4=it} != 255).btoInt()).inz()){
                        break@w2k_B22;}
                      w2k_Z_memory.i32_store8(0, 60657, 0);
                      continue@w2k_L12;
                    } while (false);
                    w2k_Z_memory.i32_store8(0, 60657, w2k_Z_memory.i32_load8_u(53648 + w2k_l4) and 2);
                    if (((java.lang.Integer.compareUnsigned(w2k_l4 + (-78), (-24))<0).btoInt()).inz()){
                      continue@w2k_L12;}
                    w2k_l4 = 0;
                    w2k_B23@ do {
                      if (((w2k_Z_memory.i32_load(0, 58980)).isz()).inz()){
                        break@w2k_B23;}
                      w2k_fwrite(55091, 62, 1, w2k_l1, );
                      w2k_l4 = 0;
                      if (((w2k_Z_memory.i32_load(0, 58980)).isz()).inz()){
                        break@w2k_B23;}
                      w2k_fwrite(54758, 5, 1, w2k_l1, );
                      w2k_l4 = 0;
                      if (((w2k_Z_memory.i32_load(0, 58980)).isz()).inz()){
                        break@w2k_B23;}
                      w2k_l4 = 0;
                      w2k_Z_memory.i32_store(w2k_l0, 144, (w2k_Z_memory.i32_load8_u(0, 60656)).also {w2k_l6=it});
                      w2k_Z_memory.i32_store(w2k_l0, 156, w2k_Z_memory.i32_load8_u(w2k_l6 + 59952));
                      w2k_Z_memory.i32_store(w2k_l0, 148, w2k_Z_memory.i32_load8_u(53456 + (w2k_Z_memory.i32_load8_u(w2k_l6 + 60400)).also {w2k_l6=it}));
                      w2k_Z_memory.i32_store(w2k_l0, 152, w2k_Z_memory.i32_load8_u(w2k_l6 + 53552));
                      w2k_fiprintf(w2k_l1, 54520, w2k_l0 + 144, );
                      if (((w2k_Z_memory.i32_load(0, 58980)).isz()).inz()){
                        break@w2k_B23;}
                      w2k_Z_memory.i32_store(w2k_l0, 128, (w2k_Z_memory.i32_load8_u(0, 60656) + (-1)).also {w2k_l4=it});
                      w2k_Z_memory.i32_store(w2k_l0, 140, w2k_Z_memory.i32_load8_u(59952 + w2k_l4));
                      w2k_Z_memory.i32_store(w2k_l0, 132, w2k_Z_memory.i32_load8_u(53456 + (w2k_Z_memory.i32_load8_u(60400 + w2k_l4)).also {w2k_l4=it}));
                      w2k_Z_memory.i32_store(w2k_l0, 136, w2k_Z_memory.i32_load8_u(w2k_l4 + 53552));
                      w2k_fiprintf(w2k_l1, 54520, w2k_l0 + 128, );
                      w2k_l4 = w2k_Z_memory.i32_load(0, 58980);
                    } while (false);
                    w2k_Z_memory.i32_store16(59952 + w2k_Z_memory.i32_load8_u(0, 60656) + (-1), 1541);
                    if (((w2k_l4).isz()).inz()){
                      continue@w2k_L12;}
                    w2k_fwrite(54758, 5, 1, w2k_l1, );
                    if (((w2k_Z_memory.i32_load(0, 58980)).isz()).inz()){
                      continue@w2k_L12;}
                    w2k_Z_memory.i32_store(w2k_l0, 112, (w2k_Z_memory.i32_load8_u(0, 60656)).also {w2k_l4=it});
                    w2k_Z_memory.i32_store(w2k_l0, 124, w2k_Z_memory.i32_load8_u(w2k_l4 + 59952));
                    w2k_Z_memory.i32_store(w2k_l0, 116, w2k_Z_memory.i32_load8_u(53456 + (w2k_Z_memory.i32_load8_u(w2k_l4 + 60400)).also {w2k_l4=it}));
                    w2k_Z_memory.i32_store(w2k_l0, 120, w2k_Z_memory.i32_load8_u(w2k_l4 + 53552));
                    w2k_fiprintf(w2k_l1, 54520, w2k_l0 + 112, );
                    if (((w2k_Z_memory.i32_load(0, 58980)).isz()).inz()){
                      continue@w2k_L12;}
                    w2k_Z_memory.i32_store(w2k_l0, 96, (w2k_Z_memory.i32_load8_u(0, 60656) + (-1)).also {w2k_l4=it});
                    w2k_Z_memory.i32_store(w2k_l0, 108, w2k_Z_memory.i32_load8_u(59952 + w2k_l4));
                    w2k_Z_memory.i32_store(w2k_l0, 100, w2k_Z_memory.i32_load8_u(53456 + (w2k_Z_memory.i32_load8_u(60400 + w2k_l4)).also {w2k_l4=it}));
                    w2k_Z_memory.i32_store(w2k_l0, 104, w2k_Z_memory.i32_load8_u(w2k_l4 + 53552));
                    w2k_fiprintf(w2k_l1, 54520, w2k_l0 + 96, );
                    continue@w2k_L12;
                  } while (false);
                  w2k_l2 = w2k_l4;
                  w2k_B24@ do {
                    if (((java.lang.Integer.compareUnsigned(w2k_l6 + (-78), (-24))<0).btoInt()).inz()){
                      break@w2k_B24;}
                    w2k_L25@ while (true) {
                      if ((((w2k_Z_memory.i32_load8_u(60400 + ((w2k_l2 + 1).also {w2k_l2=it} and 255))).also {w2k_l6=it}).isz()).inz()){
                        continue@w2k_L25;}
                      break;
                    }
                    w2k_B26@ do {
                      if (((w2k_l6 != 255).btoInt()).inz()){
                        break@w2k_B26;}
                      w2k_Z_memory.i32_store8(0, 60656, w2k_l2);
                      break@w2k_B13;
                    } while (false);
                    w2k_Z_memory.i32_store8(0, 60656, w2k_l2);
                    if (((java.lang.Integer.compareUnsigned(w2k_l6 + (-78), (-25))<=0).btoInt()).inz()){
                      break@w2k_B13;}
                    w2k_l2 = 0;
                    w2k_B27@ do {
                      if (((w2k_Z_memory.i32_load(0, 58980)).isz()).inz()){
                        break@w2k_B27;}
                      w2k_fwrite(55446, 94, 1, w2k_l1, );
                      w2k_l2 = 0;
                      if (((w2k_Z_memory.i32_load(0, 58980)).isz()).inz()){
                        break@w2k_B27;}
                      w2k_fwrite(54855, 4, 1, w2k_l1, );
                      w2k_l2 = 0;
                      if (((w2k_Z_memory.i32_load(0, 58980)).isz()).inz()){
                        break@w2k_B27;}
                      w2k_l2 = 0;
                      w2k_Z_memory.i32_store(w2k_l0, 80, (w2k_Z_memory.i32_load8_u(0, 60656)).also {w2k_l6=it});
                      w2k_Z_memory.i32_store(w2k_l0, 92, w2k_Z_memory.i32_load8_u(w2k_l6 + 59952));
                      w2k_Z_memory.i32_store(w2k_l0, 84, w2k_Z_memory.i32_load8_u(53456 + (w2k_Z_memory.i32_load8_u(w2k_l6 + 60400)).also {w2k_l6=it}));
                      w2k_Z_memory.i32_store(w2k_l0, 88, w2k_Z_memory.i32_load8_u(w2k_l6 + 53552));
                      w2k_fiprintf(w2k_l1, 54520, w2k_l0 + 80, );
                      if (((w2k_Z_memory.i32_load(0, 58980)).isz()).inz()){
                        break@w2k_B27;}
                      w2k_Z_memory.i32_store(w2k_l0, 64, (w2k_Z_memory.i32_load8_u(0, 60656) + (-1)).also {w2k_l2=it});
                      w2k_Z_memory.i32_store(w2k_l0, 76, w2k_Z_memory.i32_load8_u(59952 + w2k_l2));
                      w2k_Z_memory.i32_store(w2k_l0, 68, w2k_Z_memory.i32_load8_u(53456 + (w2k_Z_memory.i32_load8_u(60400 + w2k_l2)).also {w2k_l2=it}));
                      w2k_Z_memory.i32_store(w2k_l0, 72, w2k_Z_memory.i32_load8_u(w2k_l2 + 53552));
                      w2k_fiprintf(w2k_l1, 54520, w2k_l0 + 64, );
                      w2k_l2 = w2k_Z_memory.i32_load(0, 58980);
                    } while (false);
                    w2k_Z_memory.i32_store8((59952 + (w2k_Z_memory.i32_load8_u(0, 60656)).also {w2k_l3=it}).also {w2k_l6=it}, (w2k_Z_memory.i32_load8_u(w2k_l6) ushr 1) + 1);
                    w2k_Z_memory.i32_store8(0, 60656, w2k_l4);
                    w2k_Z_memory.i32_store8((59952 + w2k_l5).also {w2k_l5=it}, (w2k_Z_memory.i32_load8_u(w2k_l5) ushr 1) + 1);
                    if (((w2k_l2).isz()).inz()){
                      break@w2k_B13;}
                    w2k_fwrite(54758, 5, 1, w2k_l1, );
                    if (((w2k_Z_memory.i32_load(0, 58980)).isz()).inz()){
                      break@w2k_B13;}
                    w2k_Z_memory.i32_store(w2k_l0, 48, w2k_l3);
                    w2k_Z_memory.i32_store(w2k_l0, 60, w2k_Z_memory.i32_load8_u(w2k_l6));
                    w2k_Z_memory.i32_store(w2k_l0, 52, w2k_Z_memory.i32_load8_u(53456 + (w2k_Z_memory.i32_load8_u(60400 + w2k_l3)).also {w2k_l2=it}));
                    w2k_Z_memory.i32_store(w2k_l0, 56, w2k_Z_memory.i32_load8_u(w2k_l2 + 53552));
                    w2k_fiprintf(w2k_l1, 54520, w2k_l0 + 48, );
                    if (((w2k_Z_memory.i32_load(0, 58980)).isz()).inz()){
                      break@w2k_B13;}
                    w2k_Z_memory.i32_store(w2k_l0, 32, (w2k_l3 + (-1)).also {w2k_l2=it});
                    w2k_Z_memory.i32_store(w2k_l0, 44, w2k_Z_memory.i32_load8_u(59952 + w2k_l2));
                    w2k_Z_memory.i32_store(w2k_l0, 36, w2k_Z_memory.i32_load8_u(53456 + (w2k_Z_memory.i32_load8_u(60400 + w2k_l2)).also {w2k_l2=it}));
                    w2k_Z_memory.i32_store(w2k_l0, 40, w2k_Z_memory.i32_load8_u(w2k_l2 + 53552));
                    w2k_fiprintf(w2k_l1, 54520, w2k_l0 + 32, );
                    break@w2k_B13;
                  } while (false);
                  if (((w2k_l7 and 16).isz()).inz()){
                    break@w2k_B13;}
                  if (((java.lang.Integer.compareUnsigned(w2k_Z_memory.i32_load8_u(w2k_l3 + (-1)) + (-78), (-24))<0).btoInt()).inz()){
                    break@w2k_B13;}
                  w2k_l2 = 0;
                  w2k_B28@ do {
                    w2k_B29@ do {
                      if (((w2k_Z_memory.i32_load(0, 58980)).isz()).inz()){
                        break@w2k_B29;}
                      w2k_fwrite(55244, 52, 1, w2k_l1, );
                      w2k_l2 = 0;
                      if (((w2k_Z_memory.i32_load(0, 58980)).isz()).inz()){
                        break@w2k_B29;}
                      w2k_fwrite(54855, 4, 1, w2k_l1, );
                      w2k_l2 = 0;
                      w2k_l6 = w2k_Z_memory.i32_load8_u(0, 60656);
                      if (((w2k_Z_memory.i32_load(0, 58980)).isz()).inz()){
                        break@w2k_B28;}
                      w2k_Z_memory.i32_store(w2k_l0, 16, w2k_l6);
                      w2k_Z_memory.i32_store(w2k_l0, 28, w2k_Z_memory.i32_load8_u(59952 + w2k_l6));
                      w2k_Z_memory.i32_store(w2k_l0, 20, w2k_Z_memory.i32_load8_u(53456 + (w2k_Z_memory.i32_load8_u(60400 + w2k_l6)).also {w2k_l2=it}));
                      w2k_Z_memory.i32_store(w2k_l0, 24, w2k_Z_memory.i32_load8_u(w2k_l2 + 53552));
                      w2k_fiprintf(w2k_l1, 54520, w2k_l0 + 16, );
                      w2k_l2 = w2k_Z_memory.i32_load(0, 58980);
                    } while (false);
                    w2k_l6 = w2k_Z_memory.i32_load8_u(0, 60656);
                  } while (false);
                  w2k_Z_memory.i32_store8((59952 + (w2k_l6 and 255)).also {w2k_l6=it}, w2k_Z_memory.i32_load8_u(w2k_l6) + (-2));
                  if (((w2k_l2).isz()).inz()){
                    break@w2k_B13;}
                  w2k_fwrite(54758, 5, 1, w2k_l1, );
                  if (((w2k_Z_memory.i32_load(0, 58980)).isz()).inz()){
                    break@w2k_B13;}
                  w2k_Z_memory.i32_store(w2k_l0, (w2k_Z_memory.i32_load8_u(0, 60656)).also {w2k_l2=it});
                  w2k_Z_memory.i32_store(w2k_l0, 12, w2k_Z_memory.i32_load8_u(w2k_l2 + 59952));
                  w2k_Z_memory.i32_store(w2k_l0, 4, w2k_Z_memory.i32_load8_u(53456 + (w2k_Z_memory.i32_load8_u(w2k_l2 + 60400)).also {w2k_l2=it}));
                  w2k_Z_memory.i32_store(w2k_l0, 8, w2k_Z_memory.i32_load8_u(w2k_l2 + 53552));
                  w2k_fiprintf(w2k_l1, 54520, w2k_l0, );
                  break@w2k_B13;
                } while (false);
                w2k___stack_pointer = w2k_l0 + 288;
                break@w2k_Bfunc;
              } while (false);
              w2k_l2 = w2k_l4 + 1;
              continue@w2k_L12;
              break;
            }
          } while (false);
          w2k_Z_memory.i32_store8(0, 60656, w2k_l2);
          continue@w2k_L0;
          break;
        }
      } while (false);
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_Code41240(): Unit{
    var w2k_l0: Int = 0
    var w2k_l1: Int = 0
    var w2k_l2: Int = 0
    var w2k_l3: Int = 0
    var w2k_l4: Int = 0
    var w2k_l5: Int = 0
    try {
      w2k_Bfunc@ do {
        w2k_l0 = 0;
        w2k_B0@ do {
          w2k_L1@ while (true) {
            if ((((w2k_Z_memory.i32_load8_u(60400 + (w2k_l0 and 255).also {w2k_l1=it})).also {w2k_l2=it} == 255).btoInt()).inz()){
              break@w2k_B0;}
            w2k_Z_memory.i32_store8(0, 60656, w2k_l0);
            w2k_l3 = 1;
            w2k_B2@ do {
              if ((((w2k_Z_memory.i32_load8_u(53648 + w2k_l2)).also {w2k_l4=it} and 2).isz()).inz()){
                break@w2k_B2;}
              w2k_l5 = w2k_l0;
              w2k_B3@ do {
                w2k_B4@ do {
                  if ((w2k_l4 and 1).inz()){
                    break@w2k_B4;}
                  w2k_Insert(w2k_l0 + 1 and 255, (w2k_l2 + 1).also {w2k_l5=it} and 255, w2k_Z_memory.i32_load8_u(53904 + w2k_l5), w2k_Z_memory.i32_load8_u((59696 + w2k_l1).also {w2k_l4=it}), );
                  break@w2k_B3;
                } while (false);
                w2k_L5@ while (true) {
                  if ((((w2k_Z_memory.i32_load8_u(60400 + ((w2k_l5 + 1).also {w2k_l5=it} and 255))).also {w2k_l4=it}).isz()).inz()){
                    continue@w2k_L5;}
                  break;
                }
                w2k_B6@ do {
                  w2k_B7@ do {
                    if (((w2k_l4 == 255).btoInt()).inz()){
                      break@w2k_B7;}
                    w2k_Z_memory.i32_store8(0, 60657, w2k_l4);
                    w2k_Z_memory.i32_store8(0, 60656, w2k_l5);
                    if ((w2k_Z_memory.i32_load8_u(53648 + w2k_l4) and 8).inz()){
                      break@w2k_B2;}
                    if (((w2k_l4 and 254 != 36).btoInt()).inz()){
                      break@w2k_B6;}
                    break@w2k_B2;
                  } while (false);
                  w2k_Z_memory.i32_store8(0, 60657, 255);
                  w2k_Z_memory.i32_store8(0, 60656, w2k_l5);
                } while (false);
                w2k_Insert(w2k_l0 + 1 and 255, (w2k_l2 + 1).also {w2k_l5=it} and 255, w2k_Z_memory.i32_load8_u(53904 + w2k_l5), w2k_Z_memory.i32_load8_u((59696 + w2k_l1).also {w2k_l4=it}), );
              } while (false);
              w2k_Insert(w2k_l0 + 2 and 255, (w2k_l2 + 2).also {w2k_l5=it} and 255, w2k_Z_memory.i32_load8_u(53904 + w2k_l5), w2k_Z_memory.i32_load8_u(w2k_l4), );
              w2k_l3 = 3;
            } while (false);
            w2k_l0 = w2k_l0 + w2k_l3;
            continue@w2k_L1;
            break;
          }
        } while (false);
      } while (false);
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_InsertBreath(): Unit{
    var w2k_l0: Int = 0
    var w2k_l1: Int = 0
    var w2k_l2: Int = 0
    var w2k_l3: Int = 0
    var w2k_l4: Int = 0
    var w2k_l5: Int = 0
    var w2k_l6: Int = 0
    try {
      w2k_Bfunc@ do {
        w2k_l0 = 0;
        w2k_l1 = 255;
        w2k_l2 = 0;
        w2k_L0@ while (true) {
          w2k_l3 = w2k_l1 + 1;
          w2k_l4 = w2k_l1 and 255;
          w2k_B1@ do {
            w2k_L2@ while (true) {
              w2k_Z_memory.i32_store8(0, 60656, w2k_l2);
              if ((((w2k_Z_memory.i32_load8_u(60400 + (w2k_l2 and 255).also {w2k_l5=it})).also {w2k_l6=it} == 255).btoInt()).inz()){
                break@w2k_B1;}
              w2k_B3@ do {
                if (((java.lang.Integer.compareUnsigned(((w2k_l0 and 255) + w2k_Z_memory.i32_load8_u(59952 + w2k_l5)).also {w2k_l0=it} and 248, 231)>0).btoInt()).inz()){
                  break@w2k_B3;}
                w2k_B4@ do {
                  if (((w2k_l6 == 254).btoInt()).inz()){
                    break@w2k_B4;}
                  w2k_Z_memory.i32_store8(0, 60657, w2k_Z_memory.i32_load8_u(53744 + w2k_l6) and 1);
                  w2k_B5@ do {
                    if (((java.lang.Integer.compareUnsigned(w2k_l6 + (-5), (-4))<0).btoInt()).inz()){
                      break@w2k_B5;}
                    w2k_l0 = 0;
                    w2k_Z_memory.i32_store8(0, 60656, (w2k_l2 + 1).also {w2k_l6=it});
                    w2k_Insert(w2k_l6 and 255, 254, w2k_Z_memory.i32_load8_u(0, 59416), 0, );
                    w2k_l2 = w2k_l2 + 2;
                    continue@w2k_L2;
                  } while (false);
                  w2k_l1 = select(w2k_l1, w2k_l2, w2k_l6);
                } while (false);
                w2k_l2 = w2k_l2 + 1;
                continue@w2k_L0;
              } while (false);
              w2k_l0 = 0;
              w2k_Z_memory.i32_store8(0, 60656, w2k_l3);
              w2k_Z_memory.i32_store8(59952 + w2k_l4, 4);
              w2k_Z_memory.i32_store8(60400 + w2k_l4, 31);
              w2k_Z_memory.i32_store8(59696 + w2k_l4, 0);
              w2k_Insert(w2k_l3 and 255, 254, w2k_Z_memory.i32_load8_u(0, 59416), 0, );
              w2k_Z_memory.i32_store8(0, 60656, (w2k_Z_memory.i32_load8_u(0, 60656) + 1).also {w2k_l2=it});
              continue@w2k_L2;
              break;
            }
          } while (false);
          break;
        }
      } while (false);
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_PrepareOutput(): Unit{
    var w2k_l0: Int = 0
    var w2k_l1: Int = 0
    var w2k_l2: Int = 0
    var w2k_l3: Int = 0
    var w2k_l4: Int = 0
    try {
      w2k_Bfunc@ do {
        w2k_Z_memory.i32_store8(0, 60656, 0);
        w2k_l0 = 0;
        w2k_l1 = 0;
        w2k_L0@ while (true) {
          w2k_Z_memory.i32_store8(0, 60658, w2k_l0);
          w2k_B1@ do {
            w2k_L2@ while (true) {
              w2k_B3@ do {
                if ((((w2k_Z_memory.i32_load8_u(60400 + (w2k_l1 and 255).also {w2k_l2=it})).also {w2k_l3=it}).isz()).inz()){
                  break@w2k_B3;}
                w2k_B4@ do {
                  w2k_B5@ do {
                    when (w2k_l3 + (-254)) {
                      0 -> {
                        break@w2k_B4;}
                      1 -> {
                        break@w2k_B5;}
                      else -> {
                        break@w2k_B1;}
                    }
                  } while (false);
                  w2k_Z_memory.i32_store8(0, 60657, 255);
                  w2k_Z_memory.i32_store8(60208 + (w2k_l0 and 255), 255);
                  w2k_Render();
                  break@w2k_Bfunc;
                } while (false);
                w2k_Z_memory.i32_store8(0, 60657, w2k_l3);
                w2k_Z_memory.i32_store8(0, 60656, (w2k_l1 + 1).also {w2k_l1=it});
                w2k_Z_memory.i32_store8(60208 + (w2k_l0 and 255), 255);
                w2k_Render();
                w2k_Z_memory.i32_store8(0, 60656, w2k_l1);
                w2k_l0 = 0;
                continue@w2k_L0;
              } while (false);
              w2k_Z_memory.i32_store8(0, 60656, (w2k_l1 + 1).also {w2k_l1=it});
              continue@w2k_L2;
              break;
            }
          } while (false);
          w2k_Z_memory.i32_store8(0, 60657, w2k_l3);
          w2k_Z_memory.i32_store8(0, 60656, (w2k_l1 + 1).also {w2k_l1=it});
          w2k_Z_memory.i32_store8(60208 + (w2k_l0 and 255).also {w2k_l4=it}, w2k_l3);
          w2k_Z_memory.i32_store8(60336 + w2k_l4, w2k_Z_memory.i32_load8_u(59952 + w2k_l2));
          w2k_Z_memory.i32_store8(60272 + w2k_l4, w2k_Z_memory.i32_load8_u(59696 + w2k_l2));
          w2k_l0 = w2k_l0 + 1;
          continue@w2k_L0;
          break;
        }
      } while (false);
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_Insert(w2k_p0: Int, w2k_p1: Int, w2k_p2: Int, w2k_p3: Int): Unit{
    var w2k_p0 = w2k_p0;
    var w2k_p1 = w2k_p1;
    var w2k_p2 = w2k_p2;
    var w2k_p3 = w2k_p3;
    var w2k_l4: Int = 0
    var w2k_l5: Int = 0
    try {
      w2k_Bfunc@ do {
        w2k_l4 = 253;
        w2k_B0@ do {
          w2k_L1@ while (true) {
            if (((w2k_l4 < w2k_p0).btoInt()).inz()){
              break@w2k_B0;}
            w2k_Z_memory.i32_store8(60400 + (w2k_l4 + 1).also {w2k_l5=it}, w2k_Z_memory.i32_load8_u(60400 + w2k_l4));
            w2k_Z_memory.i32_store8(59952 + w2k_l5, w2k_Z_memory.i32_load8_u(59952 + w2k_l4));
            w2k_Z_memory.i32_store8(59696 + w2k_l5, w2k_Z_memory.i32_load8_u(59696 + w2k_l4));
            w2k_l4 = w2k_l4 + (-1);
            continue@w2k_L1;
            break;
          }
        } while (false);
        w2k_Z_memory.i32_store8(59952 + w2k_p0, w2k_p2);
        w2k_Z_memory.i32_store8(60400 + w2k_p0, w2k_p1);
        w2k_Z_memory.i32_store8(59696 + w2k_p0, w2k_p3);
      } while (false);
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_Output8BitAry(w2k_p0: Int, w2k_p1: Int): Unit{
    var w2k_p0 = w2k_p0;
    var w2k_p1 = w2k_p1;
    var w2k_l2: Int = 0
    try {
      w2k_Bfunc@ do {
        w2k_l2 = w2k_Z_memory.i32_load(58880 + w2k_Z_memory.i32_load(0, 60668) * 20 + (w2k_p0 shl 2));
        w2k_Z_memory.i32_store(0, 60668, w2k_p0);
        w2k_Z_memory.i32_store(0, 59420, w2k_l2 + w2k_Z_memory.i32_load(0, 59420));
        w2k_p0 = 0;
        w2k_B0@ do {
          w2k_L1@ while (true) {
            if (((w2k_p0 == 5).btoInt()).inz()){
              break@w2k_B0;}
            w2k_Z_memory.i32_store8(w2k_Z_memory.i32_load(0, 59424) + (wasm_rt_impl.I32_DIV_S(w2k_Z_memory.i32_load(0, 59420), 50) + w2k_p0), w2k_Z_memory.i32_load8_u(w2k_p1 + w2k_p0));
            w2k_p0 = w2k_p0 + 1;
            continue@w2k_L1;
            break;
          }
        } while (false);
      } while (false);
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_Output8Bit(w2k_p0: Int, w2k_p1: Int): Unit{
    var w2k_p0 = w2k_p0;
    var w2k_p1 = w2k_p1;
    var w2k_l2: Int = 0
    try {
      w2k_Bfunc@ do {
        w2k___stack_pointer = (w2k___stack_pointer - 16).also {w2k_l2=it};
        w2k_Z_memory.i32_store8(w2k_l2 + 12, w2k_p1);
        w2k_Z_memory.i32_store(w2k_l2, 8, w2k_p1 * 16843009);
        w2k_Output8BitAry(w2k_p0, w2k_l2 + 8, );
        w2k___stack_pointer = w2k_l2 + 16;
      } while (false);
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_Read(w2k_p0: Int, w2k_p1: Int): Int{
    var w2k_p0 = w2k_p0;
    var w2k_p1 = w2k_p1;
    try {
          var w2k_i0: Int = 0
      w2k_Bfunc@ do {
        w2k_B0@ do {
          w2k_B1@ do {
            w2k_B2@ do {
              w2k_B3@ do {
                w2k_B4@ do {
                  w2k_B5@ do {
                    w2k_B6@ do {
                      w2k_B7@ do {
                        w2k_B8@ do {
                          when (w2k_p0 + (-168)) {
                            0 -> {
                              break@w2k_B8;}
                            1 -> {
                              break@w2k_B7;}
                            2 -> {
                              break@w2k_B6;}
                            3 -> {
                              break@w2k_B5;}
                            4 -> {
                              break@w2k_B4;}
                            5 -> {
                              break@w2k_B3;}
                            6 -> {
                              break@w2k_B2;}
                            else -> {
                              break@w2k_B1;}
                          }
                        } while (false);
                        w2k_p0 = w2k_Z_memory.i32_load8_u(60672 + w2k_p1);
                        break@w2k_B0;
                      } while (false);
                      w2k_p0 = w2k_Z_memory.i32_load8_u(60928 + w2k_p1);
                      break@w2k_B0;
                    } while (false);
                    w2k_p0 = w2k_Z_memory.i32_load8_u(61184 + w2k_p1);
                    break@w2k_B0;
                  } while (false);
                  w2k_p0 = w2k_Z_memory.i32_load8_u(61440 + w2k_p1);
                  break@w2k_B0;
                } while (false);
                w2k_p0 = w2k_Z_memory.i32_load8_u(61696 + w2k_p1);
                break@w2k_B0;
              } while (false);
              w2k_p0 = w2k_Z_memory.i32_load8_u(61952 + w2k_p1);
              break@w2k_B0;
            } while (false);
            w2k_p0 = w2k_Z_memory.i32_load8_u(62208 + w2k_p1);
            break@w2k_B0;
          } while (false);
          w2k_p0 = 0;
          w2k_fwrite(53994, 23, 1, w2k_Z_memory.i32_load(0, 58140), );
        } while (false);
        w2k_i0 = w2k_p0 and 255;
      } while (false);
      return w2k_i0;
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_Write(w2k_p0: Int, w2k_p1: Int, w2k_p2: Int): Unit{
    var w2k_p0 = w2k_p0;
    var w2k_p1 = w2k_p1;
    var w2k_p2 = w2k_p2;
    try {
      w2k_Bfunc@ do {
        w2k_B0@ do {
          w2k_B1@ do {
            w2k_B2@ do {
              w2k_B3@ do {
                w2k_B4@ do {
                  w2k_B5@ do {
                    w2k_B6@ do {
                      w2k_B7@ do {
                        when (w2k_p0 + (-168)) {
                          0 -> {
                            break@w2k_B7;}
                          1 -> {
                            break@w2k_B6;}
                          2 -> {
                            break@w2k_B5;}
                          3 -> {
                            break@w2k_B4;}
                          4 -> {
                            break@w2k_B3;}
                          5 -> {
                            break@w2k_B2;}
                          6 -> {
                            break@w2k_B1;}
                          else -> {
                            break@w2k_B0;}
                        }
                      } while (false);
                      w2k_Z_memory.i32_store8(60672 + w2k_p1, w2k_p2);
                      break@w2k_Bfunc;
                    } while (false);
                    w2k_Z_memory.i32_store8(60928 + w2k_p1, w2k_p2);
                    break@w2k_Bfunc;
                  } while (false);
                  w2k_Z_memory.i32_store8(61184 + w2k_p1, w2k_p2);
                  break@w2k_Bfunc;
                } while (false);
                w2k_Z_memory.i32_store8(61440 + w2k_p1, w2k_p2);
                break@w2k_Bfunc;
              } while (false);
              w2k_Z_memory.i32_store8(61696 + w2k_p1, w2k_p2);
              break@w2k_Bfunc;
            } while (false);
            w2k_Z_memory.i32_store8(61952 + w2k_p1, w2k_p2);
            break@w2k_Bfunc;
          } while (false);
          w2k_Z_memory.i32_store8(62208 + w2k_p1, w2k_p2);
          break@w2k_Bfunc;
        } while (false);
        w2k_fwrite(54079, 24, 1, w2k_Z_memory.i32_load(0, 58140), );
      } while (false);
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_RenderSample(w2k_p0: Int): Unit{
    var w2k_p0 = w2k_p0;
    var w2k_l1: Int = 0
    var w2k_l2: Int = 0
    var w2k_l3: Int = 0
    try {
      w2k_Bfunc@ do {
        w2k_Z_memory.i32_store8(0, 60666, (w2k_Z_memory.i32_load8_u(0, 59409)).also {w2k_l1=it});
        w2k_Z_memory.i32_store8(0, 59136, (((w2k_Z_memory.i32_load8_u(0, 60663)).also {w2k_l2=it} and 7) + (-1)).also {w2k_l3=it});
        w2k_Z_memory.i32_store8(0, 60659, w2k_l3);
        w2k_Z_memory.i32_store8(0, 60665, w2k_l3);
        w2k_Z_memory.i32_store8(0, 60660, w2k_Z_memory.i32_load8_u(55656 + (w2k_l3 and 255)));
        w2k_B0@ do {
          w2k_B1@ do {
            if (((w2k_l2 and 248).also {w2k_l3=it}).inz()){
              break@w2k_B1;}
            w2k_Z_memory.i32_store8(0, 59408, (w2k_Z_memory.i32_load8_u(60672 + w2k_l1) ushr 4).also {w2k_l2=it});
            w2k_Z_memory.i32_store8(0, 59409, (w2k_Z_memory.i32_load8_u(w2k_p0)).also {w2k_l3=it});
            w2k_l1 = w2k_l2 xor (-1);
            w2k_L2@ while (true) {
              w2k_Z_memory.i32_store8(0, 60659, 8);
              w2k_l3 = 56784 + (w2k_Z_memory.i32_load8_u(0, 60665) shl 8 or (w2k_l3 and 255));
              w2k_L3@ while (true) {
                w2k_Z_memory.i32_store8(0, 59408, (w2k_Z_memory.i32_load8_s(w2k_l3)).also {w2k_l3=it} shl 1);
                w2k_B4@ do {
                  w2k_B5@ do {
                    if (((w2k_l3 > (-1)).btoInt()).inz()){
                      break@w2k_B5;}
                    w2k_Z_memory.i32_store8(0, 59136, 26);
                    w2k_Output8Bit(3, 160, );
                    break@w2k_B4;
                  } while (false);
                  w2k_Z_memory.i32_store8(0, 59136, 6);
                  w2k_Output8Bit(4, 96, );
                } while (false);
                w2k_Z_memory.i32_store8(0, 60659, (w2k_Z_memory.i32_load8_u(0, 60659) + (-1)).also {w2k_l2=it});
                w2k_l3 = 59408;
                if ((w2k_l2 and 255).inz()){
                  continue@w2k_L3;}
                break;
              }
              w2k_Z_memory.i32_store8(0, 59409, (w2k_Z_memory.i32_load8_u(0, 59409) + 1).also {w2k_l3=it});
              if (((((w2k_l1 and 255) + 1).also {w2k_l1=it} and 255 == w2k_l1).btoInt()).inz()){
                continue@w2k_L2;}
              break;
            }
            w2k_Z_memory.i32_store8(0, 60664, 1);
            w2k_Z_memory.i32_store8(0, 59408, 1);
            w2k_Z_memory.i32_store8(w2k_p0, w2k_l3);
            break@w2k_B0;
          } while (false);
          w2k_Z_memory.i32_store8(0, 59409, (w2k_l3 xor (-1)).also {w2k_l3=it});
          w2k_L6@ while (true) {
            w2k_Z_memory.i32_store8(0, 60659, 8);
            w2k_l3 = 56784 + (w2k_Z_memory.i32_load8_u(0, 60665) shl 8 or (w2k_l3 and 255));
            w2k_L7@ while (true) {
              w2k_Z_memory.i32_store8(0, 59408, (w2k_Z_memory.i32_load8_s(w2k_l3)).also {w2k_l3=it} shl 1);
              w2k_B8@ do {
                w2k_B9@ do {
                  if (((w2k_l3 < 0).btoInt()).inz()){
                    break@w2k_B9;}
                  w2k_Z_memory.i32_store8(0, 59136, (w2k_Z_memory.i32_load8_u(0, 60660)).also {w2k_l3=it});
                  w2k_Output8Bit(1, w2k_l3 shl 4 and 240, );
                  if ((w2k_Z_memory.i32_load8_u(0, 59136)).inz()){
                    break@w2k_B8;}
                } while (false);
                w2k_Output8Bit(2, 80, );
              } while (false);
              w2k_Z_memory.i32_store8(0, 60659, (w2k_Z_memory.i32_load8_u(0, 60659) + (-1)).also {w2k_l2=it});
              w2k_Z_memory.i32_store8(0, 59136, 0);
              w2k_l3 = 59408;
              if ((w2k_l2 and 255).inz()){
                continue@w2k_L7;}
              break;
            }
            w2k_Z_memory.i32_store8(0, 59409, (w2k_Z_memory.i32_load8_u(0, 59409) + 1).also {w2k_l3=it});
            if (((w2k_l3 and 255 == w2k_l3).btoInt()).inz()){
              continue@w2k_L6;}
            break;
          }
          w2k_Z_memory.i32_store8(0, 60664, 1);
        } while (false);
        w2k_Z_memory.i32_store8(0, 59409, w2k_Z_memory.i32_load8_u(0, 60666));
      } while (false);
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_Render(): Unit{
    var w2k_l0: Int = 0
    var w2k_l1: Int = 0
    var w2k_l2: Int = 0
    var w2k_l3: Int = 0
    var w2k_l4: Int = 0
    var w2k_l5: Int = 0
    var w2k_l6: Int = 0
    var w2k_l7: Int = 0
    var w2k_l8: Int = 0
    var w2k_l9: Int = 0
    var w2k_l10: Int = 0
    var w2k_l11: Int = 0
    var w2k_l12: Int = 0
    var w2k_l13: Int = 0
    var w2k_l14: Int = 0
    var w2k_l15: Int = 0
    var w2k_l16: Int = 0
    try {
          var w2k_i0: Int = 0
      w2k_Bfunc@ do {
        w2k___stack_pointer = (w2k___stack_pointer - 16).also {w2k_l0=it};
        w2k_Z_memory.i32_store8(w2k_l0, 15, 0);
        w2k_B0@ do {
          if (((w2k_Z_memory.i32_load8_u(0, 60208) == 255).btoInt()).inz()){
            break@w2k_B0;}
          w2k_Z_memory.i32_store8(0, 60664, 0);
          w2k_Z_memory.i32_store8(0, 59136, 0);
          w2k_l1 = 0;
          w2k_B1@ do {
            w2k_L2@ while (true) {
              w2k_Z_memory.i32_store8(0, 59409, w2k_l1);
              w2k_Z_memory.i32_store8(0, 59408, (w2k_Z_memory.i32_load8_u(60208 + (w2k_l1 and 255))).also {w2k_l1=it});
              w2k_Z_memory.i32_store8(0, 60659, w2k_l1);
              w2k_B3@ do {
                w2k_B4@ do {
                  if (((w2k_l1 == 1).btoInt()).inz()){
                    break@w2k_B4;}
                  if (((w2k_l1 != 255).btoInt()).inz()){
                    break@w2k_B3;}
                  break@w2k_B1;
                } while (false);
                w2k_Z_memory.i32_store8(0, 59408, 1);
                w2k_AddInflection(1, 0, );
                w2k_l1 = w2k_Z_memory.i32_load8_u(0, 59408);
              } while (false);
              w2k_B5@ do {
                if (((w2k_l1 and 255 != 2).btoInt()).inz()){
                  break@w2k_B5;}
                w2k_AddInflection(255, 0, );
              } while (false);
              w2k_l2 = w2k_Z_memory.i32_load8_u(0, 59409);
              w2k_Z_memory.i32_store8(0, 59409, (w2k_Z_memory.i32_load8_u(0, 60659)).also {w2k_l1=it});
              w2k_l3 = w2k_Z_memory.i32_load8_u(0, 58625) + w2k_Z_memory.i32_load8_u(w2k_Z_memory.i32_load8_u(w2k_l2 + 60272) + 55661 + 1);
              w2k_l4 = w2k_Z_memory.i32_load8_u(w2k_l1 + 55952);
              w2k_l5 = w2k_Z_memory.i32_load8_u(w2k_l1 + 56192);
              w2k_l6 = w2k_Z_memory.i32_load8_u(w2k_l1 + 56112);
              w2k_l7 = w2k_Z_memory.i32_load8_u(w2k_l1 + 56032);
              w2k_l8 = w2k_Z_memory.i32_load8_u(w2k_l1 + 58800);
              w2k_l9 = w2k_Z_memory.i32_load8_u(w2k_l1 + 58720);
              w2k_l10 = w2k_Z_memory.i32_load8_u(w2k_l1 + 58640);
              w2k_l11 = w2k_Z_memory.i32_load8_u(w2k_l2 + 60336);
              w2k_l2 = w2k_Z_memory.i32_load8_u(0, 59136);
              w2k_L6@ while (true) {
                w2k_Z_memory.i32_store8(61184 + (w2k_l2 and 255).also {w2k_l1=it}, w2k_l9);
                w2k_Z_memory.i32_store8(60928 + w2k_l1, w2k_l10);
                w2k_Z_memory.i32_store8(61440 + w2k_l1, w2k_l8);
                w2k_Z_memory.i32_store8(61696 + w2k_l1, w2k_l7);
                w2k_Z_memory.i32_store8(61952 + w2k_l1, w2k_l6);
                w2k_Z_memory.i32_store8(62208 + w2k_l1, w2k_l5);
                w2k_Z_memory.i32_store8(62464 + w2k_l1, w2k_l4);
                w2k_Z_memory.i32_store8(60672 + w2k_l1, w2k_l3);
                w2k_l2 = w2k_l2 + 1;
                if (((w2k_l11 + (-1)).also {w2k_l11=it} and 255).inz()){
                  continue@w2k_L6;}
                break;
              }
              w2k_Z_memory.i32_store8(0, 59136, w2k_l2);
              w2k_Z_memory.i32_store8(0, 60664, (w2k_Z_memory.i32_load8_u(0, 60664) + 1).also {w2k_l1=it});
              if (((w2k_l1 and 255 == w2k_l1).btoInt()).inz()){
                continue@w2k_L2;}
              break;
            }
          } while (false);
          w2k_Z_memory.i32_store8(0, 60666, 0);
          w2k_Z_memory.i32_store8(0, 60664, 0);
          w2k_l2 = 0;
          w2k_B7@ do {
            w2k_L8@ while (true) {
              if ((((w2k_Z_memory.i32_load8_u(((w2k_l2 and 255).also {w2k_l3=it} + 60208).also {w2k_l4=it} + 1)).also {w2k_l1=it} == 255).btoInt()).inz()){
                break@w2k_B7;}
              w2k_Z_memory.i32_store8(0, 60659, (w2k_Z_memory.i32_load8_u(55712 + w2k_l1)).also {w2k_l11=it});
              w2k_B9@ do {
                w2k_B10@ do {
                  w2k_B11@ do {
                    if (((w2k_l11 != (w2k_Z_memory.i32_load8_u(55712 + (w2k_Z_memory.i32_load8_u(w2k_l4)).also {w2k_l4=it})).also {w2k_l5=it}).btoInt()).inz()){
                      break@w2k_B11;}
                    w2k_l11 = 55792 + w2k_l1;
                    break@w2k_B10;
                  } while (false);
                  w2k_B12@ do {
                    if (((java.lang.Integer.compareUnsigned(w2k_l5, w2k_l11)>=0).btoInt()).inz()){
                      break@w2k_B12;}
                    w2k_l11 = 55792 + w2k_l1;
                    w2k_l4 = 55872 + w2k_l1;
                    break@w2k_B9;
                  } while (false);
                  w2k_l11 = 55872 + w2k_l4;
                } while (false);
                w2k_l4 = 55792 + w2k_l4;
              } while (false);
              w2k_Z_memory.i32_store8(0, 59409, w2k_l2);
              w2k_l1 = 168;
              w2k_Z_memory.i32_store8(0, 60665, 168);
              w2k_Z_memory.i32_store8(0, 59408, ((w2k_Z_memory.i32_load8_u(w2k_l11)).also {w2k_l7=it} + (w2k_Z_memory.i32_load8_u(w2k_l4)).also {w2k_l4=it}).also {w2k_l6=it});
              w2k_Z_memory.i32_store8(0, 60666, (w2k_Z_memory.i32_load8_u(60336 + w2k_l3) + w2k_Z_memory.i32_load8_u(0, 60666)).also {w2k_l11=it});
              w2k_Z_memory.i32_store8(0, 59136, (w2k_l6 + (-2)).also {w2k_l3=it});
              w2k_B13@ do {
                if ((((w2k_l3).toByte().toInt() < 0).btoInt()).inz()){
                  break@w2k_B13;}
                w2k_l5 = w2k_l11 - w2k_l4;
                w2k_l7 = w2k_l11 + w2k_l7;
                w2k_L14@ while (true) {
                  w2k_B15@ do {
                    w2k_B16@ do {
                      if ((((w2k_l1 and 255).also {w2k_l1=it} != 168).btoInt()).inz()){
                        break@w2k_B16;}
                      w2k_l4 = (w2k_Z_memory.i32_load8_u((60336 + w2k_Z_memory.i32_load8_u(0, 60664)).also {w2k_l1=it} + 1) ushr 1).also {w2k_l2=it} + (w2k_Z_memory.i32_load8_u(w2k_l1) ushr 1).also {w2k_l1=it};
                      w2k_l1 = (w2k_Z_memory.i32_load8_u(0, 60666)).also {w2k_l11=it} - w2k_l1;
                      w2k_l2 = w2k_Read(168, w2k_l2 + w2k_l11 and 255, );
                      break@w2k_B15;
                    } while (false);
                    w2k_l2 = w2k_Read(w2k_l1, w2k_l7 and 255, );
                    w2k_l1 = w2k_l5;
                    w2k_l4 = w2k_l6;
                  } while (false);
                  w2k_Z_memory.i32_store8(0, 59409, w2k_l1);
                  w2k_Z_memory.i32_store8(0, 59408, w2k_l2);
                  w2k_l1 = w2k_Read(w2k_Z_memory.i32_load8_u(0, 60665), w2k_l1 and 255, );
                  w2k_Z_memory.i32_store8(0, 59136, w2k_l4);
                  w2k_Z_memory.i32_store8(0, 59409, w2k_l5);
                  w2k_Z_memory.i32_store8(0, 60661, (w2k_l2 - w2k_l1).also {w2k_l1=it} and 128);
                  w2k_Z_memory.i32_store8(0, 60660, wasm_rt_impl.I32_DIV_S(((w2k_l1).toByte().toInt()).also {w2k_l2=it}, (w2k_l4 and 255).also {w2k_l3=it}));
                  w2k_Z_memory.i32_store8(0, 60662, wasm_rt_impl.REM_U((w2k_l1 xor (w2k_l2 shr 7).also {w2k_l2=it}) - w2k_l2 and 255, w2k_l3));
                  w2k_Z_memory.i32_store8(0, 60659, 0);
                  w2k_l1 = w2k_l5;
                  w2k_B17@ do {
                    w2k_L18@ while (true) {
                      w2k_i0 = 0;
                      w2k_Z_memory.i32_store8(w2k_i0, 59408, (w2k_Read(w2k_Z_memory.i32_load8_u(0, 60665), w2k_l1 and 255, ) + w2k_Z_memory.i32_load8_u(0, 60660)).also {w2k_l1=it});
                      w2k_Z_memory.i32_store8(0, 59409, (w2k_Z_memory.i32_load8_u(0, 59409) + 1).also {w2k_l11=it});
                      w2k_Z_memory.i32_store8(0, 59136, (w2k_Z_memory.i32_load8_u(0, 59136) + (-1)).also {w2k_l2=it});
                      if (((w2k_l2 and 255).isz()).inz()){
                        break@w2k_B17;}
                      w2k_Z_memory.i32_store8(0, 60659, (w2k_Z_memory.i32_load8_u(0, 60659) + w2k_Z_memory.i32_load8_u(0, 60662)).also {w2k_l2=it});
                      w2k_B19@ do {
                        if (((java.lang.Integer.compareUnsigned(w2k_l2 and 255, w2k_l3)<0).btoInt()).inz()){
                          break@w2k_B19;}
                        w2k_Z_memory.i32_store8(0, 60659, w2k_l2 - w2k_l4);
                        w2k_B20@ do {
                          if (((w2k_Z_memory.i32_load8_s(0, 60661) < 0).btoInt()).inz()){
                            break@w2k_B20;}
                          w2k_l1 = select(w2k_l1 + 1, 0, w2k_l1 and 255);
                          break@w2k_B19;
                        } while (false);
                        w2k_l1 = w2k_l1 + (-1);
                      } while (false);
                      w2k_Write(w2k_Z_memory.i32_load8_u(0, 60665), w2k_l11 and 255, w2k_l1 and 255, );
                      w2k_l1 = w2k_Z_memory.i32_load8_u(0, 59409);
                      continue@w2k_L18;
                      break;
                    }
                  } while (false);
                  w2k_Z_memory.i32_store8(0, 60665, (w2k_Z_memory.i32_load8_u(0, 60665) + 1).also {w2k_l1=it});
                  if (((w2k_l1 and 255 != 175).btoInt()).inz()){
                    continue@w2k_L14;}
                  break;
                }
                w2k_l2 = w2k_Z_memory.i32_load8_u(0, 60664);
              } while (false);
              w2k_Z_memory.i32_store8(0, 60664, (w2k_l2 + 1).also {w2k_l2=it});
              continue@w2k_L8;
              break;
            }
          } while (false);
          w2k_l11 = w2k_Z_memory.i32_load8_u(60336 + w2k_l3);
          w2k_l1 = 0;
          w2k_l3 = w2k_Z_memory.i32_load8_u(0, 60666);
          w2k_B21@ do {
            if ((w2k_Z_memory.i32_load(0, 59412)).inz()){
              break@w2k_B21;}
            w2k_L22@ while (true) {
              if (((w2k_l1 == 256).btoInt()).inz()){
                break@w2k_B21;}
              w2k_Z_memory.i32_store8((60672 + w2k_l1).also {w2k_l2=it}, w2k_Z_memory.i32_load8_u(w2k_l2) - (w2k_Z_memory.i32_load8_u(60928 + w2k_l1) ushr 1));
              w2k_l1 = w2k_l1 + 1;
              continue@w2k_L22;
              break;
            }
          } while (false);
          w2k_l10 = w2k_l11 + w2k_l3;
          w2k_Z_memory.i32_store8(0, 60666, 0);
          w2k_l1 = 255;
          w2k_B23@ do {
            w2k_L24@ while (true) {
              if (((w2k_l1 < 0).btoInt()).inz()){
                break@w2k_B23;}
              w2k_Z_memory.i32_store8((61696 + w2k_l1).also {w2k_l2=it}, w2k_Z_memory.i32_load8_u(55680 + w2k_Z_memory.i32_load8_u(w2k_l2)));
              w2k_Z_memory.i32_store8((61952 + w2k_l1).also {w2k_l2=it}, w2k_Z_memory.i32_load8_u(55680 + w2k_Z_memory.i32_load8_u(w2k_l2)));
              w2k_Z_memory.i32_store8((62208 + w2k_l1).also {w2k_l2=it}, w2k_Z_memory.i32_load8_u(55680 + w2k_Z_memory.i32_load8_u(w2k_l2)));
              w2k_l1 = w2k_l1 + (-1);
              continue@w2k_L24;
              break;
            }
          } while (false);
          w2k_Z_memory.i32_store8(0, 59408, (w2k_Z_memory.i32_load8_u(0, 60672)).also {w2k_l2=it});
          w2k_Z_memory.i32_store8(0, 60664, w2k_l2);
          w2k_Z_memory.i32_store8(0, 59136, w2k_l2);
          w2k_Z_memory.i32_store8(0, 59409, 0);
          w2k_l11 = w2k_l2 ushr 2;
          w2k_l1 = 0;
          w2k_B25@ do {
            if (((w2k_Z_memory.i32_load(0, 58980)).isz()).inz()){
              break@w2k_B25;}
            w2k_PrintOutput(62464, 60928, 61184, 61440, 61696, 61952, 62208, 60672, );
            w2k_l1 = w2k_Z_memory.i32_load8_u(0, 59409);
          } while (false);
          w2k_l12 = w2k_l2 - w2k_l11;
          w2k_l13 = 72;
          w2k_l14 = 0;
          w2k_L26@ while (true) {
            w2k_l15 = 0;
            w2k_l16 = 0;
            w2k_B27@ do {
              w2k_L28@ while (true) {
                w2k_Z_memory.i32_store8(0, 60663, (w2k_Z_memory.i32_load8_u(62464 + (w2k_l1 and 255).also {w2k_l1=it})).also {w2k_l2=it});
                w2k_Z_memory.i32_store8(0, 59408, (w2k_l2 and 248).also {w2k_l2=it});
                w2k_B29@ do {
                  w2k_B30@ do {
                    w2k_B31@ do {
                      if (((w2k_l2).isz()).inz()){
                        break@w2k_B31;}
                      w2k_RenderSample(w2k_l0 + 15, );
                      w2k_Z_memory.i32_store8(0, 59409, w2k_Z_memory.i32_load8_u(0, 59409) + 2);
                      w2k_l10 = w2k_l10 + (-2);
                      break@w2k_B30;
                    } while (false);
                    w2k_l2 = w2k_l14 and 255 shl 8;
                    w2k_l11 = w2k_l15 and 255 shl 8;
                    w2k_l3 = w2k_l16 and 255 shl 8;
                    w2k_l4 = w2k_Z_memory.i32_load8_u(61440 + w2k_l1) shl 6;
                    w2k_l5 = w2k_Z_memory.i32_load8_u(61184 + w2k_l1) shl 6;
                    w2k_l6 = w2k_Z_memory.i32_load8_u(60928 + w2k_l1) shl 6;
                    w2k_l7 = w2k_Z_memory.i32_load8_u(62208 + w2k_l1) and 15;
                    w2k_l8 = w2k_Z_memory.i32_load8_u(61952 + w2k_l1) and 15;
                    w2k_l9 = w2k_Z_memory.i32_load8_u(61696 + w2k_l1) and 15;
                    w2k_l1 = 0;
                    w2k_B32@ do {
                      w2k_L33@ while (true) {
                        if (((w2k_l1 == 5).btoInt()).inz()){
                          break@w2k_B32;}
                        w2k_Z_memory.i32_store8(w2k_l0 + 10 + w2k_l1, wasm_rt_impl.I32_DIV_S(w2k_l8 * w2k_Z_memory.i32_load8_s(56272 + (w2k_l11 ushr 8 and 255)) + w2k_l9 * w2k_Z_memory.i32_load8_s(56272 + (w2k_l3 ushr 8 and 255)) + w2k_l7 * w2k_Z_memory.i32_load8_s(56528 + (w2k_l2 ushr 8 and 255)), 32) xor 128);
                        w2k_l1 = w2k_l1 + 1;
                        w2k_l2 = w2k_l4 + w2k_l2;
                        w2k_l11 = w2k_l5 + w2k_l11;
                        w2k_l3 = w2k_l6 + w2k_l3;
                        continue@w2k_L33;
                        break;
                      }
                    } while (false);
                    w2k_Output8BitAry(0, w2k_l0 + 10, );
                    if (((w2k_l13 + (-1)).also {w2k_l13=it} and 255).inz()){
                      break@w2k_B29;}
                    w2k_Z_memory.i32_store8(0, 59409, w2k_Z_memory.i32_load8_u(0, 59409) + 1);
                    w2k_l10 = w2k_l10 + (-1);
                  } while (false);
                  if (((w2k_l10 and 255).isz()).inz()){
                    break@w2k_B0;}
                  w2k_l13 = w2k_Z_memory.i32_load8_u(0, 58624);
                } while (false);
                w2k_Z_memory.i32_store8(0, 60664, (w2k_Z_memory.i32_load8_u(0, 60664) + (-1)).also {w2k_l1=it});
                if (((w2k_l1 and 255).isz()).inz()){
                  break@w2k_B27;}
                w2k_B34@ do {
                  w2k_B35@ do {
                    if (((w2k_l12 + (-1)).also {w2k_l12=it} and 255).inz()){
                      break@w2k_B35;}
                    if ((w2k_Z_memory.i32_load8_u(0, 60663) and 255).inz()){
                      break@w2k_B34;}
                  } while (false);
                  w2k_l14 = w2k_Z_memory.i32_load8_u(61440 + (w2k_Z_memory.i32_load8_u(0, 59409)).also {w2k_l1=it}) + w2k_l14;
                  w2k_l15 = w2k_Z_memory.i32_load8_u(61184 + w2k_l1) + w2k_l15;
                  w2k_l16 = w2k_Z_memory.i32_load8_u(60928 + w2k_l1) + w2k_l16;
                  continue@w2k_L28;
                } while (false);
                break;
              }
              w2k_RenderSample(w2k_l0 + 15, );
            } while (false);
            w2k_l14 = 0;
            w2k_Z_memory.i32_store8(0, 60664, (w2k_Z_memory.i32_load8_u(60672 + (w2k_Z_memory.i32_load8_u(0, 59409)).also {w2k_l1=it})).also {w2k_l2=it});
            w2k_Z_memory.i32_store8(0, 59408, (w2k_l2 - (w2k_l2 ushr 2)).also {w2k_l12=it});
            continue@w2k_L26;
            break;
          }
        } while (false);
        w2k___stack_pointer = w2k_l0 + 16;
      } while (false);
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_AddInflection(w2k_p0: Int, w2k_p1: Int): Unit{
    var w2k_p0 = w2k_p0;
    var w2k_p1 = w2k_p1;
    var w2k_l2: Int = 0
    var w2k_l3: Int = 0
    var w2k_l4: Int = 0
    var w2k_l5: Int = 0
    try {
      w2k_Bfunc@ do {
        w2k_Z_memory.i32_store8(0, 60666, (w2k_Z_memory.i32_load8_u(0, 59136)).also {w2k_l2=it});
        w2k_l3 = select(0, w2k_l2 + (-30), (java.lang.Integer.compareUnsigned(w2k_l2, 31)<0).btoInt());
        w2k_L0@ while (true) {
          w2k_l3 = (w2k_l3).also {w2k_l4=it} + 1;
          if ((((w2k_Z_memory.i32_load8_u(60672 + (w2k_l4 and 255))).also {w2k_l5=it} == 127).btoInt()).inz()){
            continue@w2k_L0;}
          break;
        }
        w2k_L1@ while (true) {
          w2k_Z_memory.i32_store8(60672 + (w2k_l4 and 255), (w2k_l5 + w2k_p0).also {w2k_l5=it});
          w2k_B2@ do {
            w2k_L3@ while (true) {
              if (((((w2k_l4 + 1).also {w2k_l4=it} and 255).also {w2k_l3=it} == w2k_l2).btoInt()).inz()){
                break@w2k_B2;}
              if (((w2k_Z_memory.i32_load8_u(60672 + w2k_l3) == 255).btoInt()).inz()){
                continue@w2k_L3;}
              break;
            }
            w2k_Z_memory.i32_store8(0, 59136, w2k_l4);
            continue@w2k_L1;
          } while (false);
          break;
        }
        w2k_Z_memory.i32_store8(0, 59136, w2k_l2);
        w2k_Z_memory.i32_store8(0, 59408, w2k_l5);
      } while (false);
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_SetMouthThroat(w2k_p0: Int, w2k_p1: Int): Unit{
    var w2k_p0 = w2k_p0;
    var w2k_p1 = w2k_p1;
    var w2k_l2: Int = 0
    var w2k_l3: Int = 0
    try {
          var w2k_i0: Int = 0
      w2k_Bfunc@ do {
        w2k_l2 = 5;
        w2k_B0@ do {
          w2k_L1@ while (true) {
            if (((w2k_l2 == 30).btoInt()).inz()){
              break@w2k_B0;}
            w2k_i0 = 58640 + w2k_l2;
            w2k_Z_memory.i32_store8(w2k_i0, w2k_trans(w2k_p0, w2k_Z_memory.i32_load8_u(w2k_l2 + 58064), ));
            w2k_i0 = 58720 + w2k_l2;
            w2k_Z_memory.i32_store8(w2k_i0, w2k_trans(w2k_p1, w2k_Z_memory.i32_load8_u(w2k_l2 + 58096), ));
            w2k_l2 = w2k_l2 + 1;
            continue@w2k_L1;
            break;
          }
        } while (false);
        w2k_Z_memory.i32_store8(0, 59409, 0);
        w2k_l2 = 48;
        w2k_l3 = 0;
        w2k_B2@ do {
          w2k_L3@ while (true) {
            if (((w2k_l2 == 54).btoInt()).inz()){
              break@w2k_B2;}
            w2k_i0 = 58640 + w2k_l2;
            w2k_Z_memory.i32_store8(w2k_i0, w2k_trans(w2k_p0, w2k_Z_memory.i32_load8_u((w2k_l3 and 255) + 58126), ));
            w2k_i0 = 58720 + w2k_l2;
            w2k_Z_memory.i32_store8(w2k_i0, w2k_trans(w2k_p1, w2k_Z_memory.i32_load8_u(w2k_Z_memory.i32_load8_u(0, 59409) + 58132), ));
            w2k_Z_memory.i32_store8(0, 59409, (w2k_Z_memory.i32_load8_u(0, 59409) + 1).also {w2k_l3=it});
            w2k_l2 = w2k_l2 + 1;
            continue@w2k_L3;
            break;
          }
        } while (false);
      } while (false);
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_trans(w2k_p0: Int, w2k_p1: Int): Int{
    var w2k_p0 = w2k_p0;
    var w2k_p1 = w2k_p1;
    var w2k_l2: Int = 0
    var w2k_l3: Int = 0
    var w2k_l4: Int = 0
    var w2k_l5: Int = 0
    try {
          var w2k_i0: Int = 0
      w2k_Bfunc@ do {
        w2k_Z_memory.i32_store8(0, 59408, 0);
        w2k_l2 = 8;
        w2k_l3 = 0;
        w2k_L0@ while (true) {
          w2k_B1@ do {
            w2k_B2@ do {
              w2k_B3@ do {
                if ((w2k_p0 and 1).inz()){
                  break@w2k_B3;}
                w2k_l4 = w2k_l3 and 254 ushr 1;
                w2k_l5 = w2k_l3;
                break@w2k_B2;
              } while (false);
              w2k_Z_memory.i32_store8(0, 59408, ((w2k_l3 and 255) + w2k_p1).also {w2k_l5=it});
              w2k_l4 = w2k_l5 and 254 ushr 1;
              w2k_l3 = 128;
              if (((java.lang.Integer.compareUnsigned(w2k_l5, 255)>0).btoInt()).inz()){
                break@w2k_B1;}
            } while (false);
            w2k_l3 = 0;
          } while (false);
          w2k_p0 = w2k_p0 and 254 ushr 1;
          w2k_l3 = w2k_l3 or w2k_l4;
          if (((w2k_l2 + (-1)).also {w2k_l2=it} and 255).inz()){
            continue@w2k_L0;}
          break;
        }
        w2k_Z_memory.i32_store8(0, 59136, 0);
        w2k_i0 = w2k_l5 and 254;
      } while (false);
      return w2k_i0;
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_setupSpeak(w2k_p0: Int, w2k_p1: Int, w2k_p2: Int, w2k_p3: Int): Unit{
    var w2k_p0 = w2k_p0;
    var w2k_p1 = w2k_p1;
    var w2k_p2 = w2k_p2;
    var w2k_p3 = w2k_p3;
    try {
      w2k_Bfunc@ do {
        w2k_SetPitch(select(w2k_p0, 64, w2k_p0), );
        w2k_SetSpeed(select(w2k_p1, 72, w2k_p1), );
        w2k_SetThroat(select(w2k_p2, (-128), w2k_p2) and 255, );
        w2k_SetMouth(select(w2k_p3, (-128), w2k_p3) and 255, );
      } while (false);
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_speakText(w2k_p0: Int): Int{
    var w2k_p0 = w2k_p0;
    var w2k_l1: Int = 0
    var w2k_l2: Int = 0
    var w2k_l3: Int = 0
    var w2k_l4: Int = 0
    try {
          var w2k_i0: Int = 0
      w2k_Bfunc@ do {
        w2k___stack_pointer = (w2k___stack_pointer - 16).also {w2k_l1=it};
        w2k_l2 = 0;
        w2k_B0@ do {
          w2k_L1@ while (true) {
            if ((((w2k_Z_memory.i32_load8_s((w2k_p0 + w2k_l2).also {w2k_l3=it})).also {w2k_l4=it}).isz()).inz()){
              break@w2k_B0;}
            w2k_i0 = w2k_l3;
            w2k_Z_memory.i32_store8(w2k_i0, w2k_toupper(w2k_l4, ));
            w2k_l2 = w2k_l2 + 1;
            continue@w2k_L1;
            break;
          }
        } while (false);
        w2k_i0 = w2k_p0;
        w2k_Z_memory.i32_store16(w2k_i0 + w2k_strlen(w2k_p0, ), 91);
        w2k_TextToPhonemes(w2k_p0, );
        w2k_B2@ do {
          if (((w2k_Z_memory.i32_load(0, 58980)).isz()).inz()){
            break@w2k_B2;}
          w2k_Z_memory.i32_store(w2k_l1, w2k_p0);
          w2k_fiprintf(w2k_Z_memory.i32_load(0, 58140), 54104, w2k_l1, );
        } while (false);
        w2k_SetInput(w2k_p0, );
        w2k_i0 = (w2k_dlmalloc(12, )).also {w2k_l2=it};
        w2k_Z_memory.i32_store(w2k_i0, w2k_SAMMain());
        w2k_i0 = w2k_l2;
        w2k_Z_memory.i32_store(w2k_i0, 8, w2k_GetBuffer());
        w2k_i0 = w2k_l2;
        w2k_Z_memory.i32_store(w2k_i0, 4, wasm_rt_impl.I32_DIV_S(w2k_GetBufferLength(), 50));
        w2k___stack_pointer = w2k_l1 + 16;
        w2k_i0 = w2k_l2;
      } while (false);
      return w2k_i0;
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_PrintPhonemes(w2k_p0: Int, w2k_p1: Int, w2k_p2: Int): Unit{
    var w2k_p0 = w2k_p0;
    var w2k_p1 = w2k_p1;
    var w2k_p2 = w2k_p2;
    var w2k_l3: Int = 0
    var w2k_l4: Int = 0
    var w2k_l5: Int = 0
    var w2k_l6: Int = 0
    var w2k_l7: Int = 0
    var w2k_l8: Int = 0
    try {
      w2k_Bfunc@ do {
        w2k___stack_pointer = (w2k___stack_pointer - 48).also {w2k_l3=it};
        w2k_l4 = 0;
        w2k_fwrite(55046, 44, 1, (w2k_Z_memory.i32_load(0, 58140)).also {w2k_l5=it}, );
        w2k_fwrite(55623, 32, 1, w2k_l5, );
        w2k_fwrite(54046, 32, 1, w2k_l5, );
        w2k_fwrite(55559, 31, 1, w2k_l5, );
        w2k_l6 = w2k_l3 + 16;
        w2k_B0@ do {
          w2k_L1@ while (true) {
            if (((java.lang.Integer.compareUnsigned(w2k_l4, 254)>0).btoInt()).inz()){
              break@w2k_B0;}
            if ((((w2k_Z_memory.i32_load8_u(w2k_p0 + w2k_l4)).also {w2k_l7=it} == 255).btoInt()).inz()){
              break@w2k_B0;}
            w2k_B2@ do {
              w2k_B3@ do {
                if (((java.lang.Integer.compareUnsigned(w2k_l7, 80)>0).btoInt()).inz()){
                  break@w2k_B3;}
                w2k_l8 = w2k_Z_memory.i32_load8_u(w2k_p1 + w2k_l4);
                w2k_Z_memory.i32_store(w2k_l6, w2k_Z_memory.i32_load8_u(w2k_p2 + w2k_l4));
                w2k_Z_memory.i32_store(w2k_l3, 12, w2k_l8);
                w2k_Z_memory.i32_store(w2k_l3, w2k_l7);
                w2k_Z_memory.i32_store(w2k_l3, 4, w2k_Z_memory.i32_load8_u(53456 + w2k_l7));
                w2k_Z_memory.i32_store(w2k_l3, 8, w2k_Z_memory.i32_load8_u(53552 + w2k_l7));
                w2k_fiprintf(w2k_l5, 54230, w2k_l3, );
                break@w2k_B2;
              } while (false);
              w2k_l8 = w2k_Z_memory.i32_load8_u(w2k_p1 + w2k_l4);
              w2k_Z_memory.i32_store(w2k_l3, 40, w2k_Z_memory.i32_load8_u(w2k_p2 + w2k_l4));
              w2k_Z_memory.i32_store(w2k_l3, 36, w2k_l8);
              w2k_Z_memory.i32_store(w2k_l3, 32, w2k_l7);
              w2k_fiprintf(w2k_l5, 54264, w2k_l3 + 32, );
            } while (false);
            w2k_l4 = w2k_l4 + 1;
            continue@w2k_L1;
            break;
          }
        } while (false);
        w2k_fwrite(55046, 44, 1, w2k_l5, );
        w2k_fputc(10, w2k_l5, );
        w2k___stack_pointer = w2k_l3 + 48;
      } while (false);
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_PrintOutput(w2k_p0: Int, w2k_p1: Int, w2k_p2: Int, w2k_p3: Int, w2k_p4: Int, w2k_p5: Int, w2k_p6: Int, w2k_p7: Int): Unit{
    var w2k_p0 = w2k_p0;
    var w2k_p1 = w2k_p1;
    var w2k_p2 = w2k_p2;
    var w2k_p3 = w2k_p3;
    var w2k_p4 = w2k_p4;
    var w2k_p5 = w2k_p5;
    var w2k_p6 = w2k_p6;
    var w2k_p7 = w2k_p7;
    var w2k_l8: Int = 0
    var w2k_l9: Int = 0
    var w2k_l10: Int = 0
    var w2k_l11: Int = 0
    var w2k_l12: Int = 0
    var w2k_l13: Int = 0
    var w2k_l14: Int = 0
    var w2k_l15: Int = 0
    var w2k_l16: Int = 0
    var w2k_l17: Int = 0
    var w2k_l18: Int = 0
    var w2k_l19: Int = 0
    var w2k_l20: Int = 0
    var w2k_l21: Int = 0
    try {
      w2k_Bfunc@ do {
        w2k___stack_pointer = (w2k___stack_pointer - 32).also {w2k_l8=it};
        w2k_l9 = 0;
        w2k_fwrite(55046, 44, 1, (w2k_Z_memory.i32_load(0, 58140)).also {w2k_l10=it}, );
        w2k_fwrite(55591, 31, 1, w2k_l10, );
        w2k_fwrite(54356, 49, 1, w2k_l10, );
        w2k_fwrite(55541, 49, 1, w2k_l10, );
        w2k_l11 = w2k_l8 + 28;
        w2k_l12 = w2k_l8 + 24;
        w2k_l13 = w2k_l8 + 20;
        w2k_l14 = w2k_l8 + 16;
        w2k_B0@ do {
          w2k_L1@ while (true) {
            if (((w2k_l9 == 255).btoInt()).inz()){
              break@w2k_B0;}
            w2k_l15 = w2k_Z_memory.i32_load8_u(w2k_p0 + w2k_l9);
            w2k_l16 = w2k_Z_memory.i32_load8_u(w2k_p4 + w2k_l9);
            w2k_l17 = w2k_Z_memory.i32_load8_u(w2k_p1 + w2k_l9);
            w2k_l18 = w2k_Z_memory.i32_load8_u(w2k_p5 + w2k_l9);
            w2k_l19 = w2k_Z_memory.i32_load8_u(w2k_p2 + w2k_l9);
            w2k_l20 = w2k_Z_memory.i32_load8_u(w2k_p6 + w2k_l9);
            w2k_l21 = w2k_Z_memory.i32_load8_u(w2k_p3 + w2k_l9);
            w2k_Z_memory.i32_store(w2k_l11, w2k_Z_memory.i32_load8_u(w2k_p7 + w2k_l9));
            w2k_Z_memory.i32_store(w2k_l12, w2k_l21);
            w2k_Z_memory.i32_store(w2k_l13, w2k_l20);
            w2k_Z_memory.i32_store(w2k_l14, w2k_l19);
            w2k_Z_memory.i32_store(w2k_l8, 12, w2k_l18);
            w2k_Z_memory.i32_store(w2k_l8, 8, w2k_l17);
            w2k_Z_memory.i32_store(w2k_l8, 4, w2k_l16);
            w2k_Z_memory.i32_store(w2k_l8, w2k_l15);
            w2k_fiprintf(w2k_l10, 54197, w2k_l8, );
            w2k_l9 = w2k_l9 + 1;
            continue@w2k_L1;
            break;
          }
        } while (false);
        w2k_fwrite(55046, 44, 1, w2k_l10, );
        w2k___stack_pointer = w2k_l8 + 32;
      } while (false);
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_PrintRule(w2k_p0: Int): Unit{
    var w2k_p0 = w2k_p0;
    var w2k_l1: Int = 0
    var w2k_l2: Int = 0
    var w2k_l3: Int = 0
    var w2k_l4: Int = 0
    try {
      w2k_Bfunc@ do {
        w2k_fwrite(54030, 15, 1, (w2k_Z_memory.i32_load(0, 58140)).also {w2k_l1=it}, );
        w2k_l2 = w2k_p0 and 65535;
        w2k_p0 = 1;
        w2k_L0@ while (true) {
          w2k_l4 = ((w2k_GetRuleByte(w2k_l2, w2k_p0 and 255, )).also {w2k_l3=it}).toByte().toInt();
          w2k_B1@ do {
            w2k_B2@ do {
              if ((((w2k_l3 and 127).also {w2k_l3=it} != 61).btoInt()).inz()){
                break@w2k_B2;}
              w2k_fwrite(54025, 4, 1, w2k_l1, );
              break@w2k_B1;
            } while (false);
            w2k_fputc(w2k_l3, w2k_l1, );
          } while (false);
          w2k_p0 = w2k_p0 + 1;
          if (((w2k_l4 > (-1)).btoInt()).inz()){
            continue@w2k_L0;}
          break;
        }
        w2k_fputc(10, w2k_l1, );
      } while (false);
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k__initialize(): Unit{
    try {
      w2k_Bfunc@ do {
        w2k_B0@ do {
          if (((1).isz()).inz()){
            break@w2k_B0;}
          w2k___wasm_call_ctors();
        } while (false);
      } while (false);
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_fiprintf(w2k_p0: Int, w2k_p1: Int, w2k_p2: Int): Int{
    var w2k_p0 = w2k_p0;
    var w2k_p1 = w2k_p1;
    var w2k_p2 = w2k_p2;
    var w2k_l3: Int = 0
    try {
          var w2k_i0: Int = 0
      w2k_Bfunc@ do {
        w2k___stack_pointer = (w2k___stack_pointer - 16).also {w2k_l3=it};
        w2k_Z_memory.i32_store(w2k_l3, 12, w2k_p2);
        w2k_p2 = w2k_vfiprintf(w2k_p0, w2k_p1, w2k_p2, );
        w2k___stack_pointer = w2k_l3 + 16;
        w2k_i0 = w2k_p2;
      } while (false);
      return w2k_i0;
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k___lockfile(w2k_p0: Int): Int{
    var w2k_p0 = w2k_p0;
    try {
          var w2k_i0: Int = 0
      w2k_Bfunc@ do {
        w2k_i0 = 1;
      } while (false);
      return w2k_i0;
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k___unlockfile(w2k_p0: Int): Unit{
    var w2k_p0 = w2k_p0;
    try {
      w2k_Bfunc@ do {
      } while (false);
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k___towrite(w2k_p0: Int): Int{
    var w2k_p0 = w2k_p0;
    var w2k_l1: Int = 0
    try {
          var w2k_i0: Int = 0
      w2k_Bfunc@ do {
        w2k_Z_memory.i32_store(w2k_p0, 72, (w2k_Z_memory.i32_load(w2k_p0, 72)).also {w2k_l1=it} + (-1) or w2k_l1);
        w2k_B0@ do {
          if ((((w2k_Z_memory.i32_load(w2k_p0)).also {w2k_l1=it} and 8).isz()).inz()){
            break@w2k_B0;}
          w2k_Z_memory.i32_store(w2k_p0, w2k_l1 or 32);
          w2k_i0 = (-1); break@w2k_Bfunc;
        } while (false);
        w2k_Z_memory.i64_store(w2k_p0, 4, 0L);
        w2k_Z_memory.i32_store(w2k_p0, 28, (w2k_Z_memory.i32_load(w2k_p0, 44)).also {w2k_l1=it});
        w2k_Z_memory.i32_store(w2k_p0, 20, w2k_l1);
        w2k_Z_memory.i32_store(w2k_p0, 16, w2k_l1 + w2k_Z_memory.i32_load(w2k_p0, 48));
        w2k_i0 = 0;
      } while (false);
      return w2k_i0;
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k___overflow(w2k_p0: Int, w2k_p1: Int): Int{
    var w2k_p0 = w2k_p0;
    var w2k_p1 = w2k_p1;
    var w2k_l2: Int = 0
    var w2k_l3: Int = 0
    var w2k_l4: Int = 0
    try {
          var w2k_i0: Int = 0
      w2k_Bfunc@ do {
        w2k___stack_pointer = (w2k___stack_pointer - 16).also {w2k_l2=it};
        w2k_Z_memory.i32_store8(w2k_l2, 15, w2k_p1);
        w2k_B0@ do {
          w2k_B1@ do {
            if (((w2k_Z_memory.i32_load(w2k_p0, 16)).also {w2k_l3=it}).inz()){
              break@w2k_B1;}
            w2k_l3 = (-1);
            if ((w2k___towrite(w2k_p0, )).inz()){
              break@w2k_B0;}
            w2k_l3 = w2k_Z_memory.i32_load(w2k_p0, 16);
          } while (false);
          w2k_B2@ do {
            if ((((w2k_Z_memory.i32_load(w2k_p0, 20)).also {w2k_l4=it} == w2k_l3).btoInt()).inz()){
              break@w2k_B2;}
            if (((w2k_Z_memory.i32_load(w2k_p0, 80) == (w2k_p1 and 255).also {w2k_l3=it}).btoInt()).inz()){
              break@w2k_B2;}
            w2k_Z_memory.i32_store(w2k_p0, 20, w2k_l4 + 1);
            w2k_Z_memory.i32_store8(w2k_l4, w2k_p1);
            break@w2k_B0;
          } while (false);
          w2k_l3 = (-1);
          if (((CALL_INDIRECT_0(w2k___indirect_function_table, w2k_p0, w2k_l2 + 15, 1, w2k_Z_memory.i32_load(w2k_p0, 36)) != 1).btoInt()).inz()){
            break@w2k_B0;}
          w2k_l3 = w2k_Z_memory.i32_load8_u(w2k_l2, 15);
        } while (false);
        w2k___stack_pointer = w2k_l2 + 16;
        w2k_i0 = w2k_l3;
      } while (false);
      return w2k_i0;
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_fputc(w2k_p0: Int, w2k_p1: Int): Int{
    var w2k_p0 = w2k_p0;
    var w2k_p1 = w2k_p1;
    try {
          var w2k_i0: Int = 0
      w2k_Bfunc@ do {
        w2k_i0 = w2k_do_putc(w2k_p0, w2k_p1, );
      } while (false);
      return w2k_i0;
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_do_putc(w2k_p0: Int, w2k_p1: Int): Int{
    var w2k_p0 = w2k_p0;
    var w2k_p1 = w2k_p1;
    var w2k_l2: Int = 0
    var w2k_l3: Int = 0
    try {
          var w2k_i0: Int = 0
      w2k_Bfunc@ do {
        w2k_B0@ do {
          w2k_B1@ do {
            if ((((w2k_Z_memory.i32_load(w2k_p1, 76)).also {w2k_l2=it} < 0).btoInt()).inz()){
              break@w2k_B1;}
            if (((w2k_l2).isz()).inz()){
              break@w2k_B0;}
            w2k_i0 = w2k_l2 and (-1073741825);
            if (((w2k_i0 != w2k_Z_memory.i32_load(w2k___get_tp(), 24)).btoInt()).inz()){
              break@w2k_B0;}
          } while (false);
          w2k_B2@ do {
            if ((((w2k_p0 and 255).also {w2k_l2=it} == w2k_Z_memory.i32_load(w2k_p1, 80)).btoInt()).inz()){
              break@w2k_B2;}
            if ((((w2k_Z_memory.i32_load(w2k_p1, 20)).also {w2k_l3=it} == w2k_Z_memory.i32_load(w2k_p1, 16)).btoInt()).inz()){
              break@w2k_B2;}
            w2k_Z_memory.i32_store(w2k_p1, 20, w2k_l3 + 1);
            w2k_Z_memory.i32_store8(w2k_l3, w2k_p0);
            w2k_i0 = w2k_l2; break@w2k_Bfunc;
          } while (false);
          w2k_i0 = w2k___overflow(w2k_p1, w2k_l2, ); break@w2k_Bfunc;
          w2k___overflow(w2k_p1, w2k_l2, );
        } while (false);
        w2k_i0 = w2k_locking_putc(w2k_p0, w2k_p1, );
      } while (false);
      return w2k_i0;
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_locking_putc(w2k_p0: Int, w2k_p1: Int): Int{
    var w2k_p0 = w2k_p0;
    var w2k_p1 = w2k_p1;
    var w2k_l2: Int = 0
    var w2k_l3: Int = 0
    var w2k_l4: Int = 0
    try {
          var w2k_i0: Int = 0
      w2k_Bfunc@ do {
        w2k_B0@ do {
          if (((w2k_a_cas((w2k_p1 + 76).also {w2k_l2=it}, )).isz()).inz()){
            break@w2k_B0;}
          w2k___lockfile(w2k_p1, );
        } while (false);
        w2k_B1@ do {
          w2k_B2@ do {
            if ((((w2k_p0 and 255).also {w2k_l3=it} == w2k_Z_memory.i32_load(w2k_p1, 80)).btoInt()).inz()){
              break@w2k_B2;}
            if ((((w2k_Z_memory.i32_load(w2k_p1, 20)).also {w2k_l4=it} == w2k_Z_memory.i32_load(w2k_p1, 16)).btoInt()).inz()){
              break@w2k_B2;}
            w2k_Z_memory.i32_store(w2k_p1, 20, w2k_l4 + 1);
            w2k_Z_memory.i32_store8(w2k_l4, w2k_p0);
            break@w2k_B1;
          } while (false);
          w2k_l3 = w2k___overflow(w2k_p1, w2k_l3, );
        } while (false);
        w2k_B3@ do {
          if (((w2k_a_swap(w2k_l2, ) and 1073741824).isz()).inz()){
            break@w2k_B3;}
          w2k___wake(w2k_l2, );
        } while (false);
        w2k_i0 = w2k_l3;
      } while (false);
      return w2k_i0;
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_a_cas(w2k_p0: Int): Int{
    var w2k_p0 = w2k_p0;
    var w2k_l1: Int = 0
    try {
          var w2k_i0: Int = 0
      w2k_Bfunc@ do {
        w2k_Z_memory.i32_store(w2k_p0, select((w2k_Z_memory.i32_load(w2k_p0)).also {w2k_l1=it}, 1073741823, w2k_l1));
        w2k_i0 = w2k_l1;
      } while (false);
      return w2k_i0;
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_a_swap(w2k_p0: Int): Int{
    var w2k_p0 = w2k_p0;
    var w2k_l1: Int = 0
    try {
          var w2k_i0: Int = 0
      w2k_Bfunc@ do {
        w2k_l1 = w2k_Z_memory.i32_load(w2k_p0);
        w2k_Z_memory.i32_store(w2k_p0, 0);
        w2k_i0 = w2k_l1;
      } while (false);
      return w2k_i0;
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k___wake(w2k_p0: Int): Unit{
    var w2k_p0 = w2k_p0;
    try {
      w2k_Bfunc@ do {
        w2k_emscripten_futex_wake(w2k_p0, 1, );
      } while (false);
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k___memcpy(w2k_p0: Int, w2k_p1: Int, w2k_p2: Int): Int{
    var w2k_p0 = w2k_p0;
    var w2k_p1 = w2k_p1;
    var w2k_p2 = w2k_p2;
    var w2k_l3: Int = 0
    var w2k_l4: Int = 0
    var w2k_l5: Int = 0
    try {
          var w2k_i0: Int = 0
      w2k_Bfunc@ do {
        w2k_l3 = w2k_p0 + w2k_p2;
        w2k_B0@ do {
          w2k_B1@ do {
            w2k_B2@ do {
              w2k_B3@ do {
                if ((w2k_p1 xor w2k_p0 and 3).inz()){
                  break@w2k_B3;}
                if (((w2k_p0 and 3).isz()).inz()){
                  break@w2k_B2;}
                if (((w2k_p2 < 1).btoInt()).inz()){
                  break@w2k_B2;}
                w2k_p2 = w2k_p0;
                w2k_L4@ while (true) {
                  w2k_Z_memory.i32_store8(w2k_p2, w2k_Z_memory.i32_load8_u(w2k_p1));
                  w2k_p1 = w2k_p1 + 1;
                  if ((((w2k_p2 + 1).also {w2k_p2=it} and 3).isz()).inz()){
                    break@w2k_B1;}
                  if (((java.lang.Integer.compareUnsigned(w2k_p2, w2k_l3)<0).btoInt()).inz()){
                    continue@w2k_L4;}
                  break@w2k_B1;
                  break;
                }
              } while (false);
              w2k_B5@ do {
                if (((java.lang.Integer.compareUnsigned(w2k_l3, 4)<0).btoInt()).inz()){
                  break@w2k_B5;}
                if (((java.lang.Integer.compareUnsigned((w2k_l3 + (-4)).also {w2k_l4=it}, w2k_p0)<0).btoInt()).inz()){
                  break@w2k_B5;}
                w2k_p2 = w2k_p0;
                w2k_L6@ while (true) {
                  w2k_Z_memory.i32_store8(w2k_p2, w2k_Z_memory.i32_load8_u(w2k_p1));
                  w2k_Z_memory.i32_store8(w2k_p2, 1, w2k_Z_memory.i32_load8_u(w2k_p1, 1));
                  w2k_Z_memory.i32_store8(w2k_p2, 2, w2k_Z_memory.i32_load8_u(w2k_p1, 2));
                  w2k_Z_memory.i32_store8(w2k_p2, 3, w2k_Z_memory.i32_load8_u(w2k_p1, 3));
                  w2k_p1 = w2k_p1 + 4;
                  if (((java.lang.Integer.compareUnsigned((w2k_p2 + 4).also {w2k_p2=it}, w2k_l4)<=0).btoInt()).inz()){
                    continue@w2k_L6;}
                  break@w2k_B0;
                  break;
                }
              } while (false);
              w2k_p2 = w2k_p0;
              break@w2k_B0;
            } while (false);
            w2k_p2 = w2k_p0;
          } while (false);
          w2k_B7@ do {
            if (((java.lang.Integer.compareUnsigned((w2k_l3 and (-4)).also {w2k_l4=it}, 64)<0).btoInt()).inz()){
              break@w2k_B7;}
            if (((java.lang.Integer.compareUnsigned(w2k_p2, (w2k_l4 + (-64)).also {w2k_l5=it})>0).btoInt()).inz()){
              break@w2k_B7;}
            w2k_L8@ while (true) {
              w2k_Z_memory.i32_store(w2k_p2, w2k_Z_memory.i32_load(w2k_p1));
              w2k_Z_memory.i32_store(w2k_p2, 4, w2k_Z_memory.i32_load(w2k_p1, 4));
              w2k_Z_memory.i32_store(w2k_p2, 8, w2k_Z_memory.i32_load(w2k_p1, 8));
              w2k_Z_memory.i32_store(w2k_p2, 12, w2k_Z_memory.i32_load(w2k_p1, 12));
              w2k_Z_memory.i32_store(w2k_p2, 16, w2k_Z_memory.i32_load(w2k_p1, 16));
              w2k_Z_memory.i32_store(w2k_p2, 20, w2k_Z_memory.i32_load(w2k_p1, 20));
              w2k_Z_memory.i32_store(w2k_p2, 24, w2k_Z_memory.i32_load(w2k_p1, 24));
              w2k_Z_memory.i32_store(w2k_p2, 28, w2k_Z_memory.i32_load(w2k_p1, 28));
              w2k_Z_memory.i32_store(w2k_p2, 32, w2k_Z_memory.i32_load(w2k_p1, 32));
              w2k_Z_memory.i32_store(w2k_p2, 36, w2k_Z_memory.i32_load(w2k_p1, 36));
              w2k_Z_memory.i32_store(w2k_p2, 40, w2k_Z_memory.i32_load(w2k_p1, 40));
              w2k_Z_memory.i32_store(w2k_p2, 44, w2k_Z_memory.i32_load(w2k_p1, 44));
              w2k_Z_memory.i32_store(w2k_p2, 48, w2k_Z_memory.i32_load(w2k_p1, 48));
              w2k_Z_memory.i32_store(w2k_p2, 52, w2k_Z_memory.i32_load(w2k_p1, 52));
              w2k_Z_memory.i32_store(w2k_p2, 56, w2k_Z_memory.i32_load(w2k_p1, 56));
              w2k_Z_memory.i32_store(w2k_p2, 60, w2k_Z_memory.i32_load(w2k_p1, 60));
              w2k_p1 = w2k_p1 + 64;
              if (((java.lang.Integer.compareUnsigned((w2k_p2 + 64).also {w2k_p2=it}, w2k_l5)<=0).btoInt()).inz()){
                continue@w2k_L8;}
              break;
            }
          } while (false);
          if (((java.lang.Integer.compareUnsigned(w2k_p2, w2k_l4)>=0).btoInt()).inz()){
            break@w2k_B0;}
          w2k_L9@ while (true) {
            w2k_Z_memory.i32_store(w2k_p2, w2k_Z_memory.i32_load(w2k_p1));
            w2k_p1 = w2k_p1 + 4;
            if (((java.lang.Integer.compareUnsigned((w2k_p2 + 4).also {w2k_p2=it}, w2k_l4)<0).btoInt()).inz()){
              continue@w2k_L9;}
            break;
          }
        } while (false);
        w2k_B10@ do {
          if (((java.lang.Integer.compareUnsigned(w2k_p2, w2k_l3)>=0).btoInt()).inz()){
            break@w2k_B10;}
          w2k_L11@ while (true) {
            w2k_Z_memory.i32_store8(w2k_p2, w2k_Z_memory.i32_load8_u(w2k_p1));
            w2k_p1 = w2k_p1 + 1;
            if ((((w2k_p2 + 1).also {w2k_p2=it} != w2k_l3).btoInt()).inz()){
              continue@w2k_L11;}
            break;
          }
        } while (false);
        w2k_i0 = w2k_p0;
      } while (false);
      return w2k_i0;
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k___fwritex(w2k_p0: Int, w2k_p1: Int, w2k_p2: Int): Int{
    var w2k_p0 = w2k_p0;
    var w2k_p1 = w2k_p1;
    var w2k_p2 = w2k_p2;
    var w2k_l3: Int = 0
    var w2k_l4: Int = 0
    var w2k_l5: Int = 0
    try {
          var w2k_i0: Int = 0
      w2k_Bfunc@ do {
        w2k_B0@ do {
          w2k_B1@ do {
            if (((w2k_Z_memory.i32_load(w2k_p2, 16)).also {w2k_l3=it}).inz()){
              break@w2k_B1;}
            w2k_l4 = 0;
            if ((w2k___towrite(w2k_p2, )).inz()){
              break@w2k_B0;}
            w2k_l3 = w2k_Z_memory.i32_load(w2k_p2, 16);
          } while (false);
          w2k_B2@ do {
            if (((java.lang.Integer.compareUnsigned(w2k_l3 - (w2k_Z_memory.i32_load(w2k_p2, 20)).also {w2k_l5=it}, w2k_p1)>=0).btoInt()).inz()){
              break@w2k_B2;}
            w2k_i0 = CALL_INDIRECT_0(w2k___indirect_function_table, w2k_p2, w2k_p0, w2k_p1, w2k_Z_memory.i32_load(w2k_p2, 36)); break@w2k_Bfunc;
            CALL_INDIRECT_0(w2k___indirect_function_table, w2k_p2, w2k_p0, w2k_p1, w2k_Z_memory.i32_load(w2k_p2, 36));
          } while (false);
          w2k_B3@ do {
            w2k_B4@ do {
              if (((w2k_Z_memory.i32_load(w2k_p2, 80) >= 0).btoInt()).inz()){
                break@w2k_B4;}
              w2k_l3 = 0;
              break@w2k_B3;
            } while (false);
            w2k_l4 = w2k_p1;
            w2k_L5@ while (true) {
              w2k_B6@ do {
                if (((w2k_l4).also {w2k_l3=it}).inz()){
                  break@w2k_B6;}
                w2k_l3 = 0;
                break@w2k_B3;
              } while (false);
              if (((w2k_Z_memory.i32_load8_u(w2k_p0 + (w2k_l3 + (-1)).also {w2k_l4=it}) != 10).btoInt()).inz()){
                continue@w2k_L5;}
              break;
            }
            if (((java.lang.Integer.compareUnsigned((CALL_INDIRECT_0(w2k___indirect_function_table, w2k_p2, w2k_p0, w2k_l3, w2k_Z_memory.i32_load(w2k_p2, 36))).also {w2k_l4=it}, w2k_l3)<0).btoInt()).inz()){
              break@w2k_B0;}
            w2k_p0 = w2k_p0 + w2k_l3;
            w2k_p1 = w2k_p1 - w2k_l3;
            w2k_l5 = w2k_Z_memory.i32_load(w2k_p2, 20);
          } while (false);
          w2k___memcpy(w2k_l5, w2k_p0, w2k_p1, );
          w2k_Z_memory.i32_store(w2k_p2, 20, w2k_Z_memory.i32_load(w2k_p2, 20) + w2k_p1);
          w2k_l4 = w2k_l3 + w2k_p1;
        } while (false);
        w2k_i0 = w2k_l4;
      } while (false);
      return w2k_i0;
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_fwrite(w2k_p0: Int, w2k_p1: Int, w2k_p2: Int, w2k_p3: Int): Int{
    var w2k_p0 = w2k_p0;
    var w2k_p1 = w2k_p1;
    var w2k_p2 = w2k_p2;
    var w2k_p3 = w2k_p3;
    var w2k_l4: Int = 0
    var w2k_l5: Int = 0
    try {
          var w2k_i0: Int = 0
      w2k_Bfunc@ do {
        w2k_l4 = w2k_p2 * w2k_p1;
        w2k_B0@ do {
          w2k_B1@ do {
            if (((w2k_Z_memory.i32_load(w2k_p3, 76) > (-1)).btoInt()).inz()){
              break@w2k_B1;}
            w2k_p0 = w2k___fwritex(w2k_p0, w2k_l4, w2k_p3, );
            break@w2k_B0;
          } while (false);
          w2k_l5 = w2k___lockfile(w2k_p3, );
          w2k_p0 = w2k___fwritex(w2k_p0, w2k_l4, w2k_p3, );
          if (((w2k_l5).isz()).inz()){
            break@w2k_B0;}
          w2k___unlockfile(w2k_p3, );
        } while (false);
        w2k_B2@ do {
          if (((w2k_p0 != w2k_l4).btoInt()).inz()){
            break@w2k_B2;}
          w2k_i0 = select(w2k_p2, 0, w2k_p1); break@w2k_Bfunc;
        } while (false);
        w2k_i0 = wasm_rt_impl.DIV_U(w2k_p0, w2k_p1);
      } while (false);
      return w2k_i0;
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k___errno_location(): Int{
    try {
          var w2k_i0: Int = 0
      w2k_Bfunc@ do {
        w2k_i0 = 62720;
      } while (false);
      return w2k_i0;
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_emscripten_get_heap_size(): Int{
    try {
          var w2k_i0: Int = 0
      w2k_Bfunc@ do {
        w2k_i0 = w2k_Z_memory.pages shl 16;
      } while (false);
      return w2k_i0;
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_emscripten_resize_heap(w2k_p0: Int): Int{
    var w2k_p0 = w2k_p0;
    try {
          var w2k_i0: Int = 0
      w2k_Bfunc@ do {
        w2k_B0@ do {
          if (((w2k_Z_memory.resize(w2k_p0 - (w2k_Z_memory.pages shl 16) + 65535 ushr 16) != (-1)).btoInt()).inz()){
            break@w2k_B0;}
          w2k_i0 = 0; break@w2k_Bfunc;
        } while (false);
        w2k_Z_emscripten_notify_memory_growth(0, );
        w2k_i0 = 1;
      } while (false);
      return w2k_i0;
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_emscripten_futex_wake(w2k_p0: Int, w2k_p1: Int): Int{
    var w2k_p0 = w2k_p0;
    var w2k_p1 = w2k_p1;
    try {
          var w2k_i0: Int = 0
      w2k_Bfunc@ do {
        w2k_i0 = 0;
      } while (false);
      return w2k_i0;
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k___memset(w2k_p0: Int, w2k_p1: Int, w2k_p2: Int): Int{
    var w2k_p0 = w2k_p0;
    var w2k_p1 = w2k_p1;
    var w2k_p2 = w2k_p2;
    var w2k_l3: Int = 0
    var w2k_l4: Int = 0
    var w2k_l5: Int = 0
    var w2k_l6: Long = 0
    try {
          var w2k_i0: Int = 0
      w2k_Bfunc@ do {
        w2k_B0@ do {
          if (((w2k_p2).isz()).inz()){
            break@w2k_B0;}
          w2k_Z_memory.i32_store8(w2k_p0, w2k_p1);
          w2k_Z_memory.i32_store8((w2k_p2 + w2k_p0).also {w2k_l3=it} + (-1), w2k_p1);
          if (((java.lang.Integer.compareUnsigned(w2k_p2, 3)<0).btoInt()).inz()){
            break@w2k_B0;}
          w2k_Z_memory.i32_store8(w2k_p0, 2, w2k_p1);
          w2k_Z_memory.i32_store8(w2k_p0, 1, w2k_p1);
          w2k_Z_memory.i32_store8(w2k_l3 + (-3), w2k_p1);
          w2k_Z_memory.i32_store8(w2k_l3 + (-2), w2k_p1);
          if (((java.lang.Integer.compareUnsigned(w2k_p2, 7)<0).btoInt()).inz()){
            break@w2k_B0;}
          w2k_Z_memory.i32_store8(w2k_p0, 3, w2k_p1);
          w2k_Z_memory.i32_store8(w2k_l3 + (-4), w2k_p1);
          if (((java.lang.Integer.compareUnsigned(w2k_p2, 9)<0).btoInt()).inz()){
            break@w2k_B0;}
          w2k_Z_memory.i32_store((w2k_p0 + (0 - w2k_p0 and 3).also {w2k_l4=it}).also {w2k_l3=it}, ((w2k_p1 and 255) * 16843009).also {w2k_p1=it});
          w2k_Z_memory.i32_store((w2k_l3 + (w2k_p2 - w2k_l4 and (-4)).also {w2k_l4=it}).also {w2k_p2=it} + (-4), w2k_p1);
          if (((java.lang.Integer.compareUnsigned(w2k_l4, 9)<0).btoInt()).inz()){
            break@w2k_B0;}
          w2k_Z_memory.i32_store(w2k_l3, 8, w2k_p1);
          w2k_Z_memory.i32_store(w2k_l3, 4, w2k_p1);
          w2k_Z_memory.i32_store(w2k_p2 + (-8), w2k_p1);
          w2k_Z_memory.i32_store(w2k_p2 + (-12), w2k_p1);
          if (((java.lang.Integer.compareUnsigned(w2k_l4, 25)<0).btoInt()).inz()){
            break@w2k_B0;}
          w2k_Z_memory.i32_store(w2k_l3, 24, w2k_p1);
          w2k_Z_memory.i32_store(w2k_l3, 20, w2k_p1);
          w2k_Z_memory.i32_store(w2k_l3, 16, w2k_p1);
          w2k_Z_memory.i32_store(w2k_l3, 12, w2k_p1);
          w2k_Z_memory.i32_store(w2k_p2 + (-16), w2k_p1);
          w2k_Z_memory.i32_store(w2k_p2 + (-20), w2k_p1);
          w2k_Z_memory.i32_store(w2k_p2 + (-24), w2k_p1);
          w2k_Z_memory.i32_store(w2k_p2 + (-28), w2k_p1);
          if (((java.lang.Integer.compareUnsigned((w2k_l4 - (w2k_l3 and 4 or 24).also {w2k_l5=it}).also {w2k_p2=it}, 32)<0).btoInt()).inz()){
            break@w2k_B0;}
          w2k_l6 = (w2k_p1).toLong().and(0xFFFFFFFFL) * 4294967297L;
          w2k_p1 = w2k_l3 + w2k_l5;
          w2k_L1@ while (true) {
            w2k_Z_memory.i64_store(w2k_p1, 24, w2k_l6);
            w2k_Z_memory.i64_store(w2k_p1, 16, w2k_l6);
            w2k_Z_memory.i64_store(w2k_p1, 8, w2k_l6);
            w2k_Z_memory.i64_store(w2k_p1, w2k_l6);
            w2k_p1 = w2k_p1 + 32;
            if (((java.lang.Integer.compareUnsigned((w2k_p2 + (-32)).also {w2k_p2=it}, 31)>0).btoInt()).inz()){
              continue@w2k_L1;}
            break;
          }
        } while (false);
        w2k_i0 = w2k_p0;
      } while (false);
      return w2k_i0;
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k___syscall_getpid(): Int{
    try {
          var w2k_i0: Int = 0
      w2k_Bfunc@ do {
        w2k_i0 = 42;
      } while (false);
      return w2k_i0;
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_getpid(): Int{
    try {
          var w2k_i0: Int = 0
      w2k_Bfunc@ do {
        w2k_i0 = w2k___syscall_getpid();
      } while (false);
      return w2k_i0;
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k___get_tp(): Int{
    try {
          var w2k_i0: Int = 0
      w2k_Bfunc@ do {
        w2k_i0 = 62780;
      } while (false);
      return w2k_i0;
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_init_pthread_self(): Unit{
    try {
          var w2k_i0: Int = 0
      w2k_Bfunc@ do {
        w2k_Z_memory.i32_store(0, 62876, 62756);
        w2k_i0 = 0;
        w2k_Z_memory.i32_store(w2k_i0, 62804, w2k_getpid());
      } while (false);
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_dummy(w2k_p0: Int): Int{
    var w2k_p0 = w2k_p0;
    try {
          var w2k_i0: Int = 0
      w2k_Bfunc@ do {
        w2k_i0 = w2k_p0;
      } while (false);
      return w2k_i0;
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k___stdio_close(w2k_p0: Int): Int{
    var w2k_p0 = w2k_p0;
    try {
          var w2k_i0: Int = 0
      w2k_Bfunc@ do {
        w2k_i0 = w2k_Z_fd_close(w2k_dummy(w2k_Z_memory.i32_load(w2k_p0, 60), ), );
      } while (false);
      return w2k_i0;
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k___stdio_write(w2k_p0: Int, w2k_p1: Int, w2k_p2: Int): Int{
    var w2k_p0 = w2k_p0;
    var w2k_p1 = w2k_p1;
    var w2k_p2 = w2k_p2;
    var w2k_l3: Int = 0
    var w2k_l4: Int = 0
    var w2k_l5: Int = 0
    var w2k_l6: Int = 0
    var w2k_l7: Int = 0
    var w2k_l8: Int = 0
    var w2k_l9: Int = 0
    try {
          var w2k_i0: Int = 0
      w2k_Bfunc@ do {
        w2k___stack_pointer = (w2k___stack_pointer - 32).also {w2k_l3=it};
        w2k_Z_memory.i32_store(w2k_l3, 16, (w2k_Z_memory.i32_load(w2k_p0, 28)).also {w2k_l4=it});
        w2k_l5 = w2k_Z_memory.i32_load(w2k_p0, 20);
        w2k_Z_memory.i32_store(w2k_l3, 28, w2k_p2);
        w2k_Z_memory.i32_store(w2k_l3, 24, w2k_p1);
        w2k_Z_memory.i32_store(w2k_l3, 20, (w2k_l5 - w2k_l4).also {w2k_p1=it});
        w2k_l6 = w2k_p1 + w2k_p2;
        w2k_l4 = w2k_l3 + 16;
        w2k_l7 = 2;
        w2k_B0@ do {
          w2k_B1@ do {
            w2k_B2@ do {
              w2k_B3@ do {
                w2k_B4@ do {
                  if (((w2k___wasi_syscall_ret(w2k_Z_fd_write(w2k_Z_memory.i32_load(w2k_p0, 60), w2k_l3 + 16, 2, w2k_l3 + 12, ), )).isz()).inz()){
                    break@w2k_B4;}
                  w2k_l5 = w2k_l4;
                  break@w2k_B3;
                } while (false);
                w2k_L5@ while (true) {
                  if (((w2k_l6 == (w2k_Z_memory.i32_load(w2k_l3, 12)).also {w2k_p1=it}).btoInt()).inz()){
                    break@w2k_B2;}
                  w2k_B6@ do {
                    if (((w2k_p1 > (-1)).btoInt()).inz()){
                      break@w2k_B6;}
                    w2k_l5 = w2k_l4;
                    break@w2k_B1;
                  } while (false);
                  w2k_Z_memory.i32_store((w2k_l4 + (((java.lang.Integer.compareUnsigned(w2k_p1, (w2k_Z_memory.i32_load(w2k_l4, 4)).also {w2k_l8=it})>0).btoInt()).also {w2k_l9=it} shl 3)).also {w2k_l5=it}, w2k_Z_memory.i32_load(w2k_l5) + (w2k_p1 - select(w2k_l8, 0, w2k_l9)).also {w2k_l8=it});
                  w2k_Z_memory.i32_store((w2k_l4 + select(12, 4, w2k_l9)).also {w2k_l4=it}, w2k_Z_memory.i32_load(w2k_l4) - w2k_l8);
                  w2k_l6 = w2k_l6 - w2k_p1;
                  w2k_l4 = w2k_l5;
                  if (((w2k___wasi_syscall_ret(w2k_Z_fd_write(w2k_Z_memory.i32_load(w2k_p0, 60), w2k_l5, (w2k_l7 - w2k_l9).also {w2k_l7=it}, w2k_l3 + 12, ), )).isz()).inz()){
                    continue@w2k_L5;}
                  break;
                }
              } while (false);
              if (((w2k_l6 != (-1)).btoInt()).inz()){
                break@w2k_B1;}
            } while (false);
            w2k_Z_memory.i32_store(w2k_p0, 28, (w2k_Z_memory.i32_load(w2k_p0, 44)).also {w2k_p1=it});
            w2k_Z_memory.i32_store(w2k_p0, 20, w2k_p1);
            w2k_Z_memory.i32_store(w2k_p0, 16, w2k_p1 + w2k_Z_memory.i32_load(w2k_p0, 48));
            w2k_p1 = w2k_p2;
            break@w2k_B0;
          } while (false);
          w2k_p1 = 0;
          w2k_Z_memory.i32_store(w2k_p0, 28, 0);
          w2k_Z_memory.i64_store(w2k_p0, 16, 0L);
          w2k_Z_memory.i32_store(w2k_p0, w2k_Z_memory.i32_load(w2k_p0) or 32);
          if (((w2k_l7 == 2).btoInt()).inz()){
            break@w2k_B0;}
          w2k_p1 = w2k_p2 - w2k_Z_memory.i32_load(w2k_l5, 4);
        } while (false);
        w2k___stack_pointer = w2k_l3 + 32;
        w2k_i0 = w2k_p1;
      } while (false);
      return w2k_i0;
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k___lseek(w2k_p0: Int, w2k_p1: Long, w2k_p2: Int): Long{
    var w2k_p0 = w2k_p0;
    var w2k_p1 = w2k_p1;
    var w2k_p2 = w2k_p2;
    var w2k_l3: Int = 0
    try {
          var w2k_j0: Long = 0
      w2k_Bfunc@ do {
        w2k___stack_pointer = (w2k___stack_pointer - 16).also {w2k_l3=it};
        w2k_p2 = w2k___wasi_syscall_ret(w2k_Z_fd_seek(w2k_p0, w2k_p1, w2k_p2 and 255, w2k_l3 + 8, ), );
        w2k_p1 = w2k_Z_memory.i64_load(w2k_l3, 8);
        w2k___stack_pointer = w2k_l3 + 16;
        w2k_j0 = select(-1L, w2k_p1, w2k_p2);
      } while (false);
      return w2k_j0;
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k___stdio_seek(w2k_p0: Int, w2k_p1: Long, w2k_p2: Int): Long{
    var w2k_p0 = w2k_p0;
    var w2k_p1 = w2k_p1;
    var w2k_p2 = w2k_p2;
    try {
          var w2k_j0: Long = 0
      w2k_Bfunc@ do {
        w2k_j0 = w2k___lseek(w2k_Z_memory.i32_load(w2k_p0, 60), w2k_p1, w2k_p2, );
      } while (false);
      return w2k_j0;
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_strlen(w2k_p0: Int): Int{
    var w2k_p0 = w2k_p0;
    var w2k_l1: Int = 0
    var w2k_l2: Int = 0
    var w2k_l3: Int = 0
    try {
          var w2k_i0: Int = 0
      w2k_Bfunc@ do {
        w2k_l1 = w2k_p0;
        w2k_B0@ do {
          w2k_B1@ do {
            if (((w2k_p0 and 3).isz()).inz()){
              break@w2k_B1;}
            w2k_B2@ do {
              if ((w2k_Z_memory.i32_load8_u(w2k_p0)).inz()){
                break@w2k_B2;}
              w2k_i0 = w2k_p0 - w2k_p0; break@w2k_Bfunc;
            } while (false);
            w2k_l1 = w2k_p0;
            w2k_L3@ while (true) {
              if ((((w2k_l1 + 1).also {w2k_l1=it} and 3).isz()).inz()){
                break@w2k_B1;}
              if ((w2k_Z_memory.i32_load8_u(w2k_l1)).inz()){
                continue@w2k_L3;}
              break@w2k_B0;
              break;
            }
          } while (false);
          w2k_L4@ while (true) {
            w2k_l1 = (w2k_l1).also {w2k_l2=it} + 4;
            if ((((w2k_Z_memory.i32_load(w2k_l2)).also {w2k_l3=it} xor (-1) and w2k_l3 + (-16843009) and (-2139062144)).isz()).inz()){
              continue@w2k_L4;}
            break;
          }
          w2k_L5@ while (true) {
            w2k_l2 = (w2k_l2).also {w2k_l1=it} + 1;
            if ((w2k_Z_memory.i32_load8_u(w2k_l1)).inz()){
              continue@w2k_L5;}
            break;
          }
        } while (false);
        w2k_i0 = w2k_l1 - w2k_p0;
      } while (false);
      return w2k_i0;
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_islower(w2k_p0: Int): Int{
    var w2k_p0 = w2k_p0;
    try {
          var w2k_i0: Int = 0
      w2k_Bfunc@ do {
        w2k_i0 = (java.lang.Integer.compareUnsigned(w2k_p0 + (-97), 26)<0).btoInt();
      } while (false);
      return w2k_i0;
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_toupper(w2k_p0: Int): Int{
    var w2k_p0 = w2k_p0;
    try {
          var w2k_i0: Int = 0
          var w2k_i1: Int = 0
      w2k_Bfunc@ do {
        w2k_i0 = w2k_p0 and 95;
        w2k_i1 = w2k_p0;
        w2k_i0 = select(w2k_i0, w2k_i1, w2k_islower(w2k_p0, ));
      } while (false);
      return w2k_i0;
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_isdigit(w2k_p0: Int): Int{
    var w2k_p0 = w2k_p0;
    try {
          var w2k_i0: Int = 0
      w2k_Bfunc@ do {
        w2k_i0 = (java.lang.Integer.compareUnsigned(w2k_p0 + (-48), 10)<0).btoInt();
      } while (false);
      return w2k_i0;
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_memchr(w2k_p0: Int, w2k_p1: Int, w2k_p2: Int): Int{
    var w2k_p0 = w2k_p0;
    var w2k_p1 = w2k_p1;
    var w2k_p2 = w2k_p2;
    var w2k_l3: Int = 0
    var w2k_l4: Int = 0
    try {
          var w2k_i0: Int = 0
      w2k_Bfunc@ do {
        w2k_l3 = (w2k_p2 != 0).btoInt();
        w2k_B0@ do {
          w2k_B1@ do {
            w2k_B2@ do {
              if (((w2k_p0 and 3).isz()).inz()){
                break@w2k_B2;}
              if (((w2k_p2).isz()).inz()){
                break@w2k_B2;}
              w2k_l4 = w2k_p1 and 255;
              w2k_L3@ while (true) {
                if (((w2k_Z_memory.i32_load8_u(w2k_p0) == w2k_l4).btoInt()).inz()){
                  break@w2k_B1;}
                w2k_l3 = ((w2k_p2 + (-1)).also {w2k_p2=it} != 0).btoInt();
                if ((((w2k_p0 + 1).also {w2k_p0=it} and 3).isz()).inz()){
                  break@w2k_B2;}
                if ((w2k_p2).inz()){
                  continue@w2k_L3;}
                break;
              }
            } while (false);
            if (((w2k_l3).isz()).inz()){
              break@w2k_B0;}
            w2k_B4@ do {
              if (((w2k_Z_memory.i32_load8_u(w2k_p0) == w2k_p1 and 255).btoInt()).inz()){
                break@w2k_B4;}
              if (((java.lang.Integer.compareUnsigned(w2k_p2, 4)<0).btoInt()).inz()){
                break@w2k_B4;}
              w2k_l4 = (w2k_p1 and 255) * 16843009;
              w2k_L5@ while (true) {
                if (((w2k_Z_memory.i32_load(w2k_p0) xor w2k_l4).also {w2k_l3=it} xor (-1) and w2k_l3 + (-16843009) and (-2139062144)).inz()){
                  break@w2k_B1;}
                w2k_p0 = w2k_p0 + 4;
                if (((java.lang.Integer.compareUnsigned((w2k_p2 + (-4)).also {w2k_p2=it}, 3)>0).btoInt()).inz()){
                  continue@w2k_L5;}
                break;
              }
            } while (false);
            if (((w2k_p2).isz()).inz()){
              break@w2k_B0;}
          } while (false);
          w2k_l3 = w2k_p1 and 255;
          w2k_L6@ while (true) {
            w2k_B7@ do {
              if (((w2k_Z_memory.i32_load8_u(w2k_p0) != w2k_l3).btoInt()).inz()){
                break@w2k_B7;}
              w2k_i0 = w2k_p0; break@w2k_Bfunc;
            } while (false);
            w2k_p0 = w2k_p0 + 1;
            if (((w2k_p2 + (-1)).also {w2k_p2=it}).inz()){
              continue@w2k_L6;}
            break;
          }
        } while (false);
        w2k_i0 = 0;
      } while (false);
      return w2k_i0;
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_strnlen(w2k_p0: Int, w2k_p1: Int): Int{
    var w2k_p0 = w2k_p0;
    var w2k_p1 = w2k_p1;
    var w2k_l2: Int = 0
    try {
          var w2k_i0: Int = 0
      w2k_Bfunc@ do {
        w2k_i0 = select((w2k_memchr(w2k_p0, 0, w2k_p1, )).also {w2k_l2=it} - w2k_p0, w2k_p1, w2k_l2);
      } while (false);
      return w2k_i0;
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k___vfprintf_internal(w2k_p0: Int, w2k_p1: Int, w2k_p2: Int, w2k_p3: Int, w2k_p4: Int): Int{
    var w2k_p0 = w2k_p0;
    var w2k_p1 = w2k_p1;
    var w2k_p2 = w2k_p2;
    var w2k_p3 = w2k_p3;
    var w2k_p4 = w2k_p4;
    var w2k_l5: Int = 0
    var w2k_l6: Int = 0
    var w2k_l7: Int = 0
    var w2k_l8: Int = 0
    try {
          var w2k_i0: Int = 0
      w2k_Bfunc@ do {
        w2k___stack_pointer = (w2k___stack_pointer - 208).also {w2k_l5=it};
        w2k_Z_memory.i32_store(w2k_l5, 204, w2k_p2);
        w2k_l6 = 0;
        w2k___memset(w2k_l5 + 160, 0, 40, );
        w2k_Z_memory.i32_store(w2k_l5, 200, w2k_Z_memory.i32_load(w2k_l5, 204));
        w2k_B0@ do {
          w2k_B1@ do {
            if (((w2k_printf_core(0, w2k_p1, w2k_l5 + 200, w2k_l5 + 80, w2k_l5 + 160, w2k_p3, w2k_p4, ) >= 0).btoInt()).inz()){
              break@w2k_B1;}
            w2k_p4 = (-1);
            break@w2k_B0;
          } while (false);
          w2k_B2@ do {
            if (((w2k_Z_memory.i32_load(w2k_p0, 76) < 0).btoInt()).inz()){
              break@w2k_B2;}
            w2k_l6 = w2k___lockfile(w2k_p0, );
          } while (false);
          w2k_Z_memory.i32_store(w2k_p0, (w2k_Z_memory.i32_load(w2k_p0)).also {w2k_l7=it} and (-33));
          w2k_B3@ do {
            w2k_B4@ do {
              w2k_B5@ do {
                w2k_B6@ do {
                  if ((w2k_Z_memory.i32_load(w2k_p0, 48)).inz()){
                    break@w2k_B6;}
                  w2k_Z_memory.i32_store(w2k_p0, 48, 80);
                  w2k_Z_memory.i32_store(w2k_p0, 28, 0);
                  w2k_Z_memory.i64_store(w2k_p0, 16, 0L);
                  w2k_l8 = w2k_Z_memory.i32_load(w2k_p0, 44);
                  w2k_Z_memory.i32_store(w2k_p0, 44, w2k_l5);
                  break@w2k_B5;
                } while (false);
                w2k_l8 = 0;
                if ((w2k_Z_memory.i32_load(w2k_p0, 16)).inz()){
                  break@w2k_B4;}
              } while (false);
              w2k_p2 = (-1);
              if ((w2k___towrite(w2k_p0, )).inz()){
                break@w2k_B3;}
            } while (false);
            w2k_p2 = w2k_printf_core(w2k_p0, w2k_p1, w2k_l5 + 200, w2k_l5 + 80, w2k_l5 + 160, w2k_p3, w2k_p4, );
          } while (false);
          w2k_p4 = w2k_l7 and 32;
          w2k_B7@ do {
            if (((w2k_l8).isz()).inz()){
              break@w2k_B7;}
            CALL_INDIRECT_0(w2k___indirect_function_table, w2k_p0, 0, 0, w2k_Z_memory.i32_load(w2k_p0, 36));
            w2k_Z_memory.i32_store(w2k_p0, 48, 0);
            w2k_Z_memory.i32_store(w2k_p0, 44, w2k_l8);
            w2k_Z_memory.i32_store(w2k_p0, 28, 0);
            w2k_p3 = w2k_Z_memory.i32_load(w2k_p0, 20);
            w2k_Z_memory.i64_store(w2k_p0, 16, 0L);
            w2k_p2 = select(w2k_p2, (-1), w2k_p3);
          } while (false);
          w2k_Z_memory.i32_store(w2k_p0, (w2k_Z_memory.i32_load(w2k_p0)).also {w2k_p3=it} or w2k_p4);
          w2k_p4 = select((-1), w2k_p2, w2k_p3 and 32);
          if (((w2k_l6).isz()).inz()){
            break@w2k_B0;}
          w2k___unlockfile(w2k_p0, );
        } while (false);
        w2k___stack_pointer = w2k_l5 + 208;
        w2k_i0 = w2k_p4;
      } while (false);
      return w2k_i0;
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_printf_core(w2k_p0: Int, w2k_p1: Int, w2k_p2: Int, w2k_p3: Int, w2k_p4: Int, w2k_p5: Int, w2k_p6: Int): Int{
    var w2k_p0 = w2k_p0;
    var w2k_p1 = w2k_p1;
    var w2k_p2 = w2k_p2;
    var w2k_p3 = w2k_p3;
    var w2k_p4 = w2k_p4;
    var w2k_p5 = w2k_p5;
    var w2k_p6 = w2k_p6;
    var w2k_l7: Int = 0
    var w2k_l8: Int = 0
    var w2k_l9: Int = 0
    var w2k_l10: Int = 0
    var w2k_l11: Int = 0
    var w2k_l12: Int = 0
    var w2k_l13: Int = 0
    var w2k_l14: Int = 0
    var w2k_l15: Int = 0
    var w2k_l16: Int = 0
    var w2k_l17: Int = 0
    var w2k_l18: Int = 0
    var w2k_l19: Int = 0
    var w2k_l20: Int = 0
    var w2k_l21: Int = 0
    var w2k_l22: Int = 0
    var w2k_l23: Int = 0
    var w2k_l24: Int = 0
    var w2k_l25: Int = 0
    var w2k_l26: Long = 0
    try {
          var w2k_i0: Int = 0
      w2k_Bfunc@ do {
        w2k___stack_pointer = (w2k___stack_pointer - 80).also {w2k_l7=it};
        w2k_Z_memory.i32_store(w2k_l7, 76, w2k_p1);
        w2k_l8 = w2k_l7 + 55;
        w2k_l9 = w2k_l7 + 56;
        w2k_l10 = 0;
        w2k_l11 = 0;
        w2k_B0@ do {
          w2k_B1@ do {
            w2k_B2@ do {
              w2k_L3@ while (true) {
                w2k_l12 = 0;
                w2k_L4@ while (true) {
                  w2k_l13 = w2k_p1;
                  if (((w2k_l12 > w2k_l11 xor 2147483647).btoInt()).inz()){
                    break@w2k_B2;}
                  w2k_l11 = w2k_l12 + w2k_l11;
                  w2k_l12 = w2k_l13;
                  w2k_B5@ do {
                    w2k_B6@ do {
                      w2k_B7@ do {
                        w2k_B8@ do {
                          w2k_B9@ do {
                            if ((((w2k_Z_memory.i32_load8_u(w2k_l13)).also {w2k_l14=it}).isz()).inz()){
                              break@w2k_B9;}
                            w2k_L10@ while (true) {
                              w2k_B11@ do {
                                w2k_B12@ do {
                                  w2k_B13@ do {
                                    if (((w2k_l14 and 255).also {w2k_l14=it}).inz()){
                                      break@w2k_B13;}
                                    w2k_p1 = w2k_l12;
                                    break@w2k_B12;
                                  } while (false);
                                  if (((w2k_l14 != 37).btoInt()).inz()){
                                    break@w2k_B11;}
                                  w2k_l14 = w2k_l12;
                                  w2k_L14@ while (true) {
                                    w2k_B15@ do {
                                      if (((w2k_Z_memory.i32_load8_u(w2k_l14, 1) == 37).btoInt()).inz()){
                                        break@w2k_B15;}
                                      w2k_p1 = w2k_l14;
                                      break@w2k_B12;
                                    } while (false);
                                    w2k_l12 = w2k_l12 + 1;
                                    w2k_l15 = w2k_Z_memory.i32_load8_u(w2k_l14, 2);
                                    w2k_l14 = (w2k_l14 + 2).also {w2k_p1=it};
                                    if (((w2k_l15 == 37).btoInt()).inz()){
                                      continue@w2k_L14;}
                                    break;
                                  }
                                } while (false);
                                if ((((w2k_l12 - w2k_l13).also {w2k_l12=it} > (w2k_l11 xor 2147483647).also {w2k_l14=it}).btoInt()).inz()){
                                  break@w2k_B2;}
                                w2k_B16@ do {
                                  if (((w2k_p0).isz()).inz()){
                                    break@w2k_B16;}
                                  w2k_out(w2k_p0, w2k_l13, w2k_l12, );
                                } while (false);
                                if ((w2k_l12).inz()){
                                  continue@w2k_L4;}
                                w2k_Z_memory.i32_store(w2k_l7, 76, w2k_p1);
                                w2k_l12 = w2k_p1 + 1;
                                w2k_l16 = (-1);
                                w2k_B17@ do {
                                  if (((w2k_isdigit(w2k_Z_memory.i32_load8_s(w2k_p1, 1), )).isz()).inz()){
                                    break@w2k_B17;}
                                  if (((w2k_Z_memory.i32_load8_u(w2k_p1, 2) != 36).btoInt()).inz()){
                                    break@w2k_B17;}
                                  w2k_l12 = w2k_p1 + 3;
                                  w2k_l16 = w2k_Z_memory.i32_load8_s(w2k_p1, 1) + (-48);
                                  w2k_l10 = 1;
                                } while (false);
                                w2k_Z_memory.i32_store(w2k_l7, 76, w2k_l12);
                                w2k_l17 = 0;
                                w2k_B18@ do {
                                  w2k_B19@ do {
                                    if (((java.lang.Integer.compareUnsigned(((w2k_Z_memory.i32_load8_s(w2k_l12)).also {w2k_l18=it} + (-32)).also {w2k_p1=it}, 31)<=0).btoInt()).inz()){
                                      break@w2k_B19;}
                                    w2k_l15 = w2k_l12;
                                    break@w2k_B18;
                                  } while (false);
                                  w2k_l17 = 0;
                                  w2k_l15 = w2k_l12;
                                  if ((((1 shl w2k_p1).also {w2k_p1=it} and 75913).isz()).inz()){
                                    break@w2k_B18;}
                                  w2k_L20@ while (true) {
                                    w2k_Z_memory.i32_store(w2k_l7, 76, (w2k_l12 + 1).also {w2k_l15=it});
                                    w2k_l17 = w2k_p1 or w2k_l17;
                                    if (((java.lang.Integer.compareUnsigned(((w2k_Z_memory.i32_load8_s(w2k_l12, 1)).also {w2k_l18=it} + (-32)).also {w2k_p1=it}, 32)>=0).btoInt()).inz()){
                                      break@w2k_B18;}
                                    w2k_l12 = w2k_l15;
                                    if (((1 shl w2k_p1).also {w2k_p1=it} and 75913).inz()){
                                      continue@w2k_L20;}
                                    break;
                                  }
                                } while (false);
                                w2k_B21@ do {
                                  w2k_B22@ do {
                                    if (((w2k_l18 != 42).btoInt()).inz()){
                                      break@w2k_B22;}
                                    w2k_l18 = w2k_l15 + 1;
                                    w2k_B23@ do {
                                      w2k_B24@ do {
                                        if (((w2k_isdigit(w2k_Z_memory.i32_load8_s(w2k_l15, 1), )).isz()).inz()){
                                          break@w2k_B24;}
                                        if (((w2k_Z_memory.i32_load8_u(w2k_l15, 2) != 36).btoInt()).inz()){
                                          break@w2k_B24;}
                                        w2k_l12 = w2k_Z_memory.i32_load8_s(w2k_l18) + (-48);
                                        w2k_B25@ do {
                                          w2k_B26@ do {
                                            if ((w2k_p0).inz()){
                                              break@w2k_B26;}
                                            w2k_Z_memory.i32_store(w2k_p4 + (w2k_l12 shl 2), 10);
                                            w2k_l19 = 0;
                                            break@w2k_B25;
                                          } while (false);
                                          w2k_l19 = w2k_Z_memory.i32_load(w2k_p3 + (w2k_l12 shl 3));
                                        } while (false);
                                        w2k_l18 = w2k_l15 + 3;
                                        w2k_l10 = 1;
                                        break@w2k_B23;
                                      } while (false);
                                      if ((w2k_l10).inz()){
                                        break@w2k_B8;}
                                      w2k_B27@ do {
                                        if ((w2k_p0).inz()){
                                          break@w2k_B27;}
                                        w2k_Z_memory.i32_store(w2k_l7, 76, w2k_l18);
                                        w2k_l10 = 0;
                                        w2k_l19 = 0;
                                        break@w2k_B21;
                                      } while (false);
                                      w2k_Z_memory.i32_store(w2k_p2, (w2k_Z_memory.i32_load(w2k_p2)).also {w2k_l12=it} + 4);
                                      w2k_l19 = w2k_Z_memory.i32_load(w2k_l12);
                                      w2k_l10 = 0;
                                    } while (false);
                                    w2k_Z_memory.i32_store(w2k_l7, 76, w2k_l18);
                                    if (((w2k_l19 > (-1)).btoInt()).inz()){
                                      break@w2k_B21;}
                                    w2k_l19 = 0 - w2k_l19;
                                    w2k_l17 = w2k_l17 or 8192;
                                    break@w2k_B21;
                                  } while (false);
                                  if ((((w2k_getint(w2k_l7 + 76, )).also {w2k_l19=it} < 0).btoInt()).inz()){
                                    break@w2k_B2;}
                                  w2k_l18 = w2k_Z_memory.i32_load(w2k_l7, 76);
                                } while (false);
                                w2k_l12 = 0;
                                w2k_l20 = (-1);
                                w2k_B28@ do {
                                  w2k_B29@ do {
                                    if (((w2k_Z_memory.i32_load8_u(w2k_l18) == 46).btoInt()).inz()){
                                      break@w2k_B29;}
                                    w2k_p1 = w2k_l18;
                                    w2k_l21 = 0;
                                    break@w2k_B28;
                                  } while (false);
                                  w2k_B30@ do {
                                    if (((w2k_Z_memory.i32_load8_u(w2k_l18, 1) != 42).btoInt()).inz()){
                                      break@w2k_B30;}
                                    w2k_p1 = w2k_l18 + 2;
                                    w2k_B31@ do {
                                      w2k_B32@ do {
                                        if (((w2k_isdigit(w2k_Z_memory.i32_load8_s(w2k_l18, 2), )).isz()).inz()){
                                          break@w2k_B32;}
                                        if (((w2k_Z_memory.i32_load8_u(w2k_l18, 3) != 36).btoInt()).inz()){
                                          break@w2k_B32;}
                                        w2k_l15 = w2k_Z_memory.i32_load8_s(w2k_p1) + (-48);
                                        w2k_B33@ do {
                                          w2k_B34@ do {
                                            if ((w2k_p0).inz()){
                                              break@w2k_B34;}
                                            w2k_Z_memory.i32_store(w2k_p4 + (w2k_l15 shl 2), 10);
                                            w2k_l20 = 0;
                                            break@w2k_B33;
                                          } while (false);
                                          w2k_l20 = w2k_Z_memory.i32_load(w2k_p3 + (w2k_l15 shl 3));
                                        } while (false);
                                        w2k_p1 = w2k_l18 + 4;
                                        break@w2k_B31;
                                      } while (false);
                                      if ((w2k_l10).inz()){
                                        break@w2k_B8;}
                                      w2k_B35@ do {
                                        if ((w2k_p0).inz()){
                                          break@w2k_B35;}
                                        w2k_l20 = 0;
                                        break@w2k_B31;
                                      } while (false);
                                      w2k_Z_memory.i32_store(w2k_p2, (w2k_Z_memory.i32_load(w2k_p2)).also {w2k_l15=it} + 4);
                                      w2k_l20 = w2k_Z_memory.i32_load(w2k_l15);
                                    } while (false);
                                    w2k_Z_memory.i32_store(w2k_l7, 76, w2k_p1);
                                    w2k_l21 = w2k_l20 xor (-1) ushr 31;
                                    break@w2k_B28;
                                  } while (false);
                                  w2k_Z_memory.i32_store(w2k_l7, 76, w2k_l18 + 1);
                                  w2k_l21 = 1;
                                  w2k_l20 = w2k_getint(w2k_l7 + 76, );
                                  w2k_p1 = w2k_Z_memory.i32_load(w2k_l7, 76);
                                } while (false);
                                w2k_L36@ while (true) {
                                  w2k_l15 = w2k_l12;
                                  w2k_l22 = 28;
                                  if (((java.lang.Integer.compareUnsigned((w2k_Z_memory.i32_load8_s((w2k_p1).also {w2k_l18=it})).also {w2k_l12=it} + (-123), (-58))<0).btoInt()).inz()){
                                    break@w2k_B1;}
                                  w2k_p1 = w2k_l18 + 1;
                                  if (((java.lang.Integer.compareUnsigned((w2k_Z_memory.i32_load8_u(w2k_l12 + w2k_l15 * 58 + 58079)).also {w2k_l12=it} + (-1), 8)<0).btoInt()).inz()){
                                    continue@w2k_L36;}
                                  break;
                                }
                                w2k_Z_memory.i32_store(w2k_l7, 76, w2k_p1);
                                w2k_B37@ do {
                                  w2k_B38@ do {
                                    if (((w2k_l12 == 27).btoInt()).inz()){
                                      break@w2k_B38;}
                                    if (((w2k_l12).isz()).inz()){
                                      break@w2k_B1;}
                                    w2k_B39@ do {
                                      if (((w2k_l16 < 0).btoInt()).inz()){
                                        break@w2k_B39;}
                                      w2k_B40@ do {
                                        if ((w2k_p0).inz()){
                                          break@w2k_B40;}
                                        w2k_Z_memory.i32_store(w2k_p4 + (w2k_l16 shl 2), w2k_l12);
                                        continue@w2k_L3;
                                      } while (false);
                                      w2k_Z_memory.i64_store(w2k_l7, 64, w2k_Z_memory.i64_load(w2k_p3 + (w2k_l16 shl 3)));
                                      break@w2k_B37;
                                    } while (false);
                                    if (((w2k_p0).isz()).inz()){
                                      break@w2k_B5;}
                                    w2k_pop_arg(w2k_l7 + 64, w2k_l12, w2k_p2, w2k_p6, );
                                    break@w2k_B37;
                                  } while (false);
                                  if (((w2k_l16 > (-1)).btoInt()).inz()){
                                    break@w2k_B1;}
                                  w2k_l12 = 0;
                                  if (((w2k_p0).isz()).inz()){
                                    continue@w2k_L4;}
                                } while (false);
                                w2k_l22 = (-1);
                                if ((w2k_Z_memory.i32_load8_u(w2k_p0) and 32).inz()){
                                  break@w2k_B0;}
                                w2k_l17 = select((w2k_l17 and (-65537)).also {w2k_l23=it}, w2k_l17, w2k_l17 and 8192);
                                w2k_l16 = 0;
                                w2k_l24 = 53984;
                                w2k_l25 = w2k_l9;
                                w2k_B41@ do {
                                  w2k_B42@ do {
                                    w2k_B43@ do {
                                      w2k_B44@ do {
                                        w2k_B45@ do {
                                          w2k_B46@ do {
                                            w2k_B47@ do {
                                              w2k_B48@ do {
                                                w2k_B49@ do {
                                                  w2k_B50@ do {
                                                    w2k_B51@ do {
                                                      w2k_B52@ do {
                                                        w2k_B53@ do {
                                                          w2k_B54@ do {
                                                            w2k_B55@ do {
                                                              w2k_B56@ do {
                                                                when ((select(select((w2k_Z_memory.i32_load8_s(w2k_l18)).also {w2k_l12=it} and (-33), w2k_l12, (w2k_l12 and 15 == 3).btoInt()), w2k_l12, w2k_l15)).also {w2k_l12=it} + (-88)) {
                                                                  32, 0 -> {
                                                                    break@w2k_B52;}
                                                                  31, 30, 28, 26, 25, 21, 20, 19, 18, 16, 10, 8, 7, 6, 5, 4, 3, 2, 1 -> {
                                                                    break@w2k_B6;}
                                                                  15, 14, 13, 9 -> {
                                                                    break@w2k_B42;}
                                                                  11 -> {
                                                                    break@w2k_B41;}
                                                                  17, 12 -> {
                                                                    break@w2k_B50;}
                                                                  22 -> {
                                                                    break@w2k_B54;}
                                                                  23 -> {
                                                                    break@w2k_B51;}
                                                                  24 -> {
                                                                    break@w2k_B53;}
                                                                  27 -> {
                                                                    break@w2k_B47;}
                                                                  29 -> {
                                                                    break@w2k_B55;}
                                                                  else -> {
                                                                    break@w2k_B56;}
                                                                }
                                                              } while (false);
                                                              w2k_l25 = w2k_l9;
                                                              w2k_B57@ do {
                                                                when (w2k_l12 + (-65)) {
                                                                  6, 5, 4, 0 -> {
                                                                    break@w2k_B42;}
                                                                  3, 1 -> {
                                                                    break@w2k_B6;}
                                                                  2 -> {
                                                                    break@w2k_B45;}
                                                                  else -> {
                                                                    break@w2k_B57;}
                                                                }
                                                              } while (false);
                                                              if (((w2k_l12 == 83).btoInt()).inz()){
                                                                break@w2k_B46;}
                                                              break@w2k_B7;
                                                            } while (false);
                                                            w2k_l16 = 0;
                                                            w2k_l24 = 53984;
                                                            w2k_l26 = w2k_Z_memory.i64_load(w2k_l7, 64);
                                                            break@w2k_B49;
                                                          } while (false);
                                                          w2k_l12 = 0;
                                                          w2k_B58@ do {
                                                            w2k_B59@ do {
                                                              w2k_B60@ do {
                                                                w2k_B61@ do {
                                                                  w2k_B62@ do {
                                                                    w2k_B63@ do {
                                                                      w2k_B64@ do {
                                                                        when (w2k_l15 and 255) {
                                                                          0 -> {
                                                                            break@w2k_B64;}
                                                                          1 -> {
                                                                            break@w2k_B63;}
                                                                          2 -> {
                                                                            break@w2k_B62;}
                                                                          3 -> {
                                                                            break@w2k_B61;}
                                                                          4 -> {
                                                                            break@w2k_B60;}
                                                                          5 -> {
                                                                            continue@w2k_L4;}
                                                                          6 -> {
                                                                            break@w2k_B59;}
                                                                          7 -> {
                                                                            break@w2k_B58;}
                                                                          else -> {
                                                                            continue@w2k_L4;}
                                                                        }
                                                                      } while (false);
                                                                      w2k_Z_memory.i32_store(w2k_Z_memory.i32_load(w2k_l7, 64), w2k_l11);
                                                                      continue@w2k_L4;
                                                                    } while (false);
                                                                    w2k_Z_memory.i32_store(w2k_Z_memory.i32_load(w2k_l7, 64), w2k_l11);
                                                                    continue@w2k_L4;
                                                                  } while (false);
                                                                  w2k_Z_memory.i64_store(w2k_Z_memory.i32_load(w2k_l7, 64), (w2k_l11).toLong());
                                                                  continue@w2k_L4;
                                                                } while (false);
                                                                w2k_Z_memory.i32_store16(w2k_Z_memory.i32_load(w2k_l7, 64), w2k_l11);
                                                                continue@w2k_L4;
                                                              } while (false);
                                                              w2k_Z_memory.i32_store8(w2k_Z_memory.i32_load(w2k_l7, 64), w2k_l11);
                                                              continue@w2k_L4;
                                                            } while (false);
                                                            w2k_Z_memory.i32_store(w2k_Z_memory.i32_load(w2k_l7, 64), w2k_l11);
                                                            continue@w2k_L4;
                                                          } while (false);
                                                          w2k_Z_memory.i64_store(w2k_Z_memory.i32_load(w2k_l7, 64), (w2k_l11).toLong());
                                                          continue@w2k_L4;
                                                        } while (false);
                                                        w2k_l20 = select(w2k_l20, 8, (java.lang.Integer.compareUnsigned(w2k_l20, 8)>0).btoInt());
                                                        w2k_l17 = w2k_l17 or 8;
                                                        w2k_l12 = 120;
                                                      } while (false);
                                                      w2k_l13 = w2k_fmt_x(w2k_Z_memory.i64_load(w2k_l7, 64), w2k_l9, w2k_l12 and 32, );
                                                      w2k_l16 = 0;
                                                      w2k_l24 = 53984;
                                                      if (((w2k_Z_memory.i64_load(w2k_l7, 64)).isz()).inz()){
                                                        break@w2k_B48;}
                                                      if (((w2k_l17 and 8).isz()).inz()){
                                                        break@w2k_B48;}
                                                      w2k_l24 = (w2k_l12 ushr 4) + 53984;
                                                      w2k_l16 = 2;
                                                      break@w2k_B48;
                                                    } while (false);
                                                    w2k_l16 = 0;
                                                    w2k_l24 = 53984;
                                                    w2k_l13 = w2k_fmt_o(w2k_Z_memory.i64_load(w2k_l7, 64), w2k_l9, );
                                                    if (((w2k_l17 and 8).isz()).inz()){
                                                      break@w2k_B48;}
                                                    w2k_l20 = select(w2k_l20, (w2k_l9 - w2k_l13).also {w2k_l12=it} + 1, (w2k_l20 > w2k_l12).btoInt());
                                                    break@w2k_B48;
                                                  } while (false);
                                                  w2k_B65@ do {
                                                    if ((((w2k_Z_memory.i64_load(w2k_l7, 64)).also {w2k_l26=it} > -1L).btoInt()).inz()){
                                                      break@w2k_B65;}
                                                    w2k_Z_memory.i64_store(w2k_l7, 64, (0L - w2k_l26).also {w2k_l26=it});
                                                    w2k_l16 = 1;
                                                    w2k_l24 = 53984;
                                                    break@w2k_B49;
                                                  } while (false);
                                                  w2k_B66@ do {
                                                    if (((w2k_l17 and 2048).isz()).inz()){
                                                      break@w2k_B66;}
                                                    w2k_l16 = 1;
                                                    w2k_l24 = 53985;
                                                    break@w2k_B49;
                                                  } while (false);
                                                  w2k_l24 = select(53986, 53984, (w2k_l17 and 1).also {w2k_l16=it});
                                                } while (false);
                                                w2k_l13 = w2k_fmt_u(w2k_l26, w2k_l9, );
                                              } while (false);
                                              w2k_B67@ do {
                                                if (((w2k_l21).isz()).inz()){
                                                  break@w2k_B67;}
                                                if (((w2k_l20 < 0).btoInt()).inz()){
                                                  break@w2k_B2;}
                                              } while (false);
                                              w2k_l17 = select(w2k_l17 and (-65537), w2k_l17, w2k_l21);
                                              w2k_B68@ do {
                                                if ((((w2k_Z_memory.i64_load(w2k_l7, 64)).also {w2k_l26=it} != 0L).btoInt()).inz()){
                                                  break@w2k_B68;}
                                                if ((w2k_l20).inz()){
                                                  break@w2k_B68;}
                                                w2k_l13 = w2k_l9;
                                                w2k_l25 = w2k_l9;
                                                w2k_l20 = 0;
                                                break@w2k_B6;
                                              } while (false);
                                              w2k_l20 = select(w2k_l20, (w2k_l9 - w2k_l13 + (w2k_l26).isz()).also {w2k_l12=it}, (w2k_l20 > w2k_l12).btoInt());
                                              break@w2k_B7;
                                            } while (false);
                                            w2k_l13 = select((w2k_Z_memory.i32_load(w2k_l7, 64)).also {w2k_l12=it}, 54018, w2k_l12);
                                            w2k_i0 = w2k_l13;
                                            w2k_l25 = w2k_i0 + (w2k_strnlen(w2k_l13, select(w2k_l20, 2147483647, (java.lang.Integer.compareUnsigned(w2k_l20, 2147483647)<0).btoInt()), )).also {w2k_l12=it};
                                            w2k_B69@ do {
                                              if (((w2k_l20 <= (-1)).btoInt()).inz()){
                                                break@w2k_B69;}
                                              w2k_l17 = w2k_l23;
                                              w2k_l20 = w2k_l12;
                                              break@w2k_B6;
                                            } while (false);
                                            w2k_l17 = w2k_l23;
                                            w2k_l20 = w2k_l12;
                                            if ((w2k_Z_memory.i32_load8_u(w2k_l25)).inz()){
                                              break@w2k_B2;}
                                            break@w2k_B6;
                                          } while (false);
                                          w2k_B70@ do {
                                            if (((w2k_l20).isz()).inz()){
                                              break@w2k_B70;}
                                            w2k_l14 = w2k_Z_memory.i32_load(w2k_l7, 64);
                                            break@w2k_B44;
                                          } while (false);
                                          w2k_l12 = 0;
                                          w2k_pad(w2k_p0, 32, w2k_l19, 0, w2k_l17, );
                                          break@w2k_B43;
                                        } while (false);
                                        w2k_Z_memory.i32_store(w2k_l7, 12, 0);
                                        w2k_Z_memory.i64_store32(w2k_l7, 8, w2k_Z_memory.i64_load(w2k_l7, 64));
                                        w2k_Z_memory.i32_store(w2k_l7, 64, w2k_l7 + 8);
                                        w2k_l14 = w2k_l7 + 8;
                                        w2k_l20 = (-1);
                                      } while (false);
                                      w2k_l12 = 0;
                                      w2k_B71@ do {
                                        w2k_L72@ while (true) {
                                          if ((((w2k_Z_memory.i32_load(w2k_l14)).also {w2k_l15=it}).isz()).inz()){
                                            break@w2k_B71;}
                                          w2k_B73@ do {
                                            if (((((w2k_wctomb(w2k_l7 + 4, w2k_l15, )).also {w2k_l15=it} < 0).btoInt()).also {w2k_l13=it}).inz()){
                                              break@w2k_B73;}
                                            if (((java.lang.Integer.compareUnsigned(w2k_l15, w2k_l20 - w2k_l12)>0).btoInt()).inz()){
                                              break@w2k_B73;}
                                            w2k_l14 = w2k_l14 + 4;
                                            if (((java.lang.Integer.compareUnsigned((w2k_l15 + w2k_l12).also {w2k_l12=it}, w2k_l20)<0).btoInt()).inz()){
                                              continue@w2k_L72;}
                                            break@w2k_B71;
                                          } while (false);
                                          break;
                                        }
                                        if ((w2k_l13).inz()){
                                          break@w2k_B0;}
                                      } while (false);
                                      w2k_l22 = 61;
                                      if (((w2k_l12 < 0).btoInt()).inz()){
                                        break@w2k_B1;}
                                      w2k_pad(w2k_p0, 32, w2k_l19, w2k_l12, w2k_l17, );
                                      w2k_B74@ do {
                                        if ((w2k_l12).inz()){
                                          break@w2k_B74;}
                                        w2k_l12 = 0;
                                        break@w2k_B43;
                                      } while (false);
                                      w2k_l15 = 0;
                                      w2k_l14 = w2k_Z_memory.i32_load(w2k_l7, 64);
                                      w2k_L75@ while (true) {
                                        if ((((w2k_Z_memory.i32_load(w2k_l14)).also {w2k_l13=it}).isz()).inz()){
                                          break@w2k_B43;}
                                        if (((java.lang.Integer.compareUnsigned(((w2k_wctomb(w2k_l7 + 4, w2k_l13, )).also {w2k_l13=it} + w2k_l15).also {w2k_l15=it}, w2k_l12)>0).btoInt()).inz()){
                                          break@w2k_B43;}
                                        w2k_out(w2k_p0, w2k_l7 + 4, w2k_l13, );
                                        w2k_l14 = w2k_l14 + 4;
                                        if (((java.lang.Integer.compareUnsigned(w2k_l15, w2k_l12)<0).btoInt()).inz()){
                                          continue@w2k_L75;}
                                        break;
                                      }
                                    } while (false);
                                    w2k_pad(w2k_p0, 32, w2k_l19, w2k_l12, w2k_l17 xor 8192, );
                                    w2k_l12 = select(w2k_l19, w2k_l12, (w2k_l19 > w2k_l12).btoInt());
                                    continue@w2k_L4;
                                  } while (false);
                                  w2k_B76@ do {
                                    if (((w2k_l21).isz()).inz()){
                                      break@w2k_B76;}
                                    if (((w2k_l20 < 0).btoInt()).inz()){
                                      break@w2k_B2;}
                                  } while (false);
                                  w2k_l22 = 61;
                                  if ((((CALL_INDIRECT_1(w2k___indirect_function_table, w2k_p0, w2k_Z_memory.f64_load(w2k_l7, 64), w2k_l19, w2k_l20, w2k_l17, w2k_l12, w2k_p5)).also {w2k_l12=it} >= 0).btoInt()).inz()){
                                    continue@w2k_L4;}
                                  break@w2k_B1;
                                } while (false);
                                w2k_Z_memory.i64_store8(w2k_l7, 55, w2k_Z_memory.i64_load(w2k_l7, 64));
                                w2k_l20 = 1;
                                w2k_l13 = w2k_l8;
                                w2k_l25 = w2k_l9;
                                w2k_l17 = w2k_l23;
                                break@w2k_B6;
                              } while (false);
                              w2k_l14 = w2k_Z_memory.i32_load8_u(w2k_l12, 1);
                              w2k_l12 = w2k_l12 + 1;
                              continue@w2k_L10;
                              break;
                            }
                          } while (false);
                          w2k_l22 = w2k_l11;
                          if ((w2k_p0).inz()){
                            break@w2k_B0;}
                          if (((w2k_l10).isz()).inz()){
                            break@w2k_B5;}
                          w2k_l12 = 1;
                          w2k_B77@ do {
                            w2k_L78@ while (true) {
                              if ((((w2k_Z_memory.i32_load(w2k_p4 + (w2k_l12 shl 2))).also {w2k_l14=it}).isz()).inz()){
                                break@w2k_B77;}
                              w2k_pop_arg(w2k_p3 + (w2k_l12 shl 3), w2k_l14, w2k_p2, w2k_p6, );
                              w2k_l22 = 1;
                              if ((((w2k_l12 + 1).also {w2k_l12=it} != 10).btoInt()).inz()){
                                continue@w2k_L78;}
                              break@w2k_B0;
                              break;
                            }
                          } while (false);
                          w2k_l22 = 1;
                          if (((java.lang.Integer.compareUnsigned(w2k_l12, 10)>=0).btoInt()).inz()){
                            break@w2k_B0;}
                          w2k_L79@ while (true) {
                            if ((w2k_Z_memory.i32_load(w2k_p4 + (w2k_l12 shl 2))).inz()){
                              break@w2k_B8;}
                            w2k_l22 = 1;
                            if ((((w2k_l12 + 1).also {w2k_l12=it} == 10).btoInt()).inz()){
                              break@w2k_B0;}
                            continue@w2k_L79;
                            break;
                          }
                        } while (false);
                        w2k_l22 = 28;
                        break@w2k_B1;
                      } while (false);
                      w2k_l25 = w2k_l9;
                    } while (false);
                    if ((((select(w2k_l20, (w2k_l25 - w2k_l13).also {w2k_l18=it}, (w2k_l20 > w2k_l18).btoInt())).also {w2k_l20=it} > w2k_l16 xor 2147483647).btoInt()).inz()){
                      break@w2k_B2;}
                    w2k_l22 = 61;
                    if ((((select(w2k_l19, (w2k_l16 + w2k_l20).also {w2k_l15=it}, (w2k_l19 > w2k_l15).btoInt())).also {w2k_l12=it} > w2k_l14).btoInt()).inz()){
                      break@w2k_B1;}
                    w2k_pad(w2k_p0, 32, w2k_l12, w2k_l15, w2k_l17, );
                    w2k_out(w2k_p0, w2k_l24, w2k_l16, );
                    w2k_pad(w2k_p0, 48, w2k_l12, w2k_l15, w2k_l17 xor 65536, );
                    w2k_pad(w2k_p0, 48, w2k_l20, w2k_l18, 0, );
                    w2k_out(w2k_p0, w2k_l13, w2k_l18, );
                    w2k_pad(w2k_p0, 32, w2k_l12, w2k_l15, w2k_l17 xor 8192, );
                    continue@w2k_L4;
                  } while (false);
                  break;
                }
                break;
              }
              w2k_l22 = 0;
              break@w2k_B0;
            } while (false);
            w2k_l22 = 61;
          } while (false);
          w2k_Z_memory.i32_store(w2k___errno_location(), w2k_l22);
          w2k_l22 = (-1);
        } while (false);
        w2k___stack_pointer = w2k_l7 + 80;
        w2k_i0 = w2k_l22;
      } while (false);
      return w2k_i0;
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_out(w2k_p0: Int, w2k_p1: Int, w2k_p2: Int): Unit{
    var w2k_p0 = w2k_p0;
    var w2k_p1 = w2k_p1;
    var w2k_p2 = w2k_p2;
    try {
      w2k_Bfunc@ do {
        w2k_B0@ do {
          if ((w2k_Z_memory.i32_load8_u(w2k_p0) and 32).inz()){
            break@w2k_B0;}
          w2k___fwritex(w2k_p1, w2k_p2, w2k_p0, );
        } while (false);
      } while (false);
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_getint(w2k_p0: Int): Int{
    var w2k_p0 = w2k_p0;
    var w2k_l1: Int = 0
    var w2k_l2: Int = 0
    var w2k_l3: Int = 0
    try {
          var w2k_i0: Int = 0
      w2k_Bfunc@ do {
        w2k_l1 = 0;
        w2k_B0@ do {
          if ((w2k_isdigit(w2k_Z_memory.i32_load8_s(w2k_Z_memory.i32_load(w2k_p0)), )).inz()){
            break@w2k_B0;}
          w2k_i0 = 0; break@w2k_Bfunc;
        } while (false);
        w2k_L1@ while (true) {
          w2k_l2 = w2k_Z_memory.i32_load(w2k_p0);
          w2k_l3 = (-1);
          w2k_B2@ do {
            if (((java.lang.Integer.compareUnsigned(w2k_l1, 214748364)>0).btoInt()).inz()){
              break@w2k_B2;}
            w2k_l3 = select((-1), (w2k_Z_memory.i32_load8_s(w2k_l2) + (-48)).also {w2k_l3=it} + (w2k_l1 * 10).also {w2k_l1=it}, (w2k_l3 > w2k_l1 xor 2147483647).btoInt());
          } while (false);
          w2k_Z_memory.i32_store(w2k_p0, w2k_l2 + 1);
          w2k_l1 = w2k_l3;
          if ((w2k_isdigit(w2k_Z_memory.i32_load8_s(w2k_l2, 1), )).inz()){
            continue@w2k_L1;}
          break;
        }
        w2k_i0 = w2k_l3;
      } while (false);
      return w2k_i0;
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_pop_arg(w2k_p0: Int, w2k_p1: Int, w2k_p2: Int, w2k_p3: Int): Unit{
    var w2k_p0 = w2k_p0;
    var w2k_p1 = w2k_p1;
    var w2k_p2 = w2k_p2;
    var w2k_p3 = w2k_p3;
    try {
      w2k_Bfunc@ do {
        w2k_B0@ do {
          w2k_B1@ do {
            w2k_B2@ do {
              w2k_B3@ do {
                w2k_B4@ do {
                  w2k_B5@ do {
                    w2k_B6@ do {
                      w2k_B7@ do {
                        w2k_B8@ do {
                          w2k_B9@ do {
                            w2k_B10@ do {
                              w2k_B11@ do {
                                w2k_B12@ do {
                                  w2k_B13@ do {
                                    w2k_B14@ do {
                                      w2k_B15@ do {
                                        w2k_B16@ do {
                                          w2k_B17@ do {
                                            w2k_B18@ do {
                                              when (w2k_p1 + (-9)) {
                                                0 -> {
                                                  break@w2k_B18;}
                                                1 -> {
                                                  break@w2k_B17;}
                                                2 -> {
                                                  break@w2k_B16;}
                                                3 -> {
                                                  break@w2k_B13;}
                                                4 -> {
                                                  break@w2k_B15;}
                                                5 -> {
                                                  break@w2k_B14;}
                                                6 -> {
                                                  break@w2k_B12;}
                                                7 -> {
                                                  break@w2k_B11;}
                                                8 -> {
                                                  break@w2k_B10;}
                                                9 -> {
                                                  break@w2k_B9;}
                                                10 -> {
                                                  break@w2k_B8;}
                                                11 -> {
                                                  break@w2k_B7;}
                                                12 -> {
                                                  break@w2k_B6;}
                                                13 -> {
                                                  break@w2k_B5;}
                                                14 -> {
                                                  break@w2k_B4;}
                                                15 -> {
                                                  break@w2k_B3;}
                                                16 -> {
                                                  break@w2k_B2;}
                                                17 -> {
                                                  break@w2k_B1;}
                                                else -> {
                                                  break@w2k_B0;}
                                              }
                                            } while (false);
                                            w2k_Z_memory.i32_store(w2k_p2, (w2k_Z_memory.i32_load(w2k_p2)).also {w2k_p1=it} + 4);
                                            w2k_Z_memory.i32_store(w2k_p0, w2k_Z_memory.i32_load(w2k_p1));
                                            break@w2k_Bfunc;
                                          } while (false);
                                          w2k_Z_memory.i32_store(w2k_p2, (w2k_Z_memory.i32_load(w2k_p2)).also {w2k_p1=it} + 4);
                                          w2k_Z_memory.i64_store(w2k_p0, w2k_Z_memory.i64_load32_s(w2k_p1));
                                          break@w2k_Bfunc;
                                        } while (false);
                                        w2k_Z_memory.i32_store(w2k_p2, (w2k_Z_memory.i32_load(w2k_p2)).also {w2k_p1=it} + 4);
                                        w2k_Z_memory.i64_store(w2k_p0, w2k_Z_memory.i64_load32_u(w2k_p1));
                                        break@w2k_Bfunc;
                                      } while (false);
                                      w2k_Z_memory.i32_store(w2k_p2, (w2k_Z_memory.i32_load(w2k_p2)).also {w2k_p1=it} + 4);
                                      w2k_Z_memory.i64_store(w2k_p0, w2k_Z_memory.i64_load32_s(w2k_p1));
                                      break@w2k_Bfunc;
                                    } while (false);
                                    w2k_Z_memory.i32_store(w2k_p2, (w2k_Z_memory.i32_load(w2k_p2)).also {w2k_p1=it} + 4);
                                    w2k_Z_memory.i64_store(w2k_p0, w2k_Z_memory.i64_load32_u(w2k_p1));
                                    break@w2k_Bfunc;
                                  } while (false);
                                  w2k_Z_memory.i32_store(w2k_p2, (w2k_Z_memory.i32_load(w2k_p2) + 7 and (-8)).also {w2k_p1=it} + 8);
                                  w2k_Z_memory.i64_store(w2k_p0, w2k_Z_memory.i64_load(w2k_p1));
                                  break@w2k_Bfunc;
                                } while (false);
                                w2k_Z_memory.i32_store(w2k_p2, (w2k_Z_memory.i32_load(w2k_p2)).also {w2k_p1=it} + 4);
                                w2k_Z_memory.i64_store(w2k_p0, w2k_Z_memory.i64_load16_s(w2k_p1));
                                break@w2k_Bfunc;
                              } while (false);
                              w2k_Z_memory.i32_store(w2k_p2, (w2k_Z_memory.i32_load(w2k_p2)).also {w2k_p1=it} + 4);
                              w2k_Z_memory.i64_store(w2k_p0, w2k_Z_memory.i64_load16_u(w2k_p1));
                              break@w2k_Bfunc;
                            } while (false);
                            w2k_Z_memory.i32_store(w2k_p2, (w2k_Z_memory.i32_load(w2k_p2)).also {w2k_p1=it} + 4);
                            w2k_Z_memory.i64_store(w2k_p0, w2k_Z_memory.i64_load8_s(w2k_p1));
                            break@w2k_Bfunc;
                          } while (false);
                          w2k_Z_memory.i32_store(w2k_p2, (w2k_Z_memory.i32_load(w2k_p2)).also {w2k_p1=it} + 4);
                          w2k_Z_memory.i64_store(w2k_p0, w2k_Z_memory.i64_load8_u(w2k_p1));
                          break@w2k_Bfunc;
                        } while (false);
                        w2k_Z_memory.i32_store(w2k_p2, (w2k_Z_memory.i32_load(w2k_p2) + 7 and (-8)).also {w2k_p1=it} + 8);
                        w2k_Z_memory.i64_store(w2k_p0, w2k_Z_memory.i64_load(w2k_p1));
                        break@w2k_Bfunc;
                      } while (false);
                      w2k_Z_memory.i32_store(w2k_p2, (w2k_Z_memory.i32_load(w2k_p2)).also {w2k_p1=it} + 4);
                      w2k_Z_memory.i64_store(w2k_p0, w2k_Z_memory.i64_load32_u(w2k_p1));
                      break@w2k_Bfunc;
                    } while (false);
                    w2k_Z_memory.i32_store(w2k_p2, (w2k_Z_memory.i32_load(w2k_p2) + 7 and (-8)).also {w2k_p1=it} + 8);
                    w2k_Z_memory.i64_store(w2k_p0, w2k_Z_memory.i64_load(w2k_p1));
                    break@w2k_Bfunc;
                  } while (false);
                  w2k_Z_memory.i32_store(w2k_p2, (w2k_Z_memory.i32_load(w2k_p2) + 7 and (-8)).also {w2k_p1=it} + 8);
                  w2k_Z_memory.i64_store(w2k_p0, w2k_Z_memory.i64_load(w2k_p1));
                  break@w2k_Bfunc;
                } while (false);
                w2k_Z_memory.i32_store(w2k_p2, (w2k_Z_memory.i32_load(w2k_p2)).also {w2k_p1=it} + 4);
                w2k_Z_memory.i64_store(w2k_p0, w2k_Z_memory.i64_load32_s(w2k_p1));
                break@w2k_Bfunc;
              } while (false);
              w2k_Z_memory.i32_store(w2k_p2, (w2k_Z_memory.i32_load(w2k_p2)).also {w2k_p1=it} + 4);
              w2k_Z_memory.i64_store(w2k_p0, w2k_Z_memory.i64_load32_u(w2k_p1));
              break@w2k_Bfunc;
            } while (false);
            w2k_Z_memory.i32_store(w2k_p2, (w2k_Z_memory.i32_load(w2k_p2) + 7 and (-8)).also {w2k_p1=it} + 8);
            w2k_Z_memory.f64_store(w2k_p0, w2k_Z_memory.f64_load(w2k_p1));
            break@w2k_Bfunc;
          } while (false);
          CALL_INDIRECT_2(w2k___indirect_function_table, w2k_p0, w2k_p2, w2k_p3);
        } while (false);
      } while (false);
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_fmt_x(w2k_p0: Long, w2k_p1: Int, w2k_p2: Int): Int{
    var w2k_p0 = w2k_p0;
    var w2k_p1 = w2k_p1;
    var w2k_p2 = w2k_p2;
    var w2k_l3: Int = 0
    try {
          var w2k_i0: Int = 0
      w2k_Bfunc@ do {
        w2k_B0@ do {
          if (((w2k_p0).isz()).inz()){
            break@w2k_B0;}
          w2k_L1@ while (true) {
            w2k_Z_memory.i32_store8((w2k_p1 + (-1)).also {w2k_p1=it}, w2k_Z_memory.i32_load8_u(((w2k_p0).toInt() and 15) + 58608) or w2k_p2);
            w2k_l3 = (java.lang.Long.compareUnsigned(w2k_p0, 15L)>0).btoInt();
            w2k_p0 = w2k_p0 ushr (4L).toInt();
            if ((w2k_l3).inz()){
              continue@w2k_L1;}
            break;
          }
        } while (false);
        w2k_i0 = w2k_p1;
      } while (false);
      return w2k_i0;
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_fmt_o(w2k_p0: Long, w2k_p1: Int): Int{
    var w2k_p0 = w2k_p0;
    var w2k_p1 = w2k_p1;
    var w2k_l2: Int = 0
    try {
          var w2k_i0: Int = 0
      w2k_Bfunc@ do {
        w2k_B0@ do {
          if (((w2k_p0).isz()).inz()){
            break@w2k_B0;}
          w2k_L1@ while (true) {
            w2k_Z_memory.i32_store8((w2k_p1 + (-1)).also {w2k_p1=it}, (w2k_p0).toInt() and 7 or 48);
            w2k_l2 = (java.lang.Long.compareUnsigned(w2k_p0, 7L)>0).btoInt();
            w2k_p0 = w2k_p0 ushr (3L).toInt();
            if ((w2k_l2).inz()){
              continue@w2k_L1;}
            break;
          }
        } while (false);
        w2k_i0 = w2k_p1;
      } while (false);
      return w2k_i0;
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_fmt_u(w2k_p0: Long, w2k_p1: Int): Int{
    var w2k_p0 = w2k_p0;
    var w2k_p1 = w2k_p1;
    var w2k_l3: Int = 0
    var w2k_l4: Int = 0
    var w2k_l5: Int = 0
    var w2k_l2: Long = 0
    try {
          var w2k_i0: Int = 0
      w2k_Bfunc@ do {
        w2k_B0@ do {
          w2k_B1@ do {
            if (((java.lang.Long.compareUnsigned(w2k_p0, 4294967296L)>=0).btoInt()).inz()){
              break@w2k_B1;}
            w2k_l2 = w2k_p0;
            break@w2k_B0;
          } while (false);
          w2k_L2@ while (true) {
            w2k_Z_memory.i32_store8((w2k_p1 + (-1)).also {w2k_p1=it}, (w2k_p0 - (wasm_rt_impl.DIV_U(w2k_p0, 10L)).also {w2k_l2=it} * 10L).toInt() or 48);
            w2k_l3 = (java.lang.Long.compareUnsigned(w2k_p0, 42949672959L)>0).btoInt();
            w2k_p0 = w2k_l2;
            if ((w2k_l3).inz()){
              continue@w2k_L2;}
            break;
          }
        } while (false);
        w2k_B3@ do {
          if (((((w2k_l2).toInt()).also {w2k_l3=it}).isz()).inz()){
            break@w2k_B3;}
          w2k_L4@ while (true) {
            w2k_Z_memory.i32_store8((w2k_p1 + (-1)).also {w2k_p1=it}, w2k_l3 - (wasm_rt_impl.DIV_U(w2k_l3, 10)).also {w2k_l4=it} * 10 or 48);
            w2k_l5 = (java.lang.Integer.compareUnsigned(w2k_l3, 9)>0).btoInt();
            w2k_l3 = w2k_l4;
            if ((w2k_l5).inz()){
              continue@w2k_L4;}
            break;
          }
        } while (false);
        w2k_i0 = w2k_p1;
      } while (false);
      return w2k_i0;
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_pad(w2k_p0: Int, w2k_p1: Int, w2k_p2: Int, w2k_p3: Int, w2k_p4: Int): Unit{
    var w2k_p0 = w2k_p0;
    var w2k_p1 = w2k_p1;
    var w2k_p2 = w2k_p2;
    var w2k_p3 = w2k_p3;
    var w2k_p4 = w2k_p4;
    var w2k_l5: Int = 0
    try {
      w2k_Bfunc@ do {
        w2k___stack_pointer = (w2k___stack_pointer - 256).also {w2k_l5=it};
        w2k_B0@ do {
          if (((w2k_p2 <= w2k_p3).btoInt()).inz()){
            break@w2k_B0;}
          if ((w2k_p4 and 73728).inz()){
            break@w2k_B0;}
          w2k___memset(w2k_l5, w2k_p1 and 255, select((w2k_p2 - w2k_p3).also {w2k_p3=it}, 256, ((java.lang.Integer.compareUnsigned(w2k_p3, 256)<0).btoInt()).also {w2k_p2=it}), );
          w2k_B1@ do {
            if ((w2k_p2).inz()){
              break@w2k_B1;}
            w2k_L2@ while (true) {
              w2k_out(w2k_p0, w2k_l5, 256, );
              if (((java.lang.Integer.compareUnsigned((w2k_p3 + (-256)).also {w2k_p3=it}, 255)>0).btoInt()).inz()){
                continue@w2k_L2;}
              break;
            }
          } while (false);
          w2k_out(w2k_p0, w2k_l5, w2k_p3, );
        } while (false);
        w2k___stack_pointer = w2k_l5 + 256;
      } while (false);
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_vfiprintf(w2k_p0: Int, w2k_p1: Int, w2k_p2: Int): Int{
    var w2k_p0 = w2k_p0;
    var w2k_p1 = w2k_p1;
    var w2k_p2 = w2k_p2;
    try {
          var w2k_i0: Int = 0
      w2k_Bfunc@ do {
        w2k_i0 = w2k___vfprintf_internal(w2k_p0, w2k_p1, w2k_p2, 0, 0, );
      } while (false);
      return w2k_i0;
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k___wasi_syscall_ret(w2k_p0: Int): Int{
    var w2k_p0 = w2k_p0;
    try {
          var w2k_i0: Int = 0
      w2k_Bfunc@ do {
        w2k_B0@ do {
          if ((w2k_p0).inz()){
            break@w2k_B0;}
          w2k_i0 = 0; break@w2k_Bfunc;
        } while (false);
        w2k_Z_memory.i32_store(w2k___errno_location(), w2k_p0);
        w2k_i0 = (-1);
      } while (false);
      return w2k_i0;
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_wcrtomb(w2k_p0: Int, w2k_p1: Int, w2k_p2: Int): Int{
    var w2k_p0 = w2k_p0;
    var w2k_p1 = w2k_p1;
    var w2k_p2 = w2k_p2;
    var w2k_l3: Int = 0
    try {
          var w2k_i0: Int = 0
      w2k_Bfunc@ do {
        w2k_l3 = 1;
        w2k_B0@ do {
          w2k_B1@ do {
            if (((w2k_p0).isz()).inz()){
              break@w2k_B1;}
            if (((java.lang.Integer.compareUnsigned(w2k_p1, 127)<=0).btoInt()).inz()){
              break@w2k_B0;}
            w2k_B2@ do {
              w2k_B3@ do {
                if ((w2k_Z_memory.i32_load(w2k_Z_memory.i32_load(w2k___get_tp(), 96))).inz()){
                  break@w2k_B3;}
                if (((w2k_p1 and (-128) == 57216).btoInt()).inz()){
                  break@w2k_B0;}
                w2k_Z_memory.i32_store(w2k___errno_location(), 25);
                break@w2k_B2;
              } while (false);
              w2k_B4@ do {
                if (((java.lang.Integer.compareUnsigned(w2k_p1, 2047)>0).btoInt()).inz()){
                  break@w2k_B4;}
                w2k_Z_memory.i32_store8(w2k_p0, 1, w2k_p1 and 63 or 128);
                w2k_Z_memory.i32_store8(w2k_p0, w2k_p1 ushr 6 or 192);
                w2k_i0 = 2; break@w2k_Bfunc;
              } while (false);
              w2k_B5@ do {
                w2k_B6@ do {
                  if (((java.lang.Integer.compareUnsigned(w2k_p1, 55296)<0).btoInt()).inz()){
                    break@w2k_B6;}
                  if (((w2k_p1 and (-8192) != 57344).btoInt()).inz()){
                    break@w2k_B5;}
                } while (false);
                w2k_Z_memory.i32_store8(w2k_p0, 2, w2k_p1 and 63 or 128);
                w2k_Z_memory.i32_store8(w2k_p0, w2k_p1 ushr 12 or 224);
                w2k_Z_memory.i32_store8(w2k_p0, 1, w2k_p1 ushr 6 and 63 or 128);
                w2k_i0 = 3; break@w2k_Bfunc;
              } while (false);
              w2k_B7@ do {
                if (((java.lang.Integer.compareUnsigned(w2k_p1 + (-65536), 1048575)>0).btoInt()).inz()){
                  break@w2k_B7;}
                w2k_Z_memory.i32_store8(w2k_p0, 3, w2k_p1 and 63 or 128);
                w2k_Z_memory.i32_store8(w2k_p0, w2k_p1 ushr 18 or 240);
                w2k_Z_memory.i32_store8(w2k_p0, 2, w2k_p1 ushr 6 and 63 or 128);
                w2k_Z_memory.i32_store8(w2k_p0, 1, w2k_p1 ushr 12 and 63 or 128);
                w2k_i0 = 4; break@w2k_Bfunc;
              } while (false);
              w2k_Z_memory.i32_store(w2k___errno_location(), 25);
            } while (false);
            w2k_l3 = (-1);
          } while (false);
          w2k_i0 = w2k_l3; break@w2k_Bfunc;
        } while (false);
        w2k_Z_memory.i32_store8(w2k_p0, w2k_p1);
        w2k_i0 = 1;
      } while (false);
      return w2k_i0;
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_wctomb(w2k_p0: Int, w2k_p1: Int): Int{
    var w2k_p0 = w2k_p0;
    var w2k_p1 = w2k_p1;
    try {
          var w2k_i0: Int = 0
      w2k_Bfunc@ do {
        w2k_B0@ do {
          if ((w2k_p0).inz()){
            break@w2k_B0;}
          w2k_i0 = 0; break@w2k_Bfunc;
        } while (false);
        w2k_i0 = w2k_wcrtomb(w2k_p0, w2k_p1, 0, );
      } while (false);
      return w2k_i0;
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_sbrk(w2k_p0: Int): Int{
    var w2k_p0 = w2k_p0;
    var w2k_l1: Int = 0
    var w2k_l2: Int = 0
    try {
          var w2k_i0: Int = 0
      w2k_Bfunc@ do {
        w2k_p0 = (w2k_Z_memory.i32_load(0, 59128)).also {w2k_l1=it} + (w2k_p0 + 7 and (-8)).also {w2k_l2=it};
        w2k_B0@ do {
          w2k_B1@ do {
            if (((w2k_l2).isz()).inz()){
              break@w2k_B1;}
            if (((java.lang.Integer.compareUnsigned(w2k_p0, w2k_l1)<=0).btoInt()).inz()){
              break@w2k_B0;}
          } while (false);
          w2k_B2@ do {
            w2k_i0 = w2k_p0;
            if (((java.lang.Integer.compareUnsigned(w2k_i0, w2k_emscripten_get_heap_size())<=0).btoInt()).inz()){
              break@w2k_B2;}
            if (((w2k_emscripten_resize_heap(w2k_p0, )).isz()).inz()){
              break@w2k_B0;}
          } while (false);
          w2k_Z_memory.i32_store(0, 59128, w2k_p0);
          w2k_i0 = w2k_l1; break@w2k_Bfunc;
        } while (false);
        w2k_Z_memory.i32_store(w2k___errno_location(), 48);
        w2k_i0 = (-1);
      } while (false);
      return w2k_i0;
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_dlmalloc(w2k_p0: Int): Int{
    var w2k_p0 = w2k_p0;
    var w2k_l1: Int = 0
    var w2k_l2: Int = 0
    var w2k_l3: Int = 0
    var w2k_l4: Int = 0
    var w2k_l5: Int = 0
    var w2k_l6: Int = 0
    var w2k_l7: Int = 0
    var w2k_l8: Int = 0
    var w2k_l9: Int = 0
    var w2k_l10: Int = 0
    var w2k_l11: Int = 0
    try {
          var w2k_i0: Int = 0
      w2k_Bfunc@ do {
        w2k___stack_pointer = (w2k___stack_pointer - 16).also {w2k_l1=it};
        w2k_B0@ do {
          w2k_B1@ do {
            w2k_B2@ do {
              w2k_B3@ do {
                w2k_B4@ do {
                  w2k_B5@ do {
                    w2k_B6@ do {
                      w2k_B7@ do {
                        w2k_B8@ do {
                          w2k_B9@ do {
                            w2k_B10@ do {
                              w2k_B11@ do {
                                w2k_B12@ do {
                                  w2k_B13@ do {
                                    w2k_B14@ do {
                                      if (((java.lang.Integer.compareUnsigned(w2k_p0, 244)>0).btoInt()).inz()){
                                        break@w2k_B14;}
                                      w2k_B15@ do {
                                        if (((((w2k_Z_memory.i32_load(0, 62920)).also {w2k_l2=it} ushr ((select(16, w2k_p0 + 11 and (-8), (java.lang.Integer.compareUnsigned(w2k_p0, 11)<0).btoInt())).also {w2k_l3=it} ushr 3).also {w2k_l4=it}).also {w2k_p0=it} and 3).isz()).inz()){
                                          break@w2k_B15;}
                                        w2k_B16@ do {
                                          w2k_B17@ do {
                                            if (((((((w2k_p0 xor (-1) and 1) + w2k_l4).also {w2k_l5=it} shl 3).also {w2k_l4=it} + 62960).also {w2k_p0=it} != (w2k_Z_memory.i32_load((w2k_Z_memory.i32_load(w2k_l4 + 62968)).also {w2k_l4=it}, 8)).also {w2k_l3=it}).btoInt()).inz()){
                                              break@w2k_B17;}
                                            w2k_Z_memory.i32_store(0, 62920, w2k_l2 and wasm_rt_impl.I32_ROTL((-2), w2k_l5));
                                            break@w2k_B16;
                                          } while (false);
                                          w2k_Z_memory.i32_store(w2k_l3, 12, w2k_p0);
                                          w2k_Z_memory.i32_store(w2k_p0, 8, w2k_l3);
                                        } while (false);
                                        w2k_p0 = w2k_l4 + 8;
                                        w2k_Z_memory.i32_store(w2k_l4, 4, (w2k_l5 shl 3).also {w2k_l5=it} or 3);
                                        w2k_Z_memory.i32_store((w2k_l4 + w2k_l5).also {w2k_l4=it}, 4, w2k_Z_memory.i32_load(w2k_l4, 4) or 1);
                                        break@w2k_B0;
                                      } while (false);
                                      if (((java.lang.Integer.compareUnsigned(w2k_l3, (w2k_Z_memory.i32_load(0, 62928)).also {w2k_l6=it})<=0).btoInt()).inz()){
                                        break@w2k_B13;}
                                      w2k_B18@ do {
                                        if (((w2k_p0).isz()).inz()){
                                          break@w2k_B18;}
                                        w2k_B19@ do {
                                          w2k_B20@ do {
                                            if (((((((w2k_p0 shl w2k_l4 and ((2 shl w2k_l4).also {w2k_p0=it} or 0 - w2k_p0)).countTrailingZeroBits()).also {w2k_l4=it} shl 3).also {w2k_p0=it} + 62960).also {w2k_l5=it} != (w2k_Z_memory.i32_load((w2k_Z_memory.i32_load(w2k_p0 + 62968)).also {w2k_p0=it}, 8)).also {w2k_l7=it}).btoInt()).inz()){
                                              break@w2k_B20;}
                                            w2k_Z_memory.i32_store(0, 62920, (w2k_l2 and wasm_rt_impl.I32_ROTL((-2), w2k_l4)).also {w2k_l2=it});
                                            break@w2k_B19;
                                          } while (false);
                                          w2k_Z_memory.i32_store(w2k_l7, 12, w2k_l5);
                                          w2k_Z_memory.i32_store(w2k_l5, 8, w2k_l7);
                                        } while (false);
                                        w2k_Z_memory.i32_store(w2k_p0, 4, w2k_l3 or 3);
                                        w2k_Z_memory.i32_store((w2k_p0 + w2k_l3).also {w2k_l7=it}, 4, ((w2k_l4 shl 3).also {w2k_l4=it} - w2k_l3).also {w2k_l5=it} or 1);
                                        w2k_Z_memory.i32_store(w2k_p0 + w2k_l4, w2k_l5);
                                        w2k_B21@ do {
                                          if (((w2k_l6).isz()).inz()){
                                            break@w2k_B21;}
                                          w2k_l3 = (w2k_l6 and (-8)) + 62960;
                                          w2k_l4 = w2k_Z_memory.i32_load(0, 62940);
                                          w2k_B22@ do {
                                            w2k_B23@ do {
                                              if ((w2k_l2 and (1 shl (w2k_l6 ushr 3)).also {w2k_l8=it}).inz()){
                                                break@w2k_B23;}
                                              w2k_Z_memory.i32_store(0, 62920, w2k_l2 or w2k_l8);
                                              w2k_l8 = w2k_l3;
                                              break@w2k_B22;
                                            } while (false);
                                            w2k_l8 = w2k_Z_memory.i32_load(w2k_l3, 8);
                                          } while (false);
                                          w2k_Z_memory.i32_store(w2k_l3, 8, w2k_l4);
                                          w2k_Z_memory.i32_store(w2k_l8, 12, w2k_l4);
                                          w2k_Z_memory.i32_store(w2k_l4, 12, w2k_l3);
                                          w2k_Z_memory.i32_store(w2k_l4, 8, w2k_l8);
                                        } while (false);
                                        w2k_p0 = w2k_p0 + 8;
                                        w2k_Z_memory.i32_store(0, 62940, w2k_l7);
                                        w2k_Z_memory.i32_store(0, 62928, w2k_l5);
                                        break@w2k_B0;
                                      } while (false);
                                      if ((((w2k_Z_memory.i32_load(0, 62924)).also {w2k_l9=it}).isz()).inz()){
                                        break@w2k_B13;}
                                      w2k_l4 = (w2k_Z_memory.i32_load((w2k_Z_memory.i32_load(((w2k_l9).countTrailingZeroBits() shl 2) + 63224)).also {w2k_l7=it}, 4) and (-8)) - w2k_l3;
                                      w2k_l5 = w2k_l7;
                                      w2k_B24@ do {
                                        w2k_L25@ while (true) {
                                          w2k_B26@ do {
                                            if (((w2k_Z_memory.i32_load(w2k_l5, 16)).also {w2k_p0=it}).inz()){
                                              break@w2k_B26;}
                                            if ((((w2k_Z_memory.i32_load(w2k_l5 + 20)).also {w2k_p0=it}).isz()).inz()){
                                              break@w2k_B24;}
                                          } while (false);
                                          w2k_l4 = select(((w2k_Z_memory.i32_load(w2k_p0, 4) and (-8)) - w2k_l3).also {w2k_l5=it}, w2k_l4, ((java.lang.Integer.compareUnsigned(w2k_l5, w2k_l4)<0).btoInt()).also {w2k_l5=it});
                                          w2k_l7 = select(w2k_p0, w2k_l7, w2k_l5);
                                          w2k_l5 = w2k_p0;
                                          continue@w2k_L25;
                                          break;
                                        }
                                      } while (false);
                                      w2k_l10 = w2k_Z_memory.i32_load(w2k_l7, 24);
                                      w2k_B27@ do {
                                        if ((((w2k_Z_memory.i32_load(w2k_l7, 12)).also {w2k_l8=it} == w2k_l7).btoInt()).inz()){
                                          break@w2k_B27;}
                                        (java.lang.Integer.compareUnsigned((w2k_Z_memory.i32_load(w2k_l7, 8)).also {w2k_p0=it}, w2k_Z_memory.i32_load(0, 62936))<0).btoInt();
                                        w2k_Z_memory.i32_store(w2k_p0, 12, w2k_l8);
                                        w2k_Z_memory.i32_store(w2k_l8, 8, w2k_p0);
                                        break@w2k_B1;
                                      } while (false);
                                      w2k_B28@ do {
                                        if (((w2k_Z_memory.i32_load((w2k_l7 + 20).also {w2k_l5=it})).also {w2k_p0=it}).inz()){
                                          break@w2k_B28;}
                                        if ((((w2k_Z_memory.i32_load(w2k_l7, 16)).also {w2k_p0=it}).isz()).inz()){
                                          break@w2k_B12;}
                                        w2k_l5 = w2k_l7 + 16;
                                      } while (false);
                                      w2k_L29@ while (true) {
                                        w2k_l11 = w2k_l5;
                                        if (((w2k_Z_memory.i32_load(((w2k_p0).also {w2k_l8=it} + 20).also {w2k_l5=it})).also {w2k_p0=it}).inz()){
                                          continue@w2k_L29;}
                                        w2k_l5 = w2k_l8 + 16;
                                        if (((w2k_Z_memory.i32_load(w2k_l8, 16)).also {w2k_p0=it}).inz()){
                                          continue@w2k_L29;}
                                        break;
                                      }
                                      w2k_Z_memory.i32_store(w2k_l11, 0);
                                      break@w2k_B1;
                                    } while (false);
                                    w2k_l3 = (-1);
                                    if (((java.lang.Integer.compareUnsigned(w2k_p0, (-65))>0).btoInt()).inz()){
                                      break@w2k_B13;}
                                    w2k_l3 = (w2k_p0 + 11).also {w2k_p0=it} and (-8);
                                    if ((((w2k_Z_memory.i32_load(0, 62924)).also {w2k_l6=it}).isz()).inz()){
                                      break@w2k_B13;}
                                    w2k_l11 = 0;
                                    w2k_B30@ do {
                                      if (((java.lang.Integer.compareUnsigned(w2k_l3, 256)<0).btoInt()).inz()){
                                        break@w2k_B30;}
                                      w2k_l11 = 31;
                                      if (((java.lang.Integer.compareUnsigned(w2k_l3, 16777215)>0).btoInt()).inz()){
                                        break@w2k_B30;}
                                      w2k_l11 = (w2k_l3 ushr 38 - ((w2k_p0 ushr 8).countLeadingZeroBits()).also {w2k_p0=it} and 1) - (w2k_p0 shl 1) + 62;
                                    } while (false);
                                    w2k_l4 = 0 - w2k_l3;
                                    w2k_B31@ do {
                                      w2k_B32@ do {
                                        w2k_B33@ do {
                                          w2k_B34@ do {
                                            if (((w2k_Z_memory.i32_load((w2k_l11 shl 2) + 63224)).also {w2k_l5=it}).inz()){
                                              break@w2k_B34;}
                                            w2k_p0 = 0;
                                            w2k_l8 = 0;
                                            break@w2k_B33;
                                          } while (false);
                                          w2k_p0 = 0;
                                          w2k_l7 = w2k_l3 shl select(0, 25 - (w2k_l11 ushr 1), (w2k_l11 == 31).btoInt());
                                          w2k_l8 = 0;
                                          w2k_L35@ while (true) {
                                            w2k_B36@ do {
                                              if (((java.lang.Integer.compareUnsigned(((w2k_Z_memory.i32_load(w2k_l5, 4) and (-8)) - w2k_l3).also {w2k_l2=it}, w2k_l4)>=0).btoInt()).inz()){
                                                break@w2k_B36;}
                                              w2k_l4 = w2k_l2;
                                              w2k_l8 = w2k_l5;
                                              if ((w2k_l2).inz()){
                                                break@w2k_B36;}
                                              w2k_l4 = 0;
                                              w2k_l8 = w2k_l5;
                                              w2k_p0 = w2k_l5;
                                              break@w2k_B32;
                                            } while (false);
                                            w2k_p0 = select(select(w2k_p0, (w2k_Z_memory.i32_load(w2k_l5 + 20)).also {w2k_l2=it}, (w2k_l2 == (w2k_Z_memory.i32_load(w2k_l5 + (w2k_l7 ushr 29 and 4) + 16)).also {w2k_l5=it}).btoInt()), w2k_p0, w2k_l2);
                                            w2k_l7 = w2k_l7 shl 1;
                                            if ((w2k_l5).inz()){
                                              continue@w2k_L35;}
                                            break;
                                          }
                                        } while (false);
                                        w2k_B37@ do {
                                          if ((w2k_p0 or w2k_l8).inz()){
                                            break@w2k_B37;}
                                          w2k_l8 = 0;
                                          if (((((2 shl w2k_l11).also {w2k_p0=it} or 0 - w2k_p0 and w2k_l6).also {w2k_p0=it}).isz()).inz()){
                                            break@w2k_B13;}
                                          w2k_p0 = w2k_Z_memory.i32_load(((w2k_p0).countTrailingZeroBits() shl 2) + 63224);
                                        } while (false);
                                        if (((w2k_p0).isz()).inz()){
                                          break@w2k_B31;}
                                      } while (false);
                                      w2k_L38@ while (true) {
                                        w2k_l7 = (java.lang.Integer.compareUnsigned(((w2k_Z_memory.i32_load(w2k_p0, 4) and (-8)) - w2k_l3).also {w2k_l2=it}, w2k_l4)<0).btoInt();
                                        w2k_B39@ do {
                                          if (((w2k_Z_memory.i32_load(w2k_p0, 16)).also {w2k_l5=it}).inz()){
                                            break@w2k_B39;}
                                          w2k_l5 = w2k_Z_memory.i32_load(w2k_p0 + 20);
                                        } while (false);
                                        w2k_l4 = select(w2k_l2, w2k_l4, w2k_l7);
                                        w2k_l8 = select(w2k_p0, w2k_l8, w2k_l7);
                                        w2k_p0 = w2k_l5;
                                        if ((w2k_l5).inz()){
                                          continue@w2k_L38;}
                                        break;
                                      }
                                    } while (false);
                                    if (((w2k_l8).isz()).inz()){
                                      break@w2k_B13;}
                                    if (((java.lang.Integer.compareUnsigned(w2k_l4, w2k_Z_memory.i32_load(0, 62928) - w2k_l3)>=0).btoInt()).inz()){
                                      break@w2k_B13;}
                                    w2k_l11 = w2k_Z_memory.i32_load(w2k_l8, 24);
                                    w2k_B40@ do {
                                      if ((((w2k_Z_memory.i32_load(w2k_l8, 12)).also {w2k_l7=it} == w2k_l8).btoInt()).inz()){
                                        break@w2k_B40;}
                                      (java.lang.Integer.compareUnsigned((w2k_Z_memory.i32_load(w2k_l8, 8)).also {w2k_p0=it}, w2k_Z_memory.i32_load(0, 62936))<0).btoInt();
                                      w2k_Z_memory.i32_store(w2k_p0, 12, w2k_l7);
                                      w2k_Z_memory.i32_store(w2k_l7, 8, w2k_p0);
                                      break@w2k_B2;
                                    } while (false);
                                    w2k_B41@ do {
                                      if (((w2k_Z_memory.i32_load((w2k_l8 + 20).also {w2k_l5=it})).also {w2k_p0=it}).inz()){
                                        break@w2k_B41;}
                                      if ((((w2k_Z_memory.i32_load(w2k_l8, 16)).also {w2k_p0=it}).isz()).inz()){
                                        break@w2k_B11;}
                                      w2k_l5 = w2k_l8 + 16;
                                    } while (false);
                                    w2k_L42@ while (true) {
                                      w2k_l2 = w2k_l5;
                                      if (((w2k_Z_memory.i32_load(((w2k_p0).also {w2k_l7=it} + 20).also {w2k_l5=it})).also {w2k_p0=it}).inz()){
                                        continue@w2k_L42;}
                                      w2k_l5 = w2k_l7 + 16;
                                      if (((w2k_Z_memory.i32_load(w2k_l7, 16)).also {w2k_p0=it}).inz()){
                                        continue@w2k_L42;}
                                      break;
                                    }
                                    w2k_Z_memory.i32_store(w2k_l2, 0);
                                    break@w2k_B2;
                                  } while (false);
                                  w2k_B43@ do {
                                    if (((java.lang.Integer.compareUnsigned((w2k_Z_memory.i32_load(0, 62928)).also {w2k_p0=it}, w2k_l3)<0).btoInt()).inz()){
                                      break@w2k_B43;}
                                    w2k_l4 = w2k_Z_memory.i32_load(0, 62940);
                                    w2k_B44@ do {
                                      w2k_B45@ do {
                                        if (((java.lang.Integer.compareUnsigned((w2k_p0 - w2k_l3).also {w2k_l5=it}, 16)<0).btoInt()).inz()){
                                          break@w2k_B45;}
                                        w2k_Z_memory.i32_store((w2k_l4 + w2k_l3).also {w2k_l7=it}, 4, w2k_l5 or 1);
                                        w2k_Z_memory.i32_store(w2k_l4 + w2k_p0, w2k_l5);
                                        w2k_Z_memory.i32_store(w2k_l4, 4, w2k_l3 or 3);
                                        break@w2k_B44;
                                      } while (false);
                                      w2k_Z_memory.i32_store(w2k_l4, 4, w2k_p0 or 3);
                                      w2k_Z_memory.i32_store((w2k_l4 + w2k_p0).also {w2k_p0=it}, 4, w2k_Z_memory.i32_load(w2k_p0, 4) or 1);
                                      w2k_l7 = 0;
                                      w2k_l5 = 0;
                                    } while (false);
                                    w2k_Z_memory.i32_store(0, 62928, w2k_l5);
                                    w2k_Z_memory.i32_store(0, 62940, w2k_l7);
                                    w2k_p0 = w2k_l4 + 8;
                                    break@w2k_B0;
                                  } while (false);
                                  w2k_B46@ do {
                                    if (((java.lang.Integer.compareUnsigned((w2k_Z_memory.i32_load(0, 62932)).also {w2k_l7=it}, w2k_l3)<=0).btoInt()).inz()){
                                      break@w2k_B46;}
                                    w2k_Z_memory.i32_store(0, 62932, (w2k_l7 - w2k_l3).also {w2k_l4=it});
                                    w2k_Z_memory.i32_store(0, 62944, ((w2k_Z_memory.i32_load(0, 62944)).also {w2k_p0=it} + w2k_l3).also {w2k_l5=it});
                                    w2k_Z_memory.i32_store(w2k_l5, 4, w2k_l4 or 1);
                                    w2k_Z_memory.i32_store(w2k_p0, 4, w2k_l3 or 3);
                                    w2k_p0 = w2k_p0 + 8;
                                    break@w2k_B0;
                                  } while (false);
                                  w2k_B47@ do {
                                    w2k_B48@ do {
                                      if (((w2k_Z_memory.i32_load(0, 63392)).isz()).inz()){
                                        break@w2k_B48;}
                                      w2k_l4 = w2k_Z_memory.i32_load(0, 63400);
                                      break@w2k_B47;
                                    } while (false);
                                    w2k_Z_memory.i64_store(0, 63404, -1L);
                                    w2k_Z_memory.i64_store(0, 63396, 17592186048512L);
                                    w2k_Z_memory.i32_store(0, 63392, w2k_l1 + 12 and (-16) xor 1431655768);
                                    w2k_Z_memory.i32_store(0, 63412, 0);
                                    w2k_Z_memory.i32_store(0, 63364, 0);
                                    w2k_l4 = 4096;
                                  } while (false);
                                  w2k_p0 = 0;
                                  if (((java.lang.Integer.compareUnsigned(((w2k_l4 + (w2k_l3 + 47).also {w2k_l6=it}).also {w2k_l2=it} and (0 - w2k_l4).also {w2k_l11=it}).also {w2k_l8=it}, w2k_l3)<=0).btoInt()).inz()){
                                    break@w2k_B0;}
                                  w2k_p0 = 0;
                                  w2k_B49@ do {
                                    if ((((w2k_Z_memory.i32_load(0, 63360)).also {w2k_l4=it}).isz()).inz()){
                                      break@w2k_B49;}
                                    if (((java.lang.Integer.compareUnsigned(((w2k_Z_memory.i32_load(0, 63352)).also {w2k_l5=it} + w2k_l8).also {w2k_l10=it}, w2k_l5)<=0).btoInt()).inz()){
                                      break@w2k_B0;}
                                    if (((java.lang.Integer.compareUnsigned(w2k_l10, w2k_l4)>0).btoInt()).inz()){
                                      break@w2k_B0;}
                                  } while (false);
                                  w2k_B50@ do {
                                    w2k_B51@ do {
                                      if ((w2k_Z_memory.i32_load8_u(0, 63364) and 4).inz()){
                                        break@w2k_B51;}
                                      w2k_B52@ do {
                                        w2k_B53@ do {
                                          w2k_B54@ do {
                                            w2k_B55@ do {
                                              w2k_B56@ do {
                                                if ((((w2k_Z_memory.i32_load(0, 62944)).also {w2k_l4=it}).isz()).inz()){
                                                  break@w2k_B56;}
                                                w2k_p0 = 63368;
                                                w2k_L57@ while (true) {
                                                  w2k_B58@ do {
                                                    if (((java.lang.Integer.compareUnsigned((w2k_Z_memory.i32_load(w2k_p0)).also {w2k_l5=it}, w2k_l4)>0).btoInt()).inz()){
                                                      break@w2k_B58;}
                                                    if (((java.lang.Integer.compareUnsigned(w2k_l5 + w2k_Z_memory.i32_load(w2k_p0, 4), w2k_l4)>0).btoInt()).inz()){
                                                      break@w2k_B55;}
                                                  } while (false);
                                                  if (((w2k_Z_memory.i32_load(w2k_p0, 8)).also {w2k_p0=it}).inz()){
                                                    continue@w2k_L57;}
                                                  break;
                                                }
                                              } while (false);
                                              if ((((w2k_sbrk(0, )).also {w2k_l7=it} == (-1)).btoInt()).inz()){
                                                break@w2k_B52;}
                                              w2k_l2 = w2k_l8;
                                              w2k_B59@ do {
                                                if (((((w2k_Z_memory.i32_load(0, 63396)).also {w2k_p0=it} + (-1)).also {w2k_l4=it} and w2k_l7).isz()).inz()){
                                                  break@w2k_B59;}
                                                w2k_l2 = w2k_l8 - w2k_l7 + (w2k_l4 + w2k_l7 and 0 - w2k_p0);
                                              } while (false);
                                              if (((java.lang.Integer.compareUnsigned(w2k_l2, w2k_l3)<=0).btoInt()).inz()){
                                                break@w2k_B52;}
                                              w2k_B60@ do {
                                                if ((((w2k_Z_memory.i32_load(0, 63360)).also {w2k_p0=it}).isz()).inz()){
                                                  break@w2k_B60;}
                                                if (((java.lang.Integer.compareUnsigned(((w2k_Z_memory.i32_load(0, 63352)).also {w2k_l4=it} + w2k_l2).also {w2k_l5=it}, w2k_l4)<=0).btoInt()).inz()){
                                                  break@w2k_B52;}
                                                if (((java.lang.Integer.compareUnsigned(w2k_l5, w2k_p0)>0).btoInt()).inz()){
                                                  break@w2k_B52;}
                                              } while (false);
                                              if ((((w2k_sbrk(w2k_l2, )).also {w2k_p0=it} != w2k_l7).btoInt()).inz()){
                                                break@w2k_B54;}
                                              break@w2k_B50;
                                            } while (false);
                                            if ((((w2k_sbrk((w2k_l2 - w2k_l7 and w2k_l11).also {w2k_l2=it}, )).also {w2k_l7=it} == w2k_Z_memory.i32_load(w2k_p0) + w2k_Z_memory.i32_load(w2k_p0, 4)).btoInt()).inz()){
                                              break@w2k_B53;}
                                            w2k_p0 = w2k_l7;
                                          } while (false);
                                          if (((w2k_p0 == (-1)).btoInt()).inz()){
                                            break@w2k_B52;}
                                          w2k_B61@ do {
                                            if (((java.lang.Integer.compareUnsigned(w2k_l2, w2k_l3 + 48)<0).btoInt()).inz()){
                                              break@w2k_B61;}
                                            w2k_l7 = w2k_p0;
                                            break@w2k_B50;
                                          } while (false);
                                          if (((w2k_sbrk((w2k_l6 - w2k_l2 + (w2k_Z_memory.i32_load(0, 63400)).also {w2k_l4=it} and 0 - w2k_l4).also {w2k_l4=it}, ) == (-1)).btoInt()).inz()){
                                            break@w2k_B52;}
                                          w2k_l2 = w2k_l4 + w2k_l2;
                                          w2k_l7 = w2k_p0;
                                          break@w2k_B50;
                                        } while (false);
                                        if (((w2k_l7 != (-1)).btoInt()).inz()){
                                          break@w2k_B50;}
                                      } while (false);
                                      w2k_Z_memory.i32_store(0, 63364, w2k_Z_memory.i32_load(0, 63364) or 4);
                                    } while (false);
                                    w2k_l7 = w2k_sbrk(w2k_l8, );
                                    w2k_p0 = w2k_sbrk(0, );
                                    if (((w2k_l7 == (-1)).btoInt()).inz()){
                                      break@w2k_B8;}
                                    if (((w2k_p0 == (-1)).btoInt()).inz()){
                                      break@w2k_B8;}
                                    if (((java.lang.Integer.compareUnsigned(w2k_l7, w2k_p0)>=0).btoInt()).inz()){
                                      break@w2k_B8;}
                                    if (((java.lang.Integer.compareUnsigned((w2k_p0 - w2k_l7).also {w2k_l2=it}, w2k_l3 + 40)<=0).btoInt()).inz()){
                                      break@w2k_B8;}
                                  } while (false);
                                  w2k_Z_memory.i32_store(0, 63352, (w2k_Z_memory.i32_load(0, 63352) + w2k_l2).also {w2k_p0=it});
                                  w2k_B62@ do {
                                    if (((java.lang.Integer.compareUnsigned(w2k_p0, w2k_Z_memory.i32_load(0, 63356))<=0).btoInt()).inz()){
                                      break@w2k_B62;}
                                    w2k_Z_memory.i32_store(0, 63356, w2k_p0);
                                  } while (false);
                                  w2k_B63@ do {
                                    w2k_B64@ do {
                                      if ((((w2k_Z_memory.i32_load(0, 62944)).also {w2k_l4=it}).isz()).inz()){
                                        break@w2k_B64;}
                                      w2k_p0 = 63368;
                                      w2k_L65@ while (true) {
                                        if (((w2k_l7 == (w2k_Z_memory.i32_load(w2k_p0)).also {w2k_l5=it} + (w2k_Z_memory.i32_load(w2k_p0, 4)).also {w2k_l8=it}).btoInt()).inz()){
                                          break@w2k_B63;}
                                        if (((w2k_Z_memory.i32_load(w2k_p0, 8)).also {w2k_p0=it}).inz()){
                                          continue@w2k_L65;}
                                        break@w2k_B10;
                                        break;
                                      }
                                    } while (false);
                                    w2k_B66@ do {
                                      w2k_B67@ do {
                                        if ((((w2k_Z_memory.i32_load(0, 62936)).also {w2k_p0=it}).isz()).inz()){
                                          break@w2k_B67;}
                                        if (((java.lang.Integer.compareUnsigned(w2k_l7, w2k_p0)>=0).btoInt()).inz()){
                                          break@w2k_B66;}
                                      } while (false);
                                      w2k_Z_memory.i32_store(0, 62936, w2k_l7);
                                    } while (false);
                                    w2k_p0 = 0;
                                    w2k_Z_memory.i32_store(0, 63372, w2k_l2);
                                    w2k_Z_memory.i32_store(0, 63368, w2k_l7);
                                    w2k_Z_memory.i32_store(0, 62952, (-1));
                                    w2k_Z_memory.i32_store(0, 62956, w2k_Z_memory.i32_load(0, 63392));
                                    w2k_Z_memory.i32_store(0, 63380, 0);
                                    w2k_L68@ while (true) {
                                      w2k_Z_memory.i32_store((w2k_p0 shl 3).also {w2k_l4=it} + 62968, (w2k_l4 + 62960).also {w2k_l5=it});
                                      w2k_Z_memory.i32_store(w2k_l4 + 62972, w2k_l5);
                                      if ((((w2k_p0 + 1).also {w2k_p0=it} != 32).btoInt()).inz()){
                                        continue@w2k_L68;}
                                      break;
                                    }
                                    w2k_Z_memory.i32_store(0, 62932, ((w2k_l2 + (-40)).also {w2k_p0=it} - ((-8) - w2k_l7 and 7).also {w2k_l4=it}).also {w2k_l5=it});
                                    w2k_Z_memory.i32_store(0, 62944, (w2k_l7 + w2k_l4).also {w2k_l4=it});
                                    w2k_Z_memory.i32_store(w2k_l4, 4, w2k_l5 or 1);
                                    w2k_Z_memory.i32_store(w2k_l7 + w2k_p0, 4, 40);
                                    w2k_Z_memory.i32_store(0, 62948, w2k_Z_memory.i32_load(0, 63408));
                                    break@w2k_B9;
                                  } while (false);
                                  if (((java.lang.Integer.compareUnsigned(w2k_l4, w2k_l7)>=0).btoInt()).inz()){
                                    break@w2k_B10;}
                                  if (((java.lang.Integer.compareUnsigned(w2k_l4, w2k_l5)<0).btoInt()).inz()){
                                    break@w2k_B10;}
                                  if ((w2k_Z_memory.i32_load(w2k_p0, 12) and 8).inz()){
                                    break@w2k_B10;}
                                  w2k_Z_memory.i32_store(w2k_p0, 4, w2k_l8 + w2k_l2);
                                  w2k_Z_memory.i32_store(0, 62944, (w2k_l4 + ((-8) - w2k_l4 and 7).also {w2k_p0=it}).also {w2k_l5=it});
                                  w2k_Z_memory.i32_store(0, 62932, ((w2k_Z_memory.i32_load(0, 62932) + w2k_l2).also {w2k_l7=it} - w2k_p0).also {w2k_p0=it});
                                  w2k_Z_memory.i32_store(w2k_l5, 4, w2k_p0 or 1);
                                  w2k_Z_memory.i32_store(w2k_l4 + w2k_l7, 4, 40);
                                  w2k_Z_memory.i32_store(0, 62948, w2k_Z_memory.i32_load(0, 63408));
                                  break@w2k_B9;
                                } while (false);
                                w2k_l8 = 0;
                                break@w2k_B1;
                              } while (false);
                              w2k_l7 = 0;
                              break@w2k_B2;
                            } while (false);
                            w2k_B69@ do {
                              if (((java.lang.Integer.compareUnsigned(w2k_l7, (w2k_Z_memory.i32_load(0, 62936)).also {w2k_l8=it})>=0).btoInt()).inz()){
                                break@w2k_B69;}
                              w2k_Z_memory.i32_store(0, 62936, w2k_l7);
                              w2k_l8 = w2k_l7;
                            } while (false);
                            w2k_l5 = w2k_l7 + w2k_l2;
                            w2k_p0 = 63368;
                            w2k_B70@ do {
                              w2k_B71@ do {
                                w2k_B72@ do {
                                  w2k_B73@ do {
                                    w2k_L74@ while (true) {
                                      if (((w2k_Z_memory.i32_load(w2k_p0) == w2k_l5).btoInt()).inz()){
                                        break@w2k_B73;}
                                      if (((w2k_Z_memory.i32_load(w2k_p0, 8)).also {w2k_p0=it}).inz()){
                                        continue@w2k_L74;}
                                      break@w2k_B72;
                                      break;
                                    }
                                  } while (false);
                                  if (((w2k_Z_memory.i32_load8_u(w2k_p0, 12) and 8).isz()).inz()){
                                    break@w2k_B71;}
                                } while (false);
                                w2k_p0 = 63368;
                                w2k_L75@ while (true) {
                                  w2k_B76@ do {
                                    if (((java.lang.Integer.compareUnsigned((w2k_Z_memory.i32_load(w2k_p0)).also {w2k_l5=it}, w2k_l4)>0).btoInt()).inz()){
                                      break@w2k_B76;}
                                    if (((java.lang.Integer.compareUnsigned((w2k_l5 + w2k_Z_memory.i32_load(w2k_p0, 4)).also {w2k_l5=it}, w2k_l4)>0).btoInt()).inz()){
                                      break@w2k_B70;}
                                  } while (false);
                                  w2k_p0 = w2k_Z_memory.i32_load(w2k_p0, 8);
                                  continue@w2k_L75;
                                  break;
                                }
                              } while (false);
                              w2k_Z_memory.i32_store(w2k_p0, w2k_l7);
                              w2k_Z_memory.i32_store(w2k_p0, 4, w2k_Z_memory.i32_load(w2k_p0, 4) + w2k_l2);
                              w2k_Z_memory.i32_store((w2k_l7 + ((-8) - w2k_l7 and 7)).also {w2k_l11=it}, 4, w2k_l3 or 3);
                              w2k_p0 = (w2k_l5 + ((-8) - w2k_l5 and 7)).also {w2k_l2=it} - (w2k_l11 + w2k_l3).also {w2k_l3=it};
                              w2k_B77@ do {
                                if (((w2k_l2 != w2k_l4).btoInt()).inz()){
                                  break@w2k_B77;}
                                w2k_Z_memory.i32_store(0, 62944, w2k_l3);
                                w2k_Z_memory.i32_store(0, 62932, (w2k_Z_memory.i32_load(0, 62932) + w2k_p0).also {w2k_p0=it});
                                w2k_Z_memory.i32_store(w2k_l3, 4, w2k_p0 or 1);
                                break@w2k_B3;
                              } while (false);
                              w2k_B78@ do {
                                if (((w2k_l2 != w2k_Z_memory.i32_load(0, 62940)).btoInt()).inz()){
                                  break@w2k_B78;}
                                w2k_Z_memory.i32_store(0, 62940, w2k_l3);
                                w2k_Z_memory.i32_store(0, 62928, (w2k_Z_memory.i32_load(0, 62928) + w2k_p0).also {w2k_p0=it});
                                w2k_Z_memory.i32_store(w2k_l3, 4, w2k_p0 or 1);
                                w2k_Z_memory.i32_store(w2k_l3 + w2k_p0, w2k_p0);
                                break@w2k_B3;
                              } while (false);
                              if ((((w2k_Z_memory.i32_load(w2k_l2, 4)).also {w2k_l4=it} and 3 != 1).btoInt()).inz()){
                                break@w2k_B4;}
                              w2k_l6 = w2k_l4 and (-8);
                              w2k_B79@ do {
                                if (((java.lang.Integer.compareUnsigned(w2k_l4, 255)>0).btoInt()).inz()){
                                  break@w2k_B79;}
                                ((w2k_Z_memory.i32_load(w2k_l2, 8)).also {w2k_l5=it} == (((w2k_l4 ushr 3).also {w2k_l8=it} shl 3) + 62960).also {w2k_l7=it}).btoInt();
                                w2k_B80@ do {
                                  if ((((w2k_Z_memory.i32_load(w2k_l2, 12)).also {w2k_l4=it} != w2k_l5).btoInt()).inz()){
                                    break@w2k_B80;}
                                  w2k_Z_memory.i32_store(0, 62920, w2k_Z_memory.i32_load(0, 62920) and wasm_rt_impl.I32_ROTL((-2), w2k_l8));
                                  break@w2k_B5;
                                } while (false);
                                w2k_Z_memory.i32_store(w2k_l5, 12, w2k_l4);
                                w2k_Z_memory.i32_store(w2k_l4, 8, w2k_l5);
                                break@w2k_B5;
                              } while (false);
                              w2k_l10 = w2k_Z_memory.i32_load(w2k_l2, 24);
                              w2k_B81@ do {
                                if ((((w2k_Z_memory.i32_load(w2k_l2, 12)).also {w2k_l7=it} == w2k_l2).btoInt()).inz()){
                                  break@w2k_B81;}
                                (java.lang.Integer.compareUnsigned((w2k_Z_memory.i32_load(w2k_l2, 8)).also {w2k_l4=it}, w2k_l8)<0).btoInt();
                                w2k_Z_memory.i32_store(w2k_l4, 12, w2k_l7);
                                w2k_Z_memory.i32_store(w2k_l7, 8, w2k_l4);
                                break@w2k_B6;
                              } while (false);
                              w2k_B82@ do {
                                if (((w2k_Z_memory.i32_load((w2k_l2 + 20).also {w2k_l5=it})).also {w2k_l4=it}).inz()){
                                  break@w2k_B82;}
                                if ((((w2k_Z_memory.i32_load(w2k_l2, 16)).also {w2k_l4=it}).isz()).inz()){
                                  break@w2k_B7;}
                                w2k_l5 = w2k_l2 + 16;
                              } while (false);
                              w2k_L83@ while (true) {
                                w2k_l8 = w2k_l5;
                                if (((w2k_Z_memory.i32_load(((w2k_l4).also {w2k_l7=it} + 20).also {w2k_l5=it})).also {w2k_l4=it}).inz()){
                                  continue@w2k_L83;}
                                w2k_l5 = w2k_l7 + 16;
                                if (((w2k_Z_memory.i32_load(w2k_l7, 16)).also {w2k_l4=it}).inz()){
                                  continue@w2k_L83;}
                                break;
                              }
                              w2k_Z_memory.i32_store(w2k_l8, 0);
                              break@w2k_B6;
                            } while (false);
                            w2k_Z_memory.i32_store(0, 62932, ((w2k_l2 + (-40)).also {w2k_p0=it} - ((-8) - w2k_l7 and 7).also {w2k_l8=it}).also {w2k_l11=it});
                            w2k_Z_memory.i32_store(0, 62944, (w2k_l7 + w2k_l8).also {w2k_l8=it});
                            w2k_Z_memory.i32_store(w2k_l8, 4, w2k_l11 or 1);
                            w2k_Z_memory.i32_store(w2k_l7 + w2k_p0, 4, 40);
                            w2k_Z_memory.i32_store(0, 62948, w2k_Z_memory.i32_load(0, 63408));
                            w2k_Z_memory.i32_store((select(w2k_l4, (w2k_l5 + (39 - w2k_l5 and 7) + (-47)).also {w2k_p0=it}, (java.lang.Integer.compareUnsigned(w2k_p0, w2k_l4 + 16)<0).btoInt())).also {w2k_l8=it}, 4, 27);
                            w2k_Z_memory.i64_store(w2k_l8 + 16, w2k_Z_memory.i64_load(0, 63376));
                            w2k_Z_memory.i64_store(w2k_l8, 8, w2k_Z_memory.i64_load(0, 63368));
                            w2k_Z_memory.i32_store(0, 63376, w2k_l8 + 8);
                            w2k_Z_memory.i32_store(0, 63372, w2k_l2);
                            w2k_Z_memory.i32_store(0, 63368, w2k_l7);
                            w2k_Z_memory.i32_store(0, 63380, 0);
                            w2k_p0 = w2k_l8 + 24;
                            w2k_L84@ while (true) {
                              w2k_Z_memory.i32_store(w2k_p0, 4, 7);
                              w2k_l7 = w2k_p0 + 8;
                              w2k_p0 = w2k_p0 + 4;
                              if (((java.lang.Integer.compareUnsigned(w2k_l7, w2k_l5)<0).btoInt()).inz()){
                                continue@w2k_L84;}
                              break;
                            }
                            if (((w2k_l8 == w2k_l4).btoInt()).inz()){
                              break@w2k_B9;}
                            w2k_Z_memory.i32_store(w2k_l8, 4, w2k_Z_memory.i32_load(w2k_l8, 4) and (-2));
                            w2k_Z_memory.i32_store(w2k_l4, 4, (w2k_l8 - w2k_l4).also {w2k_l7=it} or 1);
                            w2k_Z_memory.i32_store(w2k_l8, w2k_l7);
                            w2k_B85@ do {
                              if (((java.lang.Integer.compareUnsigned(w2k_l7, 255)>0).btoInt()).inz()){
                                break@w2k_B85;}
                              w2k_p0 = (w2k_l7 and (-8)) + 62960;
                              w2k_B86@ do {
                                w2k_B87@ do {
                                  if (((w2k_Z_memory.i32_load(0, 62920)).also {w2k_l5=it} and (1 shl (w2k_l7 ushr 3)).also {w2k_l7=it}).inz()){
                                    break@w2k_B87;}
                                  w2k_Z_memory.i32_store(0, 62920, w2k_l5 or w2k_l7);
                                  w2k_l5 = w2k_p0;
                                  break@w2k_B86;
                                } while (false);
                                w2k_l5 = w2k_Z_memory.i32_load(w2k_p0, 8);
                              } while (false);
                              w2k_Z_memory.i32_store(w2k_p0, 8, w2k_l4);
                              w2k_Z_memory.i32_store(w2k_l5, 12, w2k_l4);
                              w2k_Z_memory.i32_store(w2k_l4, 12, w2k_p0);
                              w2k_Z_memory.i32_store(w2k_l4, 8, w2k_l5);
                              break@w2k_B9;
                            } while (false);
                            w2k_p0 = 31;
                            w2k_B88@ do {
                              if (((java.lang.Integer.compareUnsigned(w2k_l7, 16777215)>0).btoInt()).inz()){
                                break@w2k_B88;}
                              w2k_p0 = (w2k_l7 ushr 38 - ((w2k_l7 ushr 8).countLeadingZeroBits()).also {w2k_p0=it} and 1) - (w2k_p0 shl 1) + 62;
                            } while (false);
                            w2k_Z_memory.i32_store(w2k_l4, 28, w2k_p0);
                            w2k_Z_memory.i64_store(w2k_l4, 16, 0L);
                            w2k_l5 = (w2k_p0 shl 2) + 63224;
                            w2k_B89@ do {
                              w2k_B90@ do {
                                w2k_B91@ do {
                                  if (((w2k_Z_memory.i32_load(0, 62924)).also {w2k_l8=it} and (1 shl w2k_p0).also {w2k_l2=it}).inz()){
                                    break@w2k_B91;}
                                  w2k_Z_memory.i32_store(0, 62924, w2k_l8 or w2k_l2);
                                  w2k_Z_memory.i32_store(w2k_l5, w2k_l4);
                                  w2k_Z_memory.i32_store(w2k_l4, 24, w2k_l5);
                                  break@w2k_B90;
                                } while (false);
                                w2k_p0 = w2k_l7 shl select(0, 25 - (w2k_p0 ushr 1), (w2k_p0 == 31).btoInt());
                                w2k_l8 = w2k_Z_memory.i32_load(w2k_l5);
                                w2k_L92@ while (true) {
                                  if (((w2k_Z_memory.i32_load((w2k_l8).also {w2k_l5=it}, 4) and (-8) == w2k_l7).btoInt()).inz()){
                                    break@w2k_B89;}
                                  w2k_l8 = w2k_p0 ushr 29;
                                  w2k_p0 = w2k_p0 shl 1;
                                  if (((w2k_Z_memory.i32_load((w2k_l5 + (w2k_l8 and 4) + 16).also {w2k_l2=it})).also {w2k_l8=it}).inz()){
                                    continue@w2k_L92;}
                                  break;
                                }
                                w2k_Z_memory.i32_store(w2k_l2, w2k_l4);
                                w2k_Z_memory.i32_store(w2k_l4, 24, w2k_l5);
                              } while (false);
                              w2k_Z_memory.i32_store(w2k_l4, 12, w2k_l4);
                              w2k_Z_memory.i32_store(w2k_l4, 8, w2k_l4);
                              break@w2k_B9;
                            } while (false);
                            w2k_Z_memory.i32_store((w2k_Z_memory.i32_load(w2k_l5, 8)).also {w2k_p0=it}, 12, w2k_l4);
                            w2k_Z_memory.i32_store(w2k_l5, 8, w2k_l4);
                            w2k_Z_memory.i32_store(w2k_l4, 24, 0);
                            w2k_Z_memory.i32_store(w2k_l4, 12, w2k_l5);
                            w2k_Z_memory.i32_store(w2k_l4, 8, w2k_p0);
                          } while (false);
                          if (((java.lang.Integer.compareUnsigned((w2k_Z_memory.i32_load(0, 62932)).also {w2k_p0=it}, w2k_l3)<=0).btoInt()).inz()){
                            break@w2k_B8;}
                          w2k_Z_memory.i32_store(0, 62932, (w2k_p0 - w2k_l3).also {w2k_l4=it});
                          w2k_Z_memory.i32_store(0, 62944, ((w2k_Z_memory.i32_load(0, 62944)).also {w2k_p0=it} + w2k_l3).also {w2k_l5=it});
                          w2k_Z_memory.i32_store(w2k_l5, 4, w2k_l4 or 1);
                          w2k_Z_memory.i32_store(w2k_p0, 4, w2k_l3 or 3);
                          w2k_p0 = w2k_p0 + 8;
                          break@w2k_B0;
                        } while (false);
                        w2k_Z_memory.i32_store(w2k___errno_location(), 48);
                        w2k_p0 = 0;
                        break@w2k_B0;
                      } while (false);
                      w2k_l7 = 0;
                    } while (false);
                    if (((w2k_l10).isz()).inz()){
                      break@w2k_B5;}
                    w2k_B93@ do {
                      w2k_B94@ do {
                        if (((w2k_l2 != w2k_Z_memory.i32_load((((w2k_Z_memory.i32_load(w2k_l2, 28)).also {w2k_l5=it} shl 2) + 63224).also {w2k_l4=it})).btoInt()).inz()){
                          break@w2k_B94;}
                        w2k_Z_memory.i32_store(w2k_l4, w2k_l7);
                        if ((w2k_l7).inz()){
                          break@w2k_B93;}
                        w2k_Z_memory.i32_store(0, 62924, w2k_Z_memory.i32_load(0, 62924) and wasm_rt_impl.I32_ROTL((-2), w2k_l5));
                        break@w2k_B5;
                      } while (false);
                      w2k_Z_memory.i32_store(w2k_l10 + select(16, 20, (w2k_Z_memory.i32_load(w2k_l10, 16) == w2k_l2).btoInt()), w2k_l7);
                      if (((w2k_l7).isz()).inz()){
                        break@w2k_B5;}
                    } while (false);
                    w2k_Z_memory.i32_store(w2k_l7, 24, w2k_l10);
                    w2k_B95@ do {
                      if ((((w2k_Z_memory.i32_load(w2k_l2, 16)).also {w2k_l4=it}).isz()).inz()){
                        break@w2k_B95;}
                      w2k_Z_memory.i32_store(w2k_l7, 16, w2k_l4);
                      w2k_Z_memory.i32_store(w2k_l4, 24, w2k_l7);
                    } while (false);
                    if ((((w2k_Z_memory.i32_load(w2k_l2 + 20)).also {w2k_l4=it}).isz()).inz()){
                      break@w2k_B5;}
                    w2k_Z_memory.i32_store(w2k_l7 + 20, w2k_l4);
                    w2k_Z_memory.i32_store(w2k_l4, 24, w2k_l7);
                  } while (false);
                  w2k_p0 = w2k_l6 + w2k_p0;
                  w2k_l4 = w2k_Z_memory.i32_load((w2k_l2 + w2k_l6).also {w2k_l2=it}, 4);
                } while (false);
                w2k_Z_memory.i32_store(w2k_l2, 4, w2k_l4 and (-2));
                w2k_Z_memory.i32_store(w2k_l3, 4, w2k_p0 or 1);
                w2k_Z_memory.i32_store(w2k_l3 + w2k_p0, w2k_p0);
                w2k_B96@ do {
                  if (((java.lang.Integer.compareUnsigned(w2k_p0, 255)>0).btoInt()).inz()){
                    break@w2k_B96;}
                  w2k_l4 = (w2k_p0 and (-8)) + 62960;
                  w2k_B97@ do {
                    w2k_B98@ do {
                      if (((w2k_Z_memory.i32_load(0, 62920)).also {w2k_l5=it} and (1 shl (w2k_p0 ushr 3)).also {w2k_p0=it}).inz()){
                        break@w2k_B98;}
                      w2k_Z_memory.i32_store(0, 62920, w2k_l5 or w2k_p0);
                      w2k_p0 = w2k_l4;
                      break@w2k_B97;
                    } while (false);
                    w2k_p0 = w2k_Z_memory.i32_load(w2k_l4, 8);
                  } while (false);
                  w2k_Z_memory.i32_store(w2k_l4, 8, w2k_l3);
                  w2k_Z_memory.i32_store(w2k_p0, 12, w2k_l3);
                  w2k_Z_memory.i32_store(w2k_l3, 12, w2k_l4);
                  w2k_Z_memory.i32_store(w2k_l3, 8, w2k_p0);
                  break@w2k_B3;
                } while (false);
                w2k_l4 = 31;
                w2k_B99@ do {
                  if (((java.lang.Integer.compareUnsigned(w2k_p0, 16777215)>0).btoInt()).inz()){
                    break@w2k_B99;}
                  w2k_l4 = (w2k_p0 ushr 38 - ((w2k_p0 ushr 8).countLeadingZeroBits()).also {w2k_l4=it} and 1) - (w2k_l4 shl 1) + 62;
                } while (false);
                w2k_Z_memory.i32_store(w2k_l3, 28, w2k_l4);
                w2k_Z_memory.i64_store(w2k_l3, 16, 0L);
                w2k_l5 = (w2k_l4 shl 2) + 63224;
                w2k_B100@ do {
                  w2k_B101@ do {
                    w2k_B102@ do {
                      if (((w2k_Z_memory.i32_load(0, 62924)).also {w2k_l7=it} and (1 shl w2k_l4).also {w2k_l8=it}).inz()){
                        break@w2k_B102;}
                      w2k_Z_memory.i32_store(0, 62924, w2k_l7 or w2k_l8);
                      w2k_Z_memory.i32_store(w2k_l5, w2k_l3);
                      w2k_Z_memory.i32_store(w2k_l3, 24, w2k_l5);
                      break@w2k_B101;
                    } while (false);
                    w2k_l4 = w2k_p0 shl select(0, 25 - (w2k_l4 ushr 1), (w2k_l4 == 31).btoInt());
                    w2k_l7 = w2k_Z_memory.i32_load(w2k_l5);
                    w2k_L103@ while (true) {
                      if (((w2k_Z_memory.i32_load((w2k_l7).also {w2k_l5=it}, 4) and (-8) == w2k_p0).btoInt()).inz()){
                        break@w2k_B100;}
                      w2k_l7 = w2k_l4 ushr 29;
                      w2k_l4 = w2k_l4 shl 1;
                      if (((w2k_Z_memory.i32_load((w2k_l5 + (w2k_l7 and 4) + 16).also {w2k_l8=it})).also {w2k_l7=it}).inz()){
                        continue@w2k_L103;}
                      break;
                    }
                    w2k_Z_memory.i32_store(w2k_l8, w2k_l3);
                    w2k_Z_memory.i32_store(w2k_l3, 24, w2k_l5);
                  } while (false);
                  w2k_Z_memory.i32_store(w2k_l3, 12, w2k_l3);
                  w2k_Z_memory.i32_store(w2k_l3, 8, w2k_l3);
                  break@w2k_B3;
                } while (false);
                w2k_Z_memory.i32_store((w2k_Z_memory.i32_load(w2k_l5, 8)).also {w2k_p0=it}, 12, w2k_l3);
                w2k_Z_memory.i32_store(w2k_l5, 8, w2k_l3);
                w2k_Z_memory.i32_store(w2k_l3, 24, 0);
                w2k_Z_memory.i32_store(w2k_l3, 12, w2k_l5);
                w2k_Z_memory.i32_store(w2k_l3, 8, w2k_p0);
              } while (false);
              w2k_p0 = w2k_l11 + 8;
              break@w2k_B0;
            } while (false);
            w2k_B104@ do {
              if (((w2k_l11).isz()).inz()){
                break@w2k_B104;}
              w2k_B105@ do {
                w2k_B106@ do {
                  if (((w2k_l8 != w2k_Z_memory.i32_load((((w2k_Z_memory.i32_load(w2k_l8, 28)).also {w2k_l5=it} shl 2) + 63224).also {w2k_p0=it})).btoInt()).inz()){
                    break@w2k_B106;}
                  w2k_Z_memory.i32_store(w2k_p0, w2k_l7);
                  if ((w2k_l7).inz()){
                    break@w2k_B105;}
                  w2k_Z_memory.i32_store(0, 62924, (w2k_l6 and wasm_rt_impl.I32_ROTL((-2), w2k_l5)).also {w2k_l6=it});
                  break@w2k_B104;
                } while (false);
                w2k_Z_memory.i32_store(w2k_l11 + select(16, 20, (w2k_Z_memory.i32_load(w2k_l11, 16) == w2k_l8).btoInt()), w2k_l7);
                if (((w2k_l7).isz()).inz()){
                  break@w2k_B104;}
              } while (false);
              w2k_Z_memory.i32_store(w2k_l7, 24, w2k_l11);
              w2k_B107@ do {
                if ((((w2k_Z_memory.i32_load(w2k_l8, 16)).also {w2k_p0=it}).isz()).inz()){
                  break@w2k_B107;}
                w2k_Z_memory.i32_store(w2k_l7, 16, w2k_p0);
                w2k_Z_memory.i32_store(w2k_p0, 24, w2k_l7);
              } while (false);
              if ((((w2k_Z_memory.i32_load(w2k_l8 + 20)).also {w2k_p0=it}).isz()).inz()){
                break@w2k_B104;}
              w2k_Z_memory.i32_store(w2k_l7 + 20, w2k_p0);
              w2k_Z_memory.i32_store(w2k_p0, 24, w2k_l7);
            } while (false);
            w2k_B108@ do {
              w2k_B109@ do {
                if (((java.lang.Integer.compareUnsigned(w2k_l4, 15)>0).btoInt()).inz()){
                  break@w2k_B109;}
                w2k_Z_memory.i32_store(w2k_l8, 4, (w2k_l4 + w2k_l3).also {w2k_p0=it} or 3);
                w2k_Z_memory.i32_store((w2k_l8 + w2k_p0).also {w2k_p0=it}, 4, w2k_Z_memory.i32_load(w2k_p0, 4) or 1);
                break@w2k_B108;
              } while (false);
              w2k_Z_memory.i32_store(w2k_l8, 4, w2k_l3 or 3);
              w2k_Z_memory.i32_store((w2k_l8 + w2k_l3).also {w2k_l7=it}, 4, w2k_l4 or 1);
              w2k_Z_memory.i32_store(w2k_l7 + w2k_l4, w2k_l4);
              w2k_B110@ do {
                if (((java.lang.Integer.compareUnsigned(w2k_l4, 255)>0).btoInt()).inz()){
                  break@w2k_B110;}
                w2k_p0 = (w2k_l4 and (-8)) + 62960;
                w2k_B111@ do {
                  w2k_B112@ do {
                    if (((w2k_Z_memory.i32_load(0, 62920)).also {w2k_l5=it} and (1 shl (w2k_l4 ushr 3)).also {w2k_l4=it}).inz()){
                      break@w2k_B112;}
                    w2k_Z_memory.i32_store(0, 62920, w2k_l5 or w2k_l4);
                    w2k_l4 = w2k_p0;
                    break@w2k_B111;
                  } while (false);
                  w2k_l4 = w2k_Z_memory.i32_load(w2k_p0, 8);
                } while (false);
                w2k_Z_memory.i32_store(w2k_p0, 8, w2k_l7);
                w2k_Z_memory.i32_store(w2k_l4, 12, w2k_l7);
                w2k_Z_memory.i32_store(w2k_l7, 12, w2k_p0);
                w2k_Z_memory.i32_store(w2k_l7, 8, w2k_l4);
                break@w2k_B108;
              } while (false);
              w2k_p0 = 31;
              w2k_B113@ do {
                if (((java.lang.Integer.compareUnsigned(w2k_l4, 16777215)>0).btoInt()).inz()){
                  break@w2k_B113;}
                w2k_p0 = (w2k_l4 ushr 38 - ((w2k_l4 ushr 8).countLeadingZeroBits()).also {w2k_p0=it} and 1) - (w2k_p0 shl 1) + 62;
              } while (false);
              w2k_Z_memory.i32_store(w2k_l7, 28, w2k_p0);
              w2k_Z_memory.i64_store(w2k_l7, 16, 0L);
              w2k_l5 = (w2k_p0 shl 2) + 63224;
              w2k_B114@ do {
                w2k_B115@ do {
                  w2k_B116@ do {
                    if ((w2k_l6 and (1 shl w2k_p0).also {w2k_l3=it}).inz()){
                      break@w2k_B116;}
                    w2k_Z_memory.i32_store(0, 62924, w2k_l6 or w2k_l3);
                    w2k_Z_memory.i32_store(w2k_l5, w2k_l7);
                    w2k_Z_memory.i32_store(w2k_l7, 24, w2k_l5);
                    break@w2k_B115;
                  } while (false);
                  w2k_p0 = w2k_l4 shl select(0, 25 - (w2k_p0 ushr 1), (w2k_p0 == 31).btoInt());
                  w2k_l3 = w2k_Z_memory.i32_load(w2k_l5);
                  w2k_L117@ while (true) {
                    if (((w2k_Z_memory.i32_load((w2k_l3).also {w2k_l5=it}, 4) and (-8) == w2k_l4).btoInt()).inz()){
                      break@w2k_B114;}
                    w2k_l3 = w2k_p0 ushr 29;
                    w2k_p0 = w2k_p0 shl 1;
                    if (((w2k_Z_memory.i32_load((w2k_l5 + (w2k_l3 and 4) + 16).also {w2k_l2=it})).also {w2k_l3=it}).inz()){
                      continue@w2k_L117;}
                    break;
                  }
                  w2k_Z_memory.i32_store(w2k_l2, w2k_l7);
                  w2k_Z_memory.i32_store(w2k_l7, 24, w2k_l5);
                } while (false);
                w2k_Z_memory.i32_store(w2k_l7, 12, w2k_l7);
                w2k_Z_memory.i32_store(w2k_l7, 8, w2k_l7);
                break@w2k_B108;
              } while (false);
              w2k_Z_memory.i32_store((w2k_Z_memory.i32_load(w2k_l5, 8)).also {w2k_p0=it}, 12, w2k_l7);
              w2k_Z_memory.i32_store(w2k_l5, 8, w2k_l7);
              w2k_Z_memory.i32_store(w2k_l7, 24, 0);
              w2k_Z_memory.i32_store(w2k_l7, 12, w2k_l5);
              w2k_Z_memory.i32_store(w2k_l7, 8, w2k_p0);
            } while (false);
            w2k_p0 = w2k_l8 + 8;
            break@w2k_B0;
          } while (false);
          w2k_B118@ do {
            if (((w2k_l10).isz()).inz()){
              break@w2k_B118;}
            w2k_B119@ do {
              w2k_B120@ do {
                if (((w2k_l7 != w2k_Z_memory.i32_load((((w2k_Z_memory.i32_load(w2k_l7, 28)).also {w2k_l5=it} shl 2) + 63224).also {w2k_p0=it})).btoInt()).inz()){
                  break@w2k_B120;}
                w2k_Z_memory.i32_store(w2k_p0, w2k_l8);
                if ((w2k_l8).inz()){
                  break@w2k_B119;}
                w2k_Z_memory.i32_store(0, 62924, w2k_l9 and wasm_rt_impl.I32_ROTL((-2), w2k_l5));
                break@w2k_B118;
              } while (false);
              w2k_Z_memory.i32_store(w2k_l10 + select(16, 20, (w2k_Z_memory.i32_load(w2k_l10, 16) == w2k_l7).btoInt()), w2k_l8);
              if (((w2k_l8).isz()).inz()){
                break@w2k_B118;}
            } while (false);
            w2k_Z_memory.i32_store(w2k_l8, 24, w2k_l10);
            w2k_B121@ do {
              if ((((w2k_Z_memory.i32_load(w2k_l7, 16)).also {w2k_p0=it}).isz()).inz()){
                break@w2k_B121;}
              w2k_Z_memory.i32_store(w2k_l8, 16, w2k_p0);
              w2k_Z_memory.i32_store(w2k_p0, 24, w2k_l8);
            } while (false);
            if ((((w2k_Z_memory.i32_load(w2k_l7 + 20)).also {w2k_p0=it}).isz()).inz()){
              break@w2k_B118;}
            w2k_Z_memory.i32_store(w2k_l8 + 20, w2k_p0);
            w2k_Z_memory.i32_store(w2k_p0, 24, w2k_l8);
          } while (false);
          w2k_B122@ do {
            w2k_B123@ do {
              if (((java.lang.Integer.compareUnsigned(w2k_l4, 15)>0).btoInt()).inz()){
                break@w2k_B123;}
              w2k_Z_memory.i32_store(w2k_l7, 4, (w2k_l4 + w2k_l3).also {w2k_p0=it} or 3);
              w2k_Z_memory.i32_store((w2k_l7 + w2k_p0).also {w2k_p0=it}, 4, w2k_Z_memory.i32_load(w2k_p0, 4) or 1);
              break@w2k_B122;
            } while (false);
            w2k_Z_memory.i32_store(w2k_l7, 4, w2k_l3 or 3);
            w2k_Z_memory.i32_store((w2k_l7 + w2k_l3).also {w2k_l5=it}, 4, w2k_l4 or 1);
            w2k_Z_memory.i32_store(w2k_l5 + w2k_l4, w2k_l4);
            w2k_B124@ do {
              if (((w2k_l6).isz()).inz()){
                break@w2k_B124;}
              w2k_l3 = (w2k_l6 and (-8)) + 62960;
              w2k_p0 = w2k_Z_memory.i32_load(0, 62940);
              w2k_B125@ do {
                w2k_B126@ do {
                  if (((1 shl (w2k_l6 ushr 3)).also {w2k_l8=it} and w2k_l2).inz()){
                    break@w2k_B126;}
                  w2k_Z_memory.i32_store(0, 62920, w2k_l8 or w2k_l2);
                  w2k_l8 = w2k_l3;
                  break@w2k_B125;
                } while (false);
                w2k_l8 = w2k_Z_memory.i32_load(w2k_l3, 8);
              } while (false);
              w2k_Z_memory.i32_store(w2k_l3, 8, w2k_p0);
              w2k_Z_memory.i32_store(w2k_l8, 12, w2k_p0);
              w2k_Z_memory.i32_store(w2k_p0, 12, w2k_l3);
              w2k_Z_memory.i32_store(w2k_p0, 8, w2k_l8);
            } while (false);
            w2k_Z_memory.i32_store(0, 62940, w2k_l5);
            w2k_Z_memory.i32_store(0, 62928, w2k_l4);
          } while (false);
          w2k_p0 = w2k_l7 + 8;
        } while (false);
        w2k___stack_pointer = w2k_l1 + 16;
        w2k_i0 = w2k_p0;
      } while (false);
      return w2k_i0;
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_dlfree(w2k_p0: Int): Unit{
    var w2k_p0 = w2k_p0;
    var w2k_l1: Int = 0
    var w2k_l2: Int = 0
    var w2k_l3: Int = 0
    var w2k_l4: Int = 0
    var w2k_l5: Int = 0
    var w2k_l6: Int = 0
    var w2k_l7: Int = 0
    try {
      w2k_Bfunc@ do {
        w2k_B0@ do {
          if (((w2k_p0).isz()).inz()){
            break@w2k_B0;}
          w2k_l3 = (w2k_p0 + (-8)).also {w2k_l1=it} + ((w2k_Z_memory.i32_load(w2k_p0 + (-4))).also {w2k_l2=it} and (-8)).also {w2k_p0=it};
          w2k_B1@ do {
            if ((w2k_l2 and 1).inz()){
              break@w2k_B1;}
            if (((w2k_l2 and 3).isz()).inz()){
              break@w2k_B0;}
            if (((java.lang.Integer.compareUnsigned((w2k_l1 - (w2k_Z_memory.i32_load(w2k_l1)).also {w2k_l2=it}).also {w2k_l1=it}, (w2k_Z_memory.i32_load(0, 62936)).also {w2k_l4=it})<0).btoInt()).inz()){
              break@w2k_B0;}
            w2k_p0 = w2k_l2 + w2k_p0;
            w2k_B2@ do {
              w2k_B3@ do {
                w2k_B4@ do {
                  if (((w2k_l1 == w2k_Z_memory.i32_load(0, 62940)).btoInt()).inz()){
                    break@w2k_B4;}
                  w2k_B5@ do {
                    if (((java.lang.Integer.compareUnsigned(w2k_l2, 255)>0).btoInt()).inz()){
                      break@w2k_B5;}
                    ((w2k_Z_memory.i32_load(w2k_l1, 8)).also {w2k_l4=it} == (((w2k_l2 ushr 3).also {w2k_l5=it} shl 3) + 62960).also {w2k_l6=it}).btoInt();
                    w2k_B6@ do {
                      if ((((w2k_Z_memory.i32_load(w2k_l1, 12)).also {w2k_l2=it} != w2k_l4).btoInt()).inz()){
                        break@w2k_B6;}
                      w2k_Z_memory.i32_store(0, 62920, w2k_Z_memory.i32_load(0, 62920) and wasm_rt_impl.I32_ROTL((-2), w2k_l5));
                      break@w2k_B1;
                    } while (false);
                    w2k_Z_memory.i32_store(w2k_l4, 12, w2k_l2);
                    w2k_Z_memory.i32_store(w2k_l2, 8, w2k_l4);
                    break@w2k_B1;
                  } while (false);
                  w2k_l7 = w2k_Z_memory.i32_load(w2k_l1, 24);
                  w2k_B7@ do {
                    if ((((w2k_Z_memory.i32_load(w2k_l1, 12)).also {w2k_l6=it} == w2k_l1).btoInt()).inz()){
                      break@w2k_B7;}
                    (java.lang.Integer.compareUnsigned((w2k_Z_memory.i32_load(w2k_l1, 8)).also {w2k_l2=it}, w2k_l4)<0).btoInt();
                    w2k_Z_memory.i32_store(w2k_l2, 12, w2k_l6);
                    w2k_Z_memory.i32_store(w2k_l6, 8, w2k_l2);
                    break@w2k_B2;
                  } while (false);
                  w2k_B8@ do {
                    if (((w2k_Z_memory.i32_load((w2k_l1 + 20).also {w2k_l4=it})).also {w2k_l2=it}).inz()){
                      break@w2k_B8;}
                    if ((((w2k_Z_memory.i32_load(w2k_l1, 16)).also {w2k_l2=it}).isz()).inz()){
                      break@w2k_B3;}
                    w2k_l4 = w2k_l1 + 16;
                  } while (false);
                  w2k_L9@ while (true) {
                    w2k_l5 = w2k_l4;
                    if (((w2k_Z_memory.i32_load(((w2k_l2).also {w2k_l6=it} + 20).also {w2k_l4=it})).also {w2k_l2=it}).inz()){
                      continue@w2k_L9;}
                    w2k_l4 = w2k_l6 + 16;
                    if (((w2k_Z_memory.i32_load(w2k_l6, 16)).also {w2k_l2=it}).inz()){
                      continue@w2k_L9;}
                    break;
                  }
                  w2k_Z_memory.i32_store(w2k_l5, 0);
                  break@w2k_B2;
                } while (false);
                if ((((w2k_Z_memory.i32_load(w2k_l3, 4)).also {w2k_l2=it} and 3 != 3).btoInt()).inz()){
                  break@w2k_B1;}
                w2k_Z_memory.i32_store(0, 62928, w2k_p0);
                w2k_Z_memory.i32_store(w2k_l3, 4, w2k_l2 and (-2));
                w2k_Z_memory.i32_store(w2k_l1, 4, w2k_p0 or 1);
                w2k_Z_memory.i32_store(w2k_l3, w2k_p0);
                break@w2k_Bfunc;
              } while (false);
              w2k_l6 = 0;
            } while (false);
            if (((w2k_l7).isz()).inz()){
              break@w2k_B1;}
            w2k_B10@ do {
              w2k_B11@ do {
                if (((w2k_l1 != w2k_Z_memory.i32_load((((w2k_Z_memory.i32_load(w2k_l1, 28)).also {w2k_l4=it} shl 2) + 63224).also {w2k_l2=it})).btoInt()).inz()){
                  break@w2k_B11;}
                w2k_Z_memory.i32_store(w2k_l2, w2k_l6);
                if ((w2k_l6).inz()){
                  break@w2k_B10;}
                w2k_Z_memory.i32_store(0, 62924, w2k_Z_memory.i32_load(0, 62924) and wasm_rt_impl.I32_ROTL((-2), w2k_l4));
                break@w2k_B1;
              } while (false);
              w2k_Z_memory.i32_store(w2k_l7 + select(16, 20, (w2k_Z_memory.i32_load(w2k_l7, 16) == w2k_l1).btoInt()), w2k_l6);
              if (((w2k_l6).isz()).inz()){
                break@w2k_B1;}
            } while (false);
            w2k_Z_memory.i32_store(w2k_l6, 24, w2k_l7);
            w2k_B12@ do {
              if ((((w2k_Z_memory.i32_load(w2k_l1, 16)).also {w2k_l2=it}).isz()).inz()){
                break@w2k_B12;}
              w2k_Z_memory.i32_store(w2k_l6, 16, w2k_l2);
              w2k_Z_memory.i32_store(w2k_l2, 24, w2k_l6);
            } while (false);
            if ((((w2k_Z_memory.i32_load(w2k_l1 + 20)).also {w2k_l2=it}).isz()).inz()){
              break@w2k_B1;}
            w2k_Z_memory.i32_store(w2k_l6 + 20, w2k_l2);
            w2k_Z_memory.i32_store(w2k_l2, 24, w2k_l6);
          } while (false);
          if (((java.lang.Integer.compareUnsigned(w2k_l1, w2k_l3)>=0).btoInt()).inz()){
            break@w2k_B0;}
          if ((((w2k_Z_memory.i32_load(w2k_l3, 4)).also {w2k_l2=it} and 1).isz()).inz()){
            break@w2k_B0;}
          w2k_B13@ do {
            w2k_B14@ do {
              w2k_B15@ do {
                w2k_B16@ do {
                  w2k_B17@ do {
                    if ((w2k_l2 and 2).inz()){
                      break@w2k_B17;}
                    w2k_B18@ do {
                      if (((w2k_l3 != w2k_Z_memory.i32_load(0, 62944)).btoInt()).inz()){
                        break@w2k_B18;}
                      w2k_Z_memory.i32_store(0, 62944, w2k_l1);
                      w2k_Z_memory.i32_store(0, 62932, (w2k_Z_memory.i32_load(0, 62932) + w2k_p0).also {w2k_p0=it});
                      w2k_Z_memory.i32_store(w2k_l1, 4, w2k_p0 or 1);
                      if (((w2k_l1 != w2k_Z_memory.i32_load(0, 62940)).btoInt()).inz()){
                        break@w2k_B0;}
                      w2k_Z_memory.i32_store(0, 62928, 0);
                      w2k_Z_memory.i32_store(0, 62940, 0);
                      break@w2k_Bfunc;
                    } while (false);
                    w2k_B19@ do {
                      if (((w2k_l3 != w2k_Z_memory.i32_load(0, 62940)).btoInt()).inz()){
                        break@w2k_B19;}
                      w2k_Z_memory.i32_store(0, 62940, w2k_l1);
                      w2k_Z_memory.i32_store(0, 62928, (w2k_Z_memory.i32_load(0, 62928) + w2k_p0).also {w2k_p0=it});
                      w2k_Z_memory.i32_store(w2k_l1, 4, w2k_p0 or 1);
                      w2k_Z_memory.i32_store(w2k_l1 + w2k_p0, w2k_p0);
                      break@w2k_Bfunc;
                    } while (false);
                    w2k_p0 = (w2k_l2 and (-8)) + w2k_p0;
                    w2k_B20@ do {
                      if (((java.lang.Integer.compareUnsigned(w2k_l2, 255)>0).btoInt()).inz()){
                        break@w2k_B20;}
                      ((w2k_Z_memory.i32_load(w2k_l3, 8)).also {w2k_l4=it} == (((w2k_l2 ushr 3).also {w2k_l5=it} shl 3) + 62960).also {w2k_l6=it}).btoInt();
                      w2k_B21@ do {
                        if ((((w2k_Z_memory.i32_load(w2k_l3, 12)).also {w2k_l2=it} != w2k_l4).btoInt()).inz()){
                          break@w2k_B21;}
                        w2k_Z_memory.i32_store(0, 62920, w2k_Z_memory.i32_load(0, 62920) and wasm_rt_impl.I32_ROTL((-2), w2k_l5));
                        break@w2k_B14;
                      } while (false);
                      w2k_Z_memory.i32_store(w2k_l4, 12, w2k_l2);
                      w2k_Z_memory.i32_store(w2k_l2, 8, w2k_l4);
                      break@w2k_B14;
                    } while (false);
                    w2k_l7 = w2k_Z_memory.i32_load(w2k_l3, 24);
                    w2k_B22@ do {
                      if ((((w2k_Z_memory.i32_load(w2k_l3, 12)).also {w2k_l6=it} == w2k_l3).btoInt()).inz()){
                        break@w2k_B22;}
                      (java.lang.Integer.compareUnsigned((w2k_Z_memory.i32_load(w2k_l3, 8)).also {w2k_l2=it}, w2k_Z_memory.i32_load(0, 62936))<0).btoInt();
                      w2k_Z_memory.i32_store(w2k_l2, 12, w2k_l6);
                      w2k_Z_memory.i32_store(w2k_l6, 8, w2k_l2);
                      break@w2k_B15;
                    } while (false);
                    w2k_B23@ do {
                      if (((w2k_Z_memory.i32_load((w2k_l3 + 20).also {w2k_l4=it})).also {w2k_l2=it}).inz()){
                        break@w2k_B23;}
                      if ((((w2k_Z_memory.i32_load(w2k_l3, 16)).also {w2k_l2=it}).isz()).inz()){
                        break@w2k_B16;}
                      w2k_l4 = w2k_l3 + 16;
                    } while (false);
                    w2k_L24@ while (true) {
                      w2k_l5 = w2k_l4;
                      if (((w2k_Z_memory.i32_load(((w2k_l2).also {w2k_l6=it} + 20).also {w2k_l4=it})).also {w2k_l2=it}).inz()){
                        continue@w2k_L24;}
                      w2k_l4 = w2k_l6 + 16;
                      if (((w2k_Z_memory.i32_load(w2k_l6, 16)).also {w2k_l2=it}).inz()){
                        continue@w2k_L24;}
                      break;
                    }
                    w2k_Z_memory.i32_store(w2k_l5, 0);
                    break@w2k_B15;
                  } while (false);
                  w2k_Z_memory.i32_store(w2k_l3, 4, w2k_l2 and (-2));
                  w2k_Z_memory.i32_store(w2k_l1, 4, w2k_p0 or 1);
                  w2k_Z_memory.i32_store(w2k_l1 + w2k_p0, w2k_p0);
                  break@w2k_B13;
                } while (false);
                w2k_l6 = 0;
              } while (false);
              if (((w2k_l7).isz()).inz()){
                break@w2k_B14;}
              w2k_B25@ do {
                w2k_B26@ do {
                  if (((w2k_l3 != w2k_Z_memory.i32_load((((w2k_Z_memory.i32_load(w2k_l3, 28)).also {w2k_l4=it} shl 2) + 63224).also {w2k_l2=it})).btoInt()).inz()){
                    break@w2k_B26;}
                  w2k_Z_memory.i32_store(w2k_l2, w2k_l6);
                  if ((w2k_l6).inz()){
                    break@w2k_B25;}
                  w2k_Z_memory.i32_store(0, 62924, w2k_Z_memory.i32_load(0, 62924) and wasm_rt_impl.I32_ROTL((-2), w2k_l4));
                  break@w2k_B14;
                } while (false);
                w2k_Z_memory.i32_store(w2k_l7 + select(16, 20, (w2k_Z_memory.i32_load(w2k_l7, 16) == w2k_l3).btoInt()), w2k_l6);
                if (((w2k_l6).isz()).inz()){
                  break@w2k_B14;}
              } while (false);
              w2k_Z_memory.i32_store(w2k_l6, 24, w2k_l7);
              w2k_B27@ do {
                if ((((w2k_Z_memory.i32_load(w2k_l3, 16)).also {w2k_l2=it}).isz()).inz()){
                  break@w2k_B27;}
                w2k_Z_memory.i32_store(w2k_l6, 16, w2k_l2);
                w2k_Z_memory.i32_store(w2k_l2, 24, w2k_l6);
              } while (false);
              if ((((w2k_Z_memory.i32_load(w2k_l3 + 20)).also {w2k_l2=it}).isz()).inz()){
                break@w2k_B14;}
              w2k_Z_memory.i32_store(w2k_l6 + 20, w2k_l2);
              w2k_Z_memory.i32_store(w2k_l2, 24, w2k_l6);
            } while (false);
            w2k_Z_memory.i32_store(w2k_l1, 4, w2k_p0 or 1);
            w2k_Z_memory.i32_store(w2k_l1 + w2k_p0, w2k_p0);
            if (((w2k_l1 != w2k_Z_memory.i32_load(0, 62940)).btoInt()).inz()){
              break@w2k_B13;}
            w2k_Z_memory.i32_store(0, 62928, w2k_p0);
            break@w2k_Bfunc;
          } while (false);
          w2k_B28@ do {
            if (((java.lang.Integer.compareUnsigned(w2k_p0, 255)>0).btoInt()).inz()){
              break@w2k_B28;}
            w2k_l2 = (w2k_p0 and (-8)) + 62960;
            w2k_B29@ do {
              w2k_B30@ do {
                if (((w2k_Z_memory.i32_load(0, 62920)).also {w2k_l4=it} and (1 shl (w2k_p0 ushr 3)).also {w2k_p0=it}).inz()){
                  break@w2k_B30;}
                w2k_Z_memory.i32_store(0, 62920, w2k_l4 or w2k_p0);
                w2k_p0 = w2k_l2;
                break@w2k_B29;
              } while (false);
              w2k_p0 = w2k_Z_memory.i32_load(w2k_l2, 8);
            } while (false);
            w2k_Z_memory.i32_store(w2k_l2, 8, w2k_l1);
            w2k_Z_memory.i32_store(w2k_p0, 12, w2k_l1);
            w2k_Z_memory.i32_store(w2k_l1, 12, w2k_l2);
            w2k_Z_memory.i32_store(w2k_l1, 8, w2k_p0);
            break@w2k_Bfunc;
          } while (false);
          w2k_l2 = 31;
          w2k_B31@ do {
            if (((java.lang.Integer.compareUnsigned(w2k_p0, 16777215)>0).btoInt()).inz()){
              break@w2k_B31;}
            w2k_l2 = (w2k_p0 ushr 38 - ((w2k_p0 ushr 8).countLeadingZeroBits()).also {w2k_l2=it} and 1) - (w2k_l2 shl 1) + 62;
          } while (false);
          w2k_Z_memory.i32_store(w2k_l1, 28, w2k_l2);
          w2k_Z_memory.i64_store(w2k_l1, 16, 0L);
          w2k_l4 = (w2k_l2 shl 2) + 63224;
          w2k_B32@ do {
            w2k_B33@ do {
              w2k_B34@ do {
                w2k_B35@ do {
                  if (((w2k_Z_memory.i32_load(0, 62924)).also {w2k_l6=it} and (1 shl w2k_l2).also {w2k_l3=it}).inz()){
                    break@w2k_B35;}
                  w2k_Z_memory.i32_store(0, 62924, w2k_l6 or w2k_l3);
                  w2k_Z_memory.i32_store(w2k_l4, w2k_l1);
                  w2k_Z_memory.i32_store(w2k_l1, 24, w2k_l4);
                  break@w2k_B34;
                } while (false);
                w2k_l2 = w2k_p0 shl select(0, 25 - (w2k_l2 ushr 1), (w2k_l2 == 31).btoInt());
                w2k_l6 = w2k_Z_memory.i32_load(w2k_l4);
                w2k_L36@ while (true) {
                  if (((w2k_Z_memory.i32_load((w2k_l6).also {w2k_l4=it}, 4) and (-8) == w2k_p0).btoInt()).inz()){
                    break@w2k_B33;}
                  w2k_l6 = w2k_l2 ushr 29;
                  w2k_l2 = w2k_l2 shl 1;
                  if (((w2k_Z_memory.i32_load((w2k_l4 + (w2k_l6 and 4) + 16).also {w2k_l3=it})).also {w2k_l6=it}).inz()){
                    continue@w2k_L36;}
                  break;
                }
                w2k_Z_memory.i32_store(w2k_l3, w2k_l1);
                w2k_Z_memory.i32_store(w2k_l1, 24, w2k_l4);
              } while (false);
              w2k_Z_memory.i32_store(w2k_l1, 12, w2k_l1);
              w2k_Z_memory.i32_store(w2k_l1, 8, w2k_l1);
              break@w2k_B32;
            } while (false);
            w2k_Z_memory.i32_store((w2k_Z_memory.i32_load(w2k_l4, 8)).also {w2k_p0=it}, 12, w2k_l1);
            w2k_Z_memory.i32_store(w2k_l4, 8, w2k_l1);
            w2k_Z_memory.i32_store(w2k_l1, 24, 0);
            w2k_Z_memory.i32_store(w2k_l1, 12, w2k_l4);
            w2k_Z_memory.i32_store(w2k_l1, 8, w2k_p0);
          } while (false);
          w2k_Z_memory.i32_store(0, 62952, select((w2k_Z_memory.i32_load(0, 62952) + (-1)).also {w2k_l1=it}, (-1), w2k_l1));
        } while (false);
      } while (false);
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_stackSave(): Int{
    try {
          var w2k_i0: Int = 0
      w2k_Bfunc@ do {
        w2k_i0 = w2k___stack_pointer;
      } while (false);
      return w2k_i0;
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_stackRestore(w2k_p0: Int): Unit{
    var w2k_p0 = w2k_p0;
    try {
      w2k_Bfunc@ do {
        w2k___stack_pointer = w2k_p0;
      } while (false);
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  fun w2k_stackAlloc(w2k_p0: Int): Int{
    var w2k_p0 = w2k_p0;
    var w2k_l1: Int = 0
    var w2k_l2: Int = 0
    try {
          var w2k_i0: Int = 0
      w2k_Bfunc@ do {
        w2k___stack_pointer = (w2k___stack_pointer - w2k_p0 and (-16)).also {w2k_l1=it};
        w2k_i0 = w2k_l1;
      } while (false);
      return w2k_i0;
    } catch(e: StackOverflowError) {
      throw wasm_rt_impl.ExhaustionException(null, e)
    } catch (d: Delegate) {
      throw d.ex
    }
  }
  
  init /* table */ {
    var offset: Int
    offset = 1;
    w2k___indirect_function_table[offset + 0] = wasm_rt_impl.Elem(func_types[7], this@SamWasm::w2k___wasm_call_ctors);
    w2k___indirect_function_table[offset + 1] = wasm_rt_impl.Elem(func_types[4], this@SamWasm::w2k___stdio_close);
    w2k___indirect_function_table[offset + 2] = wasm_rt_impl.Elem(func_types[0], this@SamWasm::w2k___stdio_write);
    w2k___indirect_function_table[offset + 3] = wasm_rt_impl.Elem(func_types[13], this@SamWasm::w2k___stdio_seek);
  }
  
  private val data_segment_data_0: String = "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0200\u0202\u0202\u8202\u0000\u0202\u0202\u0202\u0303\u0303\u0303\u0303\u0303\u0202\u0202\u0202\uc002\ub0a8\uc0ac\ub8a0\uc0a0\ua0bc\ua8ac\uc0ac\ua0a0\ub4ac\uc0a4\ua8a8\uc0b0\u00bc\u0000\u0002\u2020\u209b\ub9c0\ucd20\u4ca3\u8e8a\u0000\u0000\uc15d\u2820\u2e41\u3d29\u4845\u5934\ua02e\u4128\u2029\u413d\u20c8\u4128\u4552\u2029\u413d\ud241\u2820\u5241\u4f29\u413d\ud258\u4128\u2952\u3d23\u4845\ud234\u5e20\u4128\u2953\u3d23\u5945\ud334\u4128\u5729\u3d41\ud841\u4128\u2957\u413d\ub54f\u3a20\u4128\u594e\u3d29\u4845\u4e34\ud949\u4128\u5e29\u232b\u453d\ub559\u3a23\u4128\u4c4c\u2959\u553d\u494c\u20d9\u4128\u294c\u3d23\ucc55\u4128\u4147\u4e49\u3d29\u5841\u4547\u3448\u23ce\u283a\u4741\u4529\u493d\uca48\u4128\u5e29\u3d25\ud945\u4128\u5e29\u3a2b\u3d23\uc541\u3a20\u4128\u5e29\u202b\u453d\ub459\u2820\u5241\u2952\u413d\ud258\u4128\u5252\u3d29\u4541\ud234\u5e20\u4128\u2952\u3d20\u4141\ud235\u4128\u2952\u413d\u3541\u28d2\u4941\u2952\u453d\u3448\u28d2\u4941\u3d29\u5945\u28b4\u5941\u3d29\u5945\u28b5\u5541\u3d29\u4f41\u23b4\u283a\u4c41\u2029\u553d\u23cc\u283a\u4c41\u2953\u3d20\u4c55\u28da\u4c41\u294b\u413d\u344f\u28cb\u4c41\u5e29\u413d\ucc4f\u3a20\u4128\u4c42\u2945\u453d\u3459\u5542\u28cc\u4241\u454c\u3d29\u5841\u5542\u28cc\u2941\u4f56\u453d\ub459\u4128\u474e\u2b29\u453d\u3459\uca4e\u4128\u4154\u4952\u3d29\u4841\u4154\u3441\u4952\u28d9\u2941\u4f54\u3d4d\uc541\u4128\u5429\u4954\u413d\u20c5\u4128\u2954\u3d20\u4541\u20d4\u4128\u5429\u413d\u28c8\u2941\u413d\u5dc5\u20c2\u4228\u2029\u423d\u5949\u20b4\u4228\u2945\u235e\u423d\uc849\u4228\u4945\u474e\u3d29\u4942\u3459\u4849\ud84e\u2820\u4f42\u4854\u2029\u423d\u574f\u5434\u20c8\u4228\u5355\u2329\u423d\u4849\uda34\u4228\u4552\u4b41\u3d29\u5242\u5945\ucb35\u4228\u4955\u294c\u423d\u4849\ucc34\u4228\u3d29\u5dc2\u20c3\u4328\u2029\u533d\u5949\u20b4\u4328\u2948\u3d5e\u5ecb\u2845\u4843\u3d29\u28cb\u4843\u2941\u2352\u4b3d\u4845\u28b5\u4843\u3d29\uc843\u5320\u4328\u2949\u3d23\u4153\ub459\u4328\u2949\u3d41\uc853\u4328\u2949\u3d4f\uc853\u4328\u2949\u4e45\u533d\u28c8\u4943\u5954\u3d29\u4953\u5448\ud949\u4328\u2b29\ud33d\u4328\u294b\ucb3d\u4328\u4d4f\u4f4d\u4f44\u4552\u3d29\u414b\u3441\u414d\u4448\u484f\u28d2\u4f43\u294d\u4b3d\u4841\u28cd\u5543\u5449\u3d29\u494b\ud448\u4328\u4552\u2941\u4b3d\u4952\u4559\u28d9\u2943\ucb3d\uc45d\u2820\u2944\u3d20\u4944\ub459\u2820\u5244\u292e\u3d20\u4144\u3441\u544b\ud245\u3a23\u4428\u4445\u2029\u443d\u4849\u2ec4\u2845\u2944\u3d20\u23c4\u5e3a\u2845\u2944\u3d20\u20d4\u4428\u2945\u235e\u443d\uc849\u2820\u4f44\u2029\u443d\ud755\u2820\u4f44\u5345\u3d29\u4144\uda48\u4428\u4e4f\u2945\u3d20\u4144\u3548\u28ce\u4f44\u4e49\u2947\u443d\u5755\u4934\u4e48\u20d8\u4428\u574f\u3d29\u4144\u23d7\u4428\u2955\u3d41\u554a\u23d7\u4428\u2955\u235e\u4a3d\ud841\u4428\u3d29\u5dc4\u20c5\u4528\u2029\u493d\u4959\ub459\u3a23\u4528\u2029\u27bd\u5e3a\u4528\u2029\u20bd\u283a\u2945\u3d20\ud949\u2823\u4445\u2029\uc43d\u3a23\u4528\u4429\ubd20\u4528\u2956\u5245\u453d\u3448\u28d6\u2945\u255e\u493d\ub459\u4528\u4952\u2329\u493d\u3459\u4952\u28d9\u5245\u2949\u453d\u3448\u4952\u23c8\u283a\u5245\u2329\u453d\u28d2\u5245\u4f52\u2952\u453d\u3448\u4f52\ud248\u4528\u4152\u4553\u3d29\u4849\u4552\u3559\u28d3\u5245\u2329\u453d\ud248\u4528\u2952\u453d\u20d2\u4528\u4556\u294e\u493d\u5659\u4845\u23ce\u283a\u2945\ubd57\u2840\u5745\u3d29\ud755\u4528\u2957\u593d\ud755\u4528\u4f29\u493d\u23d9\u263a\u4528\u2953\u3d20\u4849\u23da\u283a\u2945\u2053\u23bd\u283a\u4c45\u2959\u3d20\u494c\u23d9\u283a\u4d45\u4e45\u2954\u4d3d\u4845\ud44e\u4528\u5546\u294c\u463d\u4855\u28cc\u4545\u3d29\u5949\u28b4\u4145\u4e52\u3d29\u5245\uce35\u2820\u4145\u2952\u3d5e\u5245\u28b5\u4145\u2944\u453d\uc448\u3a23\u4528\u2941\u3d20\u5949\ud841\u4528\u2941\u5553\u453d\ub548\u4528\u2941\u493d\ub559\u4528\u4749\u2948\u453d\ub459\u4528\u2949\u493d\ub459\u2820\u5945\u2945\u413d\ub459\u4528\u2959\u493d\u28d9\u5545\u3d29\u5559\ub557\u4528\u5551\u4c41\u3d29\u5949\u4b34\u5557\u28cc\u2945\u453d\u5dc8\u20c6\u4628\u2029\u453d\u3448\u28c6\u5546\u294c\u463d\u4855\u28cc\u5246\u4549\u444e\u3d29\u5246\u4845\u4e35\u28c4\u4146\u4854\u5245\u3d29\u4146\u3441\u4844\ud245\u4628\u4629\u28bd\u2946\uc63d\uc75d\u2820\u2947\u3d20\u494a\ub459\u4728\u5649\u3d29\u4947\u3548\u20d6\u4728\u4929\u3d5e\u28c7\u4547\u5429\u473d\u4845\u53b5\u2855\u4747\u5345\u3d29\u4a47\u4845\ud334\u4728\u2947\uc73d\u4220\u2823\u2947\uc73d\u4728\u2b29\uca3d\u4728\u4552\u5441\u3d29\u5247\u5945\ud434\u4728\u4e4f\u4529\u473d\u4f41\uce35\u2823\u4847\ubd29\u2820\u4e47\u3d29\u28ce\u2947\uc73d\uc85d\u2820\u2948\u3d20\u5945\u4334\u20c8\u4828\u5641\u3d29\u482f\u4541\ud636\u2820\u4548\u4552\u3d29\u482f\u5949\u20d2\u4828\u554f\u2952\u413d\u3557\ud245\u4828\u574f\u3d29\u482f\ud741\u4828\u2329\u2f3d\u28c8\u2948\u5dbd\u20c9\u4928\u294e\u493d\uce48\u2820\u2949\u3d20\u5941\u28b4\u2949\u3d20\ud941\u4928\u294e\u3d44\u5941\uce35\u4553\u284d\u2949\u493d\u20d9\u4e41\u2854\u2949\u413d\u28d9\u4549\u2952\u493d\u4559\u23d2\u523a\u4928\u4445\u2029\u493d\uc459\u4928\u4445\u2029\u413d\u3559\u28c4\u4549\u294e\u493d\u4559\uce48\u4928\u2945\u3d54\u5941\u4534\u28c8\u2749\u3d29\u5941\u20b5\u283a\u2949\u255e\u413d\ub559\u3a20\u4928\u2945\u3d20\u5941\u28b4\u2949\u3d25\ud949\u4928\u2945\u493d\ub459\u2820\u4449\u4145\u3d29\u5941\u4944\u3559\uc841\u4928\u5e29\u3a2b\u3d23\uc849\u4928\u2952\u3d23\u5941\u28d2\u5a49\u2529\u413d\uda59\u4928\u2953\u3d25\u5941\u49da\u285e\u2949\u235e\u493d\u2bc8\u285e\u2949\u2b5e\u413d\u23d9\u5e3a\u4928\u5e29\u3d2b\uc849\u4928\u5e29\u3d2b\ud941\u4928\u2952\u453d\u28d2\u4749\u2948\u413d\ub459\u4928\u444c\u3d29\u5941\u4c35\u20c4\u4928\u4e47\u3d29\u4849\uce47\u4928\u4e47\u2029\u413d\u3459\u28ce\u4749\u294e\u3d5e\u5941\uce34\u4928\u4e47\u2529\u413d\u3459\u28ce\u4349\u4f52\u3d29\u5941\u4b34\u4f52\u28c8\u5149\u4555\u3d29\u5949\ucb34\u4928\u3d29\uc849\uca5d\u2820\u294a\u3d20\u454a\ub459\u4a28\u3d29\u5dca\u20cb\u4b28\u2029\u4b3d\u5945\u20b4\u4b28\u4e29\u28bd\u294b\ucb3d\ucc5d\u2820\u294c\u3d20\u4845\ucc34\u4c28\u294f\u2343\u4c3d\ud74f\u284c\u294c\u23bd\u5e3a\u4c28\u2529\u553d\u28cc\u454c\u4441\u3d29\u494c\uc459\u2820\u414c\u4755\u2948\u4c3d\u4541\uc634\u4c28\u3d29\u5dcc\u20cd\u4d28\u2029\u453d\u3448\u20cd\u4d28\u2e52\u2029\u4d3d\u4849\u5334\u4554\u20d2\u4d28\u2e53\u3d29\u494d\u3548\u20da\u4d28\u5352\u292e\u3d20\u494d\u3448\u4953\uda58\u4d28\u564f\u3d29\u554d\u3457\u28d6\u414d\u4843\u4e49\u3d29\u414d\u5348\u4948\u3559\u4dce\u4d28\ubd29\u4d28\u3d29\u5dcd\u20ce\u4e28\u2029\u453d\u3448\u45ce\u4e28\u2947\u3d2b\uca4e\u4e28\u2947\u3d52\u584e\u28c7\u474e\u2329\u4e3d\uc758\u4e28\u4c47\u2529\u4e3d\u4758\ucc55\u4e28\u2947\u4e3d\u28d8\u4b4e\u3d29\u584e\u20cb\u4e28\u574f\u2029\u4e3d\u5741\u4eb4\u4e28\ubd29\u4e28\u4e4f\u4529\u4e3d\u4841\uce34\u4e28\u3d29\u5dce\u20cf\u4f28\u2029\u4f3d\u3448\u28d7\u464f\u2029\u413d\ud648\u2820\u484f\u2029\u4f3d\ub557\u4f28\u4f52\u4755\u2948\u453d\u3452\ud74f\u3a23\u4f28\u2952\u3d20\ud245\u3a23\u4f28\u5352\u2029\u453d\uda52\u4f28\u2952\u413d\ud24f\u2820\u4e4f\u2945\u573d\u4841\u23ce\u4f28\u454e\u2029\u573d\u4841\u28ce\u574f\u3d29\ud74f\u2820\u564f\u5245\u3d29\u574f\u5635\ud245\u5250\u4f28\u5629\u553d\ub457\u4f28\u2956\u413d\u3448\u28d6\u294f\u255e\u4f3d\ub557\u4f28\u5e29\u4e45\u4f3d\u28d7\u294f\u495e\u3d23\u574f\u28b5\u4c4f\u4429\u4f3d\u3457\u28cc\u554f\u4847\u2954\u413d\u354f\u28d4\u554f\u4847\u3d29\u4841\uc635\u2820\u554f\u3d29\ud741\u2848\u554f\u5329\u3d23\u5741\u28b4\u554f\u2953\u413d\ud358\u4f28\u5255\u3d29\u484f\u28d2\u554f\u444c\u3d29\u4855\uc435\u4f28\u2955\u4c5e\u413d\ub548\u4f28\u5055\u3d29\u5755\ud035\u4f28\u2955\u413d\u28d7\u594f\u3d29\ud94f\u4f28\u4e49\u2947\u4f3d\u3457\u4849\ud84e\u4f28\u2949\u4f3d\ub559\u4f28\u524f\u3d29\u484f\ud235\u4f28\u4b4f\u3d29\u4855\ucb35\u2846\u4f4f\u2944\u553d\u3557\u4cc4\u4f28\u444f\u3d29\u4841\uc435\u284d\u4f4f\u2944\u553d\u3557\u28c4\u4f4f\u2944\u553d\u3548\u46c4\u4f28\u544f\u3d29\u4855\ud435\u4f28\u294f\u553d\ub557\u4f28\u2927\u4f3d\u28c8\u294f\u3d45\ud74f\u4f28\u2029\u4f3d\u28d7\u414f\u3d29\u574f\u20b4\u4f28\u4c4e\u2959\u4f3d\u3457\u4c4e\ud949\u2820\u4e4f\u4543\u3d29\u4157\u3448\ud34e\u4f28\u274e\u2954\u4f3d\u3457\ud44e\u2843\u294f\u3d4e\uc141\u4f28\u4e29\u3d47\ucf41\u3a20\u285e\u294f\u3d4e\uc841\u2849\u4e4f\u3d29\uce55\u3a23\u4f28\u294e\u553d\u23ce\u285e\u4e4f\u3d29\uce55\u4f28\u5329\u3d54\ud74f\u4f28\u2946\u3d5e\u4f41\uc634\u4f28\u4854\u5245\u3d29\u4841\u4435\u4548\u52d2\u4f28\u4229\u523d\uc141\u525e\u4f28\u3a29\u3d23\u574f\u28b5\u534f\u2953\u3d20\u4f41\ud335\u3a23\u285e\u4d4f\u3d29\u4841\u28cd\u294f\u413d\u5dc1\u20d0\u5028\u2029\u503d\u5949\u28b4\u4850\u3d29\u28c6\u4550\u504f\u294c\u503d\u5949\u5035\ucc55\u5028\u574f\u3d29\u4150\ub457\u5028\u5455\u2029\u503d\u4855\u28d4\u2950\ubd50\u5028\u5329\u28bd\u2950\ubd4e\u5028\u4f52\u2e46\u3d29\u5250\u484f\u4546\u3448\u4553\u28d2\u2950\ud03d\ud15d\u2820\u2951\u3d20\u594b\u5755\u28b4\u5551\u5241\u3d29\u574b\u484f\ud235\u5128\u2955\u4b3d\u28d7\u2951\ucb3d\ud25d\u2820\u2952\u3d20\u4141\ud235\u2820\u4552\u5e29\u3d23\u4952\u28d9\u2952\ubd52\u5228\u3d29\u5dd2\u20d3\u5328\u2029\u453d\u3448\u28d3\u4853\u3d29\uc853\u2823\u4953\u4e4f\u3d29\u485a\uce55\u5328\u4d4f\u2945\u533d\u4841\u23cd\u5328\u5255\u2329\u5a3d\u4548\u28d2\u5553\u2952\u3d23\u4853\ud245\u2823\u5553\u2329\u5a3d\u5548\u23d7\u5328\u5553\u2329\u533d\u5548\u23d7\u5328\u4445\u3d29\uc45a\u2823\u2953\u3d23\u28da\u4153\u4449\u3d29\u4553\uc448\u285e\u4953\u4e4f\u3d29\u4853\uce55\u5328\u5329\u2ebd\u5328\u2029\uda3d\u3a23\u452e\u5328\u2029\uda3d\u3a23\u235e\u5328\u2029\ud33d\u2855\u2953\u3d20\u20d3\u233a\u5328\u2029\uda3d\u2323\u5328\u2029\uda3d\u2820\u4353\u2948\u533d\u28cb\u2953\u2b43\u23bd\u5328\u294d\u5a3d\ucd55\u2823\u4e53\u2729\u5a3d\ucd55\u5328\u4c54\u2945\u533d\ucc55\u5328\u3d29\u5dd3\u20d4\u5428\u2029\u543d\u5949\u20b4\u5428\u4548\u2029\u3d23\u4844\ud949\u2820\u4854\u2945\u3d20\u4844\ud841\u5428\u294f\u3d20\u5554\u20d8\u5428\u4148\u2954\u443d\u4148\ud445\u2820\u4854\u5349\u2029\u443d\u4948\ud348\u2820\u4854\u5945\u3d29\u4844\ud945\u2820\u4854\u5245\u2945\u443d\u4548\ud248\u5428\u4548\u2952\u443d\u4548\u28d2\u4854\u4945\u2952\u443d\u4548\ud248\u2820\u4854\u4e41\u2029\u443d\u4148\uce45\u2820\u4854\u4d45\u2029\u443d\u4148\uce45\u5428\u4548\u4553\u2029\u443d\u4948\uda59\u2820\u4854\u4e45\u3d29\u4844\u4845\u28ce\u4854\u4f52\u4755\u2948\u543d\u5248\u5755\u28b4\u4854\u534f\u2945\u443d\u4f48\uda48\u5428\u4f48\u4755\u2948\u3d20\u4844\ud74f\u5428\u444f\u5941\u3d29\u5554\u4458\ud945\u5428\u4d4f\u294f\u5252\u574f\u543d\u4d55\u4141\u28b5\u4f54\u5429\u4c41\u543d\u574f\u20b5\u5428\u5548\u2953\u443d\u4148\u3448\u28d3\u4854\u3d29\uc854\u3a23\u5428\u4445\u3d29\u4954\uc458\u2853\u4954\u2329\u3d4e\uc843\u5428\u2949\u3d4f\uc853\u5428\u2949\u3d41\uc853\u5428\u4549\u294e\u533d\u5548\u28ce\u5554\u2952\u3d23\u4843\ud245\u5428\u2955\u3d41\u4843\ud755\u2820\u5754\u294f\u543d\ud755\u2826\u2954\u4e45\ubd20\u5428\u3d29\u5dd4\u20d5\u5528\u2029\u593d\u5755\u20b4\u5528\u294e\u3d49\u5559\uce57\u2820\u4e55\u3d29\u4841\u20ce\u5528\u4f50\u294e\u413d\u5058\u4f41\u40ce\u5528\u2952\u3d23\u4855\ud234\u5528\u2952\u3d23\u5559\u3448\u28d2\u5255\u3d29\ud245\u5528\u5e29\u3d20\uc841\u5528\u5e29\u3d5e\u4841\u28b5\u5955\u3d29\u5941\u20b5\u2847\u2955\ubd23\u2847\u2955\ubd25\u2847\u2955\u3d23\u23d7\u284e\u2955\u593d\ud755\u2840\u2955\u553d\u28d7\u2955\u593d\ud755\ud65d\u2820\u2956\u3d20\u4956\ub459\u5628\u4549\u2957\u563d\u5559\ub557\u5628\u3d29\u5dd6\u20d7\u5728\u2029\u443d\u4841\u4234\u4c55\u5559\u20d7\u5728\u5245\u2945\u573d\ud245\u5728\u2941\u4853\u573d\uc141\u5728\u2941\u5453\u573d\ud945\u5728\u2941\u3d53\u4157\u28c8\u4157\u5429\u573d\uc141\u5728\u4548\u4552\u3d29\u4857\u4845\u28d2\u4857\u5441\u3d29\u4857\u4841\u28d4\u4857\u4c4f\u3d29\u482f\u574f\u28cc\u4857\u294f\u2f3d\u5548\u28d7\u4857\u3d29\uc857\u5728\u5241\u2329\u573d\u4845\u28d2\u4157\u2952\u573d\u4f41\u28d2\u4f57\u2952\u3d5e\u4557\u28d2\u5257\u3d29\u28d2\u4f57\u294d\u3d41\u5557\ucd48\u5728\u4d4f\u4529\u573d\u4849\u28cd\u4557\u2941\u3d52\u4557\u28c8\u4157\u544e\u3d29\u4157\u3541\ud44e\u4e41\u2853\u4557\u2952\u453d\u28d2\u2957\ud73d\ud85d\u2820\u2958\u3d20\u4845\u4b34\u20d2\u5828\u3d29\u28da\u2958\u4b3d\u5dd3\u20d9\u5928\u2029\u573d\u5941\u28b4\u4f59\u4e55\u2947\u593d\u4841\ud84e\u2820\u4f59\u5255\u3d29\u4f59\ud248\u2820\u4f59\u2955\u593d\ud755\u2820\u4559\u2953\u593d\u4845\u20d3\u5928\u3d29\u46d9\u5928\u3d29\ud941\u5350\u5928\u4843\u3d29\u5941\u23cb\u5e3a\u5928\u3d29\ud949\u3a23\u285e\u2959\u3d49\ud949\u3a20\u5928\u2029\u413d\u20d9\u283a\u2959\u3d23\ud941\u3a20\u5928\u5e29\u3a2b\u3d23\uc849\u3a20\u5928\u5e29\u3d23\ud941\u5928\u3d29\uc849\uda5d\u2820\u295a\u3d20\u495a\ub459\u5a28\u3d29\ueada\u0000\u0000\u4128\ubd29\u2128\u3d29\u28ae\u2922\u3d20\u412d\u3548\u4b4e\u4f57\u5457\u28ad\u2922\u4b3d\u4f57\u3457\uad54\u2328\u3d29\u4e20\u4841\u4d34\u4542\u28d2\u2924\u203d\u4144\u3441\u454c\u28d2\u2925\u203d\u4550\u5352\u4845\u4e34\u28d4\u2926\u203d\u4541\uc44e\u2728\ubd29\u2a28\u3d29\u4120\u3445\u5453\u5245\u4849\ucb53\u2b28\u3d29\u5020\u414c\u3448\u28d3\u292c\uac3d\u2820\u292d\u3d20\u28ad\u292d\u28bd\u292e\u203d\u4f50\u4e59\u28d4\u292f\u203d\u4c53\u4541\u5334\u28c8\u2930\u203d\u495a\u3459\u4f52\u20d7\u3128\u5453\u3d29\u4546\u3452\ud453\u2820\u3031\u4854\u3d29\u4554\u3448\u544e\u28c8\u2931\u203d\u4157\u3448\u20ce\u3228\u444e\u3d29\u4553\u3448\u554b\uc44e\u3228\u3d29\u5420\u5755\u20b4\u3328\u4452\u3d29\u4854\u5245\uc434\u3328\u3d29\u5420\u5248\u5949\u28b4\u2934\u203d\u4f46\u3448\u20d2\u3528\u4854\u3d29\u4946\u3448\u5446\u28c8\u2935\u203d\u4146\u3459\u20d6\u3628\u2934\u3d20\u4953\u3448\u534b\u4954\u2059\u4f46\ud248\u3628\u3d29\u5320\u4849\u4b34\u28d3\u2937\u203d\u4553\u3448\u5556\u20ce\u3828\u4854\u3d29\u5945\u5434\u28c8\u2938\u203d\u5945\ud434\u3928\u3d29\u4e20\u5941\uce34\u3a28\u3d29\u28ae\u293b\uae3d\u3c28\u3d29\u4c20\u4845\u5334\u4420\u4148\uce45\u3d28\u3d29\u4920\u3459\u574b\u4c55\u28da\u293e\u203d\u5247\u5945\u5434\u5245\u4420\u4148\uce45\u3f28\u3d29\u28bf\u2940\u203d\u4541\ud436\u5e28\u3d29\u4b20\u4541\u5234\u5849\u5dd4\u00c1\u9500\ua2f7\uc539\u7e06\u26c7\u4e37\uf191\ua155\u24fe\u2d45\u36a7\u2e53\uda47\u0000\u0000\u0000\u7e7d\u7f7e\u8180\u8282\u8482\u8484\u8484\u8785\u8887\u8988\u8b8a\u8c8b\u8c8c\u312a\u3332\u3534\u3736\u0038\u0000\u0000\u0000\u0000\u0000\u0000\u2e20\u2c3f\u492d\u4549\u4141\u4141\u4155\u4549\u4f55\u4c52\u5957\u5257\u574c\u4d59\u4e4e\u5144\u5353\u5446\u2f2f\u5a5a\u4456\u2a43\u2a4a\u2a2a\u4145\u414f\u554f\u2a42\u442a\u2a2a\u2a47\u472a\u2a2a\u2a50\u542a\u2a2a\u2a4b\u4b2a\u2a2a\u5555\u0055\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u2a2a\u2a2a\u592a\u4848\u4145\u4f48\u5848\u5258\u4858\u5858\u5858\u2a48\u2a2a\u2a2a\u582a\u2a58\u482a\u482a\u5848\u482a\u482a\u2a48\u2a2a\u2a2a\u5959\u5759\u5757\u2a2a\u2a2a\u2a2a\u2a2a\u582a\u2a2a\u2a2a\u2a2a\u2a2a\u2a2a\u582a\u2a2a\u4d4c\u004e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\ua400\ua4a4\ua4a4\u84a4\ua484\u84a4\u8484\u8484\u8484\u4444\u4444\u4c44\u4c4c\u4c48\u4040\u4040\u4040\u4444\u4444\u4048\u444c\u0000\ub4b4\u94b4\u9494\u4e4e\u4e4e\u4e4e\u4e4e\u4e4e\u4e4e\u4b4b\u4b4b\u4b4b\u4b4b\u4b4b\u4b4b\uc180\u00c1\u0000\u0000\u0000\u0000\u0000\u0000\u0000\uc180\uc1c1\u00c1\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u1000\u1010\u0810\u080c\u4004\u2024\u2420\u0000\u2024\u2420\u2020\u2000\u0000\u0000\u0000\u0000\u0000\u0400\u0404\u0000\u0000\u0000\u0000\u0400\u0404\u0000\u0000\u0000\u0000\u1200\u1212\u0b08\u0b09\u0f0e\u100b\u060c\u0e06\u0e0c\u0b0c\u0808\u0a0b\u0809\u0808\u0808\u0503\u0202\u0202\u0202\u0606\u0608\u0206\u0409\u0102\u0f0e\u0f0f\u0e0e\u0208\u0702\u0102\u0207\u0702\u0202\u0208\u0602\u0202\u0207\u0704\u0401\u0505\u1200\u1212\u0808\u0808\u0b08\u0c06\u050a\u0b05\u0a0a\u090a\u0708\u0709\u0806\u0706\u0707\u0502\u0202\u0202\u0202\u0606\u0607\u0206\u0308\u1e01\u0c0d\u0c0c\u090e\u0106\u0502\u0101\u0106\u0602\u0201\u0208\u0402\u0202\u0106\u0604\u0401\uffc7\u2b2d\u2020\u3020\u3058\u0078\u7245\u6f72\u2072\u6572\u6461\u6e69\u2067\u6f74\u7420\u6261\u656c\u0073\u6e28\u6c75\u296c\u2000\u3e2d\u0020\u7041\u6c70\u6979\u676e\u7220\u6c75\u3a65\u0020\u6920\u7864\u2020\u2020\u6870\u6e6f\u6d65\u2065\u6c20\u6e65\u7467\u2068\u7320\u7274\u7365\u0a73\u4500\u7272\u726f\u7720\u6972\u6974\u676e\u7420\u206f\u6174\u6c62\u7365\u000a\u6850\u6e6f\u6d65\u7365\u203a\u7325\u000a\u5552\u454c\u203a\u6e49\u6573\u7472\u6720\u6f6c\u7474\u6c61\u7320\u6f74\u2070\u6562\u7774\u6565\u206e\u7774\u206f\u7473\u6572\u7373\u6465\u7620\u776f\u6c65\u2073\u6977\u6874\u7320\u6170\u6563\u6220\u7465\u6577\u6e65\u7420\u6568\u0a6d\u2500\u6935\u2520\u6935\u2520\u6935\u2520\u6935\u2520\u6935\u2520\u6935\u2520\u6935\u2520\u6935\u000a\u2520\u6933\u2020\u2020\u2020\u6325\u6325\u2020\u2020\u2020\u3325\u2069\u2020\u2020\u2020\u6925\u000a\u2520\u6933\u2020\u2020\u2020\u3f3f\u2020\u2020\u2020\u3325\u2069\u2020\u2020\u2020\u6925\u000a\u5552\u454c\u203a\u563c\u574f\u4c45\u203e\u553c\u564e\u494f\u4543\u2044\u4c50\u534f\u5649\u3e45\u2d20\u6420\u6365\u6572\u7361\u2065\u6f76\u6577\u206c\u7962\u3120\u382f\u6874\u000a\u6620\u616c\u7367\u6120\u706d\u316c\u6620\u6572\u3171\u6120\u706d\u326c\u6620\u6572\u3271\u6120\u706d\u336c\u6620\u6572\u3371\u7020\u7469\u6863\u000a\u5552\u454c\u203a\u6e69\u6573\u7472\u5920\u2058\u6f66\u6c6c\u776f\u6e69\u2067\u6964\u6870\u6f74\u676e\u6520\u646e\u6e69\u2067\u6e69\u4920\u2059\u6f73\u6e75\u0a64\u5200\u4c55\u3a45\u6920\u736e\u7265\u2074\u5857\u6620\u6c6f\u6f6c\u6977\u676e\u6420\u7069\u7468\u6e6f\u2067\u4f4e\u2054\u6e65\u6964\u676e\u6920\u206e\u5949\u7320\u756f\u646e\u000a\u6870\u6e6f\u6d65\u2065\u6425\u2820\u6325\u6325\u2029\u656c\u676e\u6874\u2520\u0a64\u2500\u3a64\u2520\u2563\u0a63\u5200\u4c55\u3a45\u5320\u202a\u6325\u6325\u2d20\u203e\u2a53\u2520\u2563\u0a63\u5200\u4c55\u3a45\u4720\u5320\u2d20\u203e\u2047\u0a5a\u5200\u4c55\u3a45\u3c20\u4c41\u4556\u4c4f\u5241\u203e\u5755\u2d20\u203e\u413c\u564c\u4f45\u414c\u3e52\u5520\u0a58\u5200\u4c55\u3a45\u5220\u2d20\u203e\u5852\u000a\u5552\u454c\u203a\u563c\u574f\u4c45\u203e\u204c\u3e2d\u3c20\u4f56\u4557\u3e4c\u4c20\u0a58\u5200\u4c55\u3a45\u5320\u666f\u6574\u206e\u2054\u726f\u4420\u6620\u6c6f\u6f6c\u6977\u676e\u7620\u776f\u6c65\u6f20\u2072\u5245\u6120\u646e\u7020\u6572\u6563\u6964\u676e\u6120\u7020\u7561\u6573\u2d20\u203e\u5844\u000a\u4f50\u5453\u000a\u5552\u454c\u203a\u2044\u2052\u3e2d\u4a20\u5220\u000a\u5552\u454c\u203a\u2054\u2052\u3e2d\u4320\u2048\u0a52\u5200\u4c55\u3a45\u5520\u204e\u3e2d\u4120\u2058\u0a4e\u5200\u4c55\u3a45\u5520\u204d\u3e2d\u4120\u2058\u0a4d\u5200\u4c55\u3a45\u5520\u204c\u3e2d\u4120\u2058\u0a4c\u5000\u4552\u000a\u5552\u454c\u203a\u204b\u563c\u574f\u4c45\u4f20\u2052\u4944\u4850\u4f54\u474e\u4e20\u544f\u4520\u444e\u4e49\u2047\u4957\u4854\u4920\u3e59\u2d20\u203e\u584b\u3c20\u4f56\u4557\u204c\u524f\u4420\u5049\u5448\u4e4f\u2047\u4f4e\u2054\u4e45\u4944\u474e\u5720\u5449\u2048\u5949\u0a3e\u5200\u4c55\u3a45\u4720\u3c20\u4f56\u4557\u204c\u524f\u4420\u5049\u5448\u4e4f\u2047\u4f4e\u2054\u4e45\u4944\u474e\u5720\u5449\u2048\u5949\u203e\u3e2d\u4720\u2058\u563c\u574f\u4c45\u4f20\u2052\u4944\u4850\u4f54\u474e\u4e20\u544f\u4520\u444e\u4e49\u2047\u4957\u4854\u4920\u3e59\u000a\u3d3d\u3d3d\u3d3d\u3d3d\u3d3d\u3d3d\u3d3d\u3d3d\u3d3d\u3d3d\u3d3d\u3d3d\u3d3d\u3d3d\u3d3d\u3d3d\u3d3d\u3d3d\u3d3d\u3d3d\u3d3d\u0a3d\u5200\u4c55\u3a45\u3c20\u414e\u4153\u3e4c\u3c20\u5453\u504f\u4320\u4e4f\u4f53\u414e\u544e\u203e\u202d\u6573\u2074\u616e\u6173\u206c\u203d\u2c35\u6320\u6e6f\u6f73\u616e\u746e\u3d20\u3620\u000a\u5552\u454c\u203a\u654c\u676e\u6874\u6e65\u3c20\u5246\u4349\u5441\u5649\u3e45\u6f20\u2072\u563c\u494f\u4543\u3e44\u6220\u7465\u6577\u6e65\u3c20\u4f56\u4557\u3e4c\u6120\u646e\u3c20\u5550\u434e\u5554\u5441\u4f49\u3e4e\u6220\u2079\u2e31\u0a35\u5000\u7261\u6573\u3272\u000a\u5552\u454c\u203a\u4c3c\u5149\u4955\u2044\u4f43\u534e\u4e4f\u4e41\u3e54\u3c20\u4944\u4850\u4f54\u474e\u203e\u202d\u6564\u7263\u6165\u6573\u6220\u2079\u0a32\u4a00\u2d20\u203e\u204a\u2b4a\u0a31\u4300\u2048\u3e2d\u4320\u2048\u4843\u312b\u000a\u5552\u454c\u203a\u563c\u574f\u4c45\u203e\u523c\u2058\u207c\u584c\u203e\u433c\u4e4f\u4f53\u414e\u544e\u203e\u202d\u6564\u7263\u6165\u6573\u6c20\u6e65\u7467\u2068\u7962\u3120\u000a\u5552\u454c\u203a\u563c\u574f\u4c45\u203e\u563c\u494f\u4543\u2044\u4f43\u534e\u4e4f\u4e41\u3e54\u2d20\u6920\u636e\u6572\u7361\u2065\u6f76\u6577\u206c\u7962\u3120\u322f\u2b20\u3120\u000a\u5552\u454c\u203a\u553c\u564e\u494f\u4543\u2044\u5453\u504f\u4320\u4e4f\u4f53\u414e\u544e\u203e\u6f7b\u7470\u6f69\u616e\u206c\u6973\u656c\u636e\u7d65\u3c20\u5453\u504f\u4320\u4e4f\u4f53\u414e\u544e\u203e\u202d\u6873\u726f\u6574\u206e\u6f62\u6874\u7420\u206f\u2f31\u2032\u202b\u0a31\u2d00\u2d2d\u2d2d\u2d2d\u2d2d\u2d2d\u2d2d\u2d2d\u2d2d\u2d2d\u2d2d\u2d2d\u2d2d\u2d2d\u2d2d\u2d2d\u2d2d\u2d2d\u2d2d\u2d2d\u2d2d\u2d2d\u2d2d\u2d2d\u0a2d\u4600\u6e69\u6c61\u6420\u7461\u2061\u6f66\u2072\u7073\u6565\u6863\u6f20\u7475\u7570\u3a74\u0a0a\u4900\u746e\u7265\u616e\u206c\u6850\u6e6f\u6d65\u2065\u7270\u7365\u6e65\u6174\u6974\u6e6f\u0a3a\u000a\u1a18\u1717\u0017\ue000\uece6\uf9f3\u0600\u060c\u0000\u0000\u0000\u0000\u0100\u0202\u0302\u0403\u0504\u0806\u0b09\u0f0d\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u1f00\u1f1f\u021f\u0202\u0202\u0202\u0202\u0505\u0a02\u0802\u0505\u0a0b\u0809\ua008\u0808\u1f17\u1212\u1212\u1e1e\u1414\u1414\u1717\u1a1a\u1d1d\u0202\u0202\u0202\u1d1a\u1a1b\u1b1d\u1d1a\u1a1b\u1b1d\u1d17\u1717\u171d\u1d17\u1717\u171d\u1717\u0200\u0202\u0402\u0404\u0404\u0404\u0404\u0404\u0404\u0203\u0404\u0202\u0202\u0102\u0101\u0101\u0101\u0101\u0101\u0202\u0102\u0100\u0100\u0500\u0505\u0505\u0404\u0002\u0201\u0100\u0002\u0201\u0100\u0002\u0202\u0100\u0003\u0302\u0200\ua0a0\u0200\u0202\u0402\u0404\u0404\u0404\u0404\u0404\u0404\u0303\u0404\u0303\u0303\u0103\u0302\u0102\u0303\u0303\u0101\u0303\u0203\u0302\u0302\u0000\u0505\u0505\u0404\u0002\u0202\u0300\u0002\u0204\u0300\u0002\u0202\u0200\u0003\u0303\u0300\ua0b0\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\ue2f1\ubbd3\u957c\u0201\u0303\u7200\u0200\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u1b00\u0000\u0019\u0000\u0000\u0000\u0000\u0000\u0000\u0d00\u0e0d\u0f0f\u0f0f\u0c0f\u0c0d\u0f0f\u0d0d\u0e0d\u0c0d\u0d0d\u0c0d\u0909\u0000\u0000\u0000\u0000\u0b0b\u0b0b\u0000\u0b01\u0200\u0f0e\u0f0f\u0d0f\u0402\u0200\u0004\u0401\u0100\u0004\u0000\u0000\u0000\u0c00\u0000\u0000\u0f0f\u0000\u0000\u0a00\u0d0b\u0d0e\u0c0c\u090b\u0b0b\u0c0c\u080c\u0c08\u0a08\u0808\u030a\u0609\u0000\u0000\u0000\u0000\u0503\u0403\u0000\u0500\u020a\u0d0e\u0d0c\u080c\u0100\u0000\u0001\u0100\u0000\u0001\u0000\u0000\u0000\u0a00\u0000\u000a\u0000\u0000\u0000\u0800\u0807\u0108\u0001\u0001\u0507\u0001\u0106\u0700\u0500\u0001\u0008\u0300\u0000\u0000\u0000\u0000\u0100\u0000\u0000\u0100\u010e\u0109\u0100\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0700\u0000\u0005\u1013\u0300\u0906\u100c\u1613\u1c19\u221f\u2825\u2e2b\u3331\u3936\u3f3c\u4441\u4947\u4e4c\u5351\u5855\u5c5a\u605e\u6462\u6866\u6b6a\u6f6d\u7170\u7473\u7675\u7978\u7a7a\u7c7b\u7d7d\u7e7e\u7f7e\u7f7f\u7f7f\u7f7f\u7e7e\u7d7e\u7c7d\u7a7b\u797a\u7678\u7475\u7173\u6f70\u6b6d\u686a\u6466\u6062\u5c5e\u585a\u5355\u4e51\u494c\u4447\u3f41\u393c\u3336\u2e31\u282b\u2225\u1c1f\u1619\u1013\u090c\u0306\ufd00\uf7fa\uf0f4\ueaed\ue4e7\udee1\ud8db\ud2d5\ucdcf\uc7ca\uc1c4\ubcbf\ub7b9\ub2b4\uadaf\ua8ab\ua4a6\ua0a2\u9c9e\u989a\u9596\u9193\u8f90\u8c8d\u8a8b\u8788\u8686\u8485\u8383\u8282\u8182\u8181\u8181\u8181\u8282\u8382\u8483\u8685\u8786\u8a88\u8c8b\u8f8d\u9190\u9593\u9896\u9c9a\ua09e\ua4a2\ua8a6\uadab\ub2af\ub7b4\ubcb9\uc1bf\uc7c4\ucdca\ud2cf\ud8d5\udedb\ue4e1\ueae7\uf0ed\uf7f4\ufdfa\u9090\u9090\u9090\u9090\u9090\u9090\u9090\u9090\u9090\u9090\u9090\u9090\u9090\u9090\u9090\u9090\u9090\u9090\u9090\u9090\u9090\u9090\u9090\u9090\u9090\u9090\u9090\u9090\u9090\u9090\u9090\u9090\u9090\u9090\u9090\u9090\u9090\u9090\u9090\u9090\u9090\u9090\u9090\u9090\u9090\u9090\u9090\u9090\u9090\u9090\u9090\u9090\u9090\u9090\u9090\u9090\u9090\u9090\u9090\u9090\u9090\u9090\u9090\u9090\u7070\u7070\u7070\u7070\u7070\u7070\u7070\u7070\u7070\u7070\u7070\u7070\u7070\u7070\u7070\u7070\u7070\u7070\u7070\u7070\u7070\u7070\u7070\u7070\u7070\u7070\u7070\u7070\u7070\u7070\u7070\u7070\u7070\u7070\u7070\u7070\u7070\u7070\u7070\u7070\u7070\u7070\u7070\u7070\u7070\u7070\u7070\u7070\u7070\u7070\u7070\u7070\u7070\u7070\u7070\u7070\u7070\u7070\u7070\u7070\u7070\u7070\u7070\u7070\u8438\u196b\u63c6\u8618\u9873\ub1c6\uca1c\u8c31\u31c7\uc288\u9830\u3146\uc618\u0c35\u31ca\uc60c\u1021\u6924\uc212\u1431\u71c4\u4a08\u4922\u6aab\uaca8\u5149\ud532\u8852\u6c93\u2294\u5415\u25d2\ud496\ua550\u2146\u8508\u186b\u63c4\uce10\u186b\u718c\u8c19\u3563\uc60c\u9933\u6ccc\u4eb5\u99a2\u2146\u8228\u2e95\u30e3\uc59c\u9c30\ub1a2\u679c\u8831\u5966\u532c\u8418\u5067\ue3ca\uac0a\u30ab\u62ac\u8c30\u1063\u6294\u8cb1\u2882\u3396\ud698\u4cb5\u2962\u4aa5\u9cb5\u31c6\ud614\u9c38\ub44b\u6586\uae18\u1c67\u63a6\u9619\u1923\u1384\ua608\uac52\u22ca\u6e89\u19ab\u628c\uc434\u1962\u6386\uc418\u5823\ua3d6\u4250\u4a54\u4aad\u1125\u646b\u4a89\u3963\u238a\u2a31\ua2ea\u44a9\u12c5\u42cd\u8c34\u1862\u638c\u4811\u3166\u449d\u1d33\u3146\uc69c\u0cb1\u32cd\uc488\u1873\u7386\ud608\u5863\u8107\uf0e0\u073c\u9087\u7c3c\uc70f\uc0c0\u7cf0\u071e\u8080\u1c00\u7078\uc7f1\uc01f\ufe0c\u1f1c\u0e1f\u7a0a\u71c0\u83f2\u038f\u0f0f\u000c\uf879\ue061\u0f43\ue783\uf918\u13c1\ue9da\u8f63\u830f\u8783\u1fc3\u703c\ue1f0\ue3e1\ub887\u0e71\ue320\u488d\u1c78\u8793\ue130\uc1c1\u78e4\u8321\uc383\u0687\ue539\u87c3\u0e07\u1c1c\uf470\u9c71\u3660\uc332\u3c1e\u8ff3\u3c0e\ue370\u8fc7\u0f0f\u3c0e\uf078\u87e3\uf006\u07e3\u99c1\u0f87\u7818\u7070\uf3fc\ub110\u8c8c\u7c31\ue170\u3c86\u6c64\ue1b0\u0fe3\u8f23\u1e0f\u383e\u383c\u8f7b\u0e07\uf43c\u1e17\u783c\u9ef2\u4972\u25e3\u3836\u3958\udee2\u783c\ue178\u61c7\ue1e1\uf0b0\uc3f0\u0ec7\uc038\ucef0\u7373\u3418\ue1b0\u8ec7\u3c1c\u38f8\ue1f0\u8bc1\u8f86\u781c\uf070\uac78\u8fb1\u3139\u38db\uc361\u0e0e\u7838\u1773\u391e\u381e\ue164\uc1f1\u0f4e\ua240\uc502\u818f\ufca1\u0812\ue064\u223c\u45e0\u8e07\u320c\uf090\u201f\ue049\u0cf8\uf060\u1a17\uaa41\ud0a4\u128d\u1e82\u031e\u3ef8\u0c03\u8073\u4470\u0326\ue124\u043e\u044e\uc11c\ucc09\u909e\u0721\u4390\uc064\uc60f\u9c90\u5bc1\ue203\u811d\u5ee0\u031d\ub884\u0f2c\ub180\ue083\u4130\u431e\u8389\ufc50\u2e24\u8313\u7cf1\u2c4c\u0dc9\ub083\u82b5\ue8e4\u9c06\ua007\u1d99\u3e07\u8f82\u3070\u4074\u10ca\ue8e4\u920f\u3f14\uf806\u8884\u8143\u340a\u4139\ue3c6\u471c\ub003\u13b8\uc20a\uf864\uf918\ub360\u65c0\u6020\u8ca6\u81c3\u3020\u1e26\u381c\u01d3\u26b0\uf440\uc30b\u1f42\u3285\u6026\uc940\u01cb\u11ec\u4028\u04fa\ue034\u4c70\u1d8c\u6907\u1603\u04c8\ue823\u9ac6\u1a0b\ue003\u0676\ucf05\ubc1e\u3158\u6671\uf800\u043f\u0cfc\u2774\u808a\uc271\u263a\uc006\u051f\u980f\uae40\u7f01\u07c0\u00ff\ufe0e\u0300\u80df\uef03\u1b80\uc2f1\ue700\u18e0\ue0fc\ufc21\u3c80\u40fc\u7e0e\u3f00\u003e\ufe0f\u1f00\u00ff\uf03e\ufc07\u7e00\u3f10\u00ff\u383f\u7c0e\u8701\ufc0c\u00c7\u043e\u3e0f\u0f1f\u1f0f\u020f\u8783\u03cf\u0f87\uc03f\u9e07\u3f60\u03c0\u00fe\ue03f\ue177\ufec0\uc3e0\u01e0\uf8df\u0703\u7e00\u0070\u387c\ufe18\u1e0c\u1c78\u3e7c\u1f0e\u1e1e\u003e\u837f\udb07\u8387\uc707\u1007\uff71\u3f00\u01e2\uc1e0\ue1c3\u7f00\u05c0\u20f0\uf0f8\ufe70\u7978\u02f8\u0c3f\u038f\u9f0f\uc1e0\u87c7\uc303\ub0c3\ue1e1\ue3c1\u71e0\u00f0\u70fc\u0c7c\u383e\u1c0e\uc370\u03c7\uc181\ue7c7\u0f00\u87c7\u0919\uc4ef\ue033\ufcc1\u70f8\u78f0\uf0f8\uc761\u1f00\u01f8\uf87c\u78f0\u3c70\uce7c\u210e\ucf83\u0708\u088f\u87c1\u808f\ue3c7\u0700\ue0f8\u00ef\uf739\u0e80\ue1f8\uf8e3\u9f21\uffc0\uf803\uc007\uf81f\u04c4\uc4fc\ubcc1\uf087\uc00f\u057f\u25e0\uc0ec\u843e\uf047\u038e\u03f8\uc0fb\uf819\u9c07\u170c\u07f8\u1fe0\ufca1\ufc0f\uf001\u003f\u03fe\u1ff0\ufd00\uff00\u0d88\u01f9\u00ff\u0770\u3ec0\uf342\uc40d\u807f\u07fc\u5ef0\u3fc0\u7800\u813f\u01ff\u01f8\ue8c3\ue40c\u8f64\u0fe4\u07f0\uc2f0\u001f\uc07f\u806f\u037e\u07f8\u3ff0\u78c0\u820f\ufe07\u7722\u0270\u0376\u00fe\u67fe\u7c00\uf1c7\uc68e\ue03b\u843f\u19f3\u03d8\ufc99\ub809\uf80f\u9d00\u6124\u0df9\ufd00\uf003\u901f\u013f\u1ff8\u0fd0\u37f8\uf801\uf007\uc00f\u003f\u03fe\u0ff8\u3fc0\ufa00\uf003\u800f\u01ff\u07b8\u01f0\u01fc\u80bc\u1e13\u7f00\u40e1\ua07f\ub07f\u3f00\u1fc0\u38c0\uf00f\u801f\u01ff\u03fc\u7ef1\ufe01\uf001\u00ff\uc07f\u071d\u0ff0\u7ec0\ue006\ue007\uf80f\uc106\u01fe\u03fc\u0fe0\ufc00\u0000\u0000\u0a00\u130e\u1b18\u1517\u1410\u120e\u120e\u1012\u0f0d\u120b\u0b0e\u0609\u0606\u0000\uffff\uffff\u54ff\u4349\u283f\u1f2c\u2d25\u3149\u1e24\u2533\u451d\u3218\u181e\u2e53\u5636\u1b13\u1b15\u0d12\u2748\u2b1f\u221e\u0000\ue668\u0000\u0019\u000a\u1919\u0019\u0000\u0500\u0000\u0000\u0000\u0009\u0000\u0b00\u0000\u0000\u0000\u0000\u0019\u0a11\u1919\u0319\u070a\u0100\u0900\u180b\u0000\u0609\u000b\u0b00\u0600\u0019\u0000\u1919\u0019\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0e00\u0000\u0000\u0000\u0000\u0019\u0d0a\u1919\u0019\u000d\u0200\u0900\u000e\u0000\u0009\u000e\u0e00\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0c00\u0000\u0000\u0000\u0000\u0000\u1300\u0000\u0000\u0013\u0000\u0900\u000c\u0000\u0000\u000c\u0c00\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u1000\u0000\u0000\u0000\u0000\u0000\u0f00\u0000\u0400\u000f\u0000\u0900\u0010\u0000\u0000\u0010\u1000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u1200\u0000\u0000\u0000\u0000\u0000\u1100\u0000\u0000\u0011\u0000\u0900\u0012\u0000\u0000\u0012\u1200\u0000\u001a\u0000\u1a1a\u001a\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u0000\u1a1a\u001a\u0000\u0000\u0900\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u1400\u0000\u0000\u0000\u0000\u0000\u1700\u0000\u0000\u0017\u0000\u0900\u0014\u0000\u0000\u0014\u1400\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u1600\u0000\u0000\u0000\u0000\u0000\u1500\u0000\u0000\u0015\u0000\u0900\u0016\u0000\u0000\u0016\u1600\u0000\u3130\u3332\u3534\u3736\u3938\u4241\u4443\u4645";
  
  private val data_segment_data_1: String = "\u4048\u8080\u0000\u0000\u0000\u0000\u0000\u0000\u1300\u1313\u0a13\u120e\u1a18\u1416\u1410\u120e\u120e\u1012\u0e0c\u120a\u0a0e\u0608\u0606\u1106\u0606\u0606\u100e\u0a09\u0a08\u0606\u0506\u0006\u1a12\u1a14\u0c12\u0606\u0606\u0606\u0606\u0606\u0606\u0606\u0606\u0606\u0a06\u060a\u0606\u132c\u4300\u4343\u5443\u4248\u283e\u1e2c\u2c24\u3048\u1e24\u2432\u441c\u3218\u181e\u2e52\u5636\u4336\u4f49\u421a\u2549\u4233\u2f28\u4f4f\u4f42\u006e\u2648\u2a1e\u221e\u1a1a\u421a\u4242\u6e6e\u546e\u5454\u1a1a\u421a\u4242\u566d\u546d\u5454\u7f7f\u5b00\u5b5b\u6e5b\u5b5d\u5958\u5857\u5952\u3e5d\u5852\u6e3e\u5d50\u3c5a\u5a6e\u516e\u6579\u5b79\u6a63\u7951\u525d\u675d\u5d4c\u6565\u6579\u0079\u585a\u5858\u5258\u5151\u7951\u7979\u6e70\u5e6e\u5e5e\u5151\u7951\u7979\u6565\u5e70\u5e5e\u0108\u00a2\u0000\u00a7\u0000\u00a7\u0000\u007f\u0000\u0080\u0000\u00e2\u0000\u003c\u0000\u003c\u0000\u0000\u0000\u0000\u0000\u00e1\u0000\u003c\u0000\u003b\u0000\u0000\u0000\u0000\u0000\u00c8\u0000\u0000\u0000\u0000\u0000\u0036\u0000\u0037\u0000\u00c7\u0000\u0000\u0000\u0000\u0000\u0036\u0000\u0036\u0000\u0001\u0000\u0005\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0004\u0000\uf5c8\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\uffff\uffff\uffff\uffff\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\uf7c0\u0000";
  
  private val data_segment_data_2: String = "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000";
  
  init /* memory */ {
    w2k_Z_memory.put(48736, data_segment_data_0, 9888);
    w2k_Z_memory.put(58624, data_segment_data_1, 508);
    w2k_Z_memory.put(59136, data_segment_data_2, 4280);
  }
  
  init {
  }
  private fun CALL_INDIRECT_0(w2k_table: wasm_rt_impl.Table, w2k_p0: Int, w2k_p1: Int, w2k_p2: Int, w2k_index: Int): Int{
    return wasm_rt_impl.CALL_INDIRECT<(Int, Int, Int) -> Int>(w2k_table, func_types[0], w2k_index)(w2k_p0, w2k_p1, w2k_p2, )
  }
  private fun CALL_INDIRECT_1(w2k_table: wasm_rt_impl.Table, w2k_p0: Int, w2k_p1: Double, w2k_p2: Int, w2k_p3: Int, w2k_p4: Int, w2k_p5: Int, w2k_index: Int): Int{
    return wasm_rt_impl.CALL_INDIRECT<(Int, Double, Int, Int, Int, Int) -> Int>(w2k_table, func_types[1], w2k_index)(w2k_p0, w2k_p1, w2k_p2, w2k_p3, w2k_p4, w2k_p5, )
  }
  private fun CALL_INDIRECT_2(w2k_table: wasm_rt_impl.Table, w2k_p0: Int, w2k_p1: Int, w2k_index: Int): Unit{
    return wasm_rt_impl.CALL_INDIRECT<(Int, Int) -> Unit>(w2k_table, func_types[2], w2k_index)(w2k_p0, w2k_p1, )
  }
}